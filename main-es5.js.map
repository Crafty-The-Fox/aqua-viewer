{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-guard.service.ts","webpack:///src/app/auth/authentication.service.ts","webpack:///src/app/auth/error-interceptor.service.ts","webpack:///src/app/auth/loading-interceptor.service.ts","webpack:///src/app/changelog/changelog.component.ts","webpack:///src/app/changelog/changelog.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/database/database.module.ts","webpack:///src/app/database/preload.service.ts","webpack:///src/app/importer/importer.module.ts","webpack:///src/app/importer/importer/importer.component.ts","webpack:///src/app/importer/importer/importer.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/message.service.ts","webpack:///src/app/message/message.component.ts","webpack:///src/app/message/message.module.ts","webpack:///src/app/sega/chunithm/amazon/amazon-character/amazon-character.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-character/amazon-character.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-profile/amazon-profile.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-profile/amazon-profile.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-rating/amazon-rating.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-rating/amazon-rating.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-recent/amazon-recent.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-recent/amazon-recent.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-setting/amazon-name-setting/amazon-name-setting.dialog.ts","webpack:///src/app/sega/chunithm/amazon/amazon-setting/amazon-name-setting/amazon-name-setting.html","webpack:///src/app/sega/chunithm/amazon/amazon-setting/amazon-setting.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-setting/amazon-setting.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-song-detail/amazon-song-detail.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-song-detail/amazon-song-detail.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-song-playlog/amazon-song-playlog.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-song-playlog/amazon-song-playlog.component.html","webpack:///src/app/sega/chunithm/amazon/amazon-songlist/amazon-songlist.component.ts","webpack:///src/app/sega/chunithm/amazon/amazon-songlist/amazon-songlist.component.html","webpack:///src/app/sega/chunithm/amazon/amazon.module.ts","webpack:///src/app/sega/chunithm/amazon/amazon.routing.ts","webpack:///src/app/sega/chunithm/amazon/model/ChuniMusic.ts","webpack:///src/app/sega/chunithm/amazon/util/cource-id-to-class.pipe.ts","webpack:///src/app/sega/chunithm/amazon/util/rating-class.pipe.ts","webpack:///src/app/sega/chunithm/amazon/util/to-rank.pipe.ts","webpack:///src/app/sega/chunithm/amazon/util/to-rating.pipe.ts","webpack:///src/app/sega/diva/diva-customize/diva-customize.component.ts","webpack:///src/app/sega/diva/diva-customize/diva-customize.component.html","webpack:///src/app/sega/diva/diva-management/diva-contest/diva-contest-edit/diva-contest-edit.component.ts","webpack:///src/app/sega/diva/diva-management/diva-contest/diva-contest-edit/diva-contest-edit.component.html","webpack:///src/app/sega/diva/diva-management/diva-contest/diva-contest.component.ts","webpack:///src/app/sega/diva/diva-management/diva-contest/diva-contest.component.html","webpack:///src/app/sega/diva/diva-management/diva-contest/diva-contest.service.ts","webpack:///src/app/sega/diva/diva-management/diva-festa/diva-festa-edit/diva-festa-edit.component.ts","webpack:///src/app/sega/diva/diva-management/diva-festa/diva-festa-edit/diva-festa-edit.component.html","webpack:///src/app/sega/diva/diva-management/diva-festa/diva-festa.component.ts","webpack:///src/app/sega/diva/diva-management/diva-festa/diva-festa.component.html","webpack:///src/app/sega/diva/diva-management/diva-festa/diva-festa.service.ts","webpack:///src/app/sega/diva/diva-management/diva-management/diva-management.component.ts","webpack:///src/app/sega/diva/diva-management/diva-management/diva-management.component.html","webpack:///src/app/sega/diva/diva-management/diva-news/diva-news.component.ts","webpack:///src/app/sega/diva/diva-management/diva-news/diva-news.component.html","webpack:///src/app/sega/diva/diva-modules/diva-modules.component.ts","webpack:///src/app/sega/diva/diva-modules/diva-modules.component.html","webpack:///src/app/sega/diva/diva-profile/diva-profile.component.ts","webpack:///src/app/sega/diva/diva-profile/diva-profile.component.html","webpack:///src/app/sega/diva/diva-pv-record/diva-pv-record.component.ts","webpack:///src/app/sega/diva/diva-pv-record/diva-pv-record.component.html","webpack:///src/app/sega/diva/diva-pvlist/diva-pvlist.component.ts","webpack:///src/app/sega/diva/diva-pvlist/diva-pvlist.component.html","webpack:///src/app/sega/diva/diva-recent/diva-recent.component.ts","webpack:///src/app/sega/diva/diva-recent/diva-recent.component.html","webpack:///src/app/sega/diva/diva-record-detail/diva-record-detail.component.ts","webpack:///src/app/sega/diva/diva-record-detail/diva-record-detail.component.html","webpack:///src/app/sega/diva/diva-setting/diva-display-setting/diva-display-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-display-setting/diva-display-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-mylist-setting/diva-mylist-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-mylist-setting/diva-mylist-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-name-setting/diva-name-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-name-setting/diva-name-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-plate-setting/diva-plate-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-plate-setting/diva-plate-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-rival-setting/diva-rival-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-rival-setting/diva-rival-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-se-setting/diva-se-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-se-setting/diva-se-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-setting.component.ts","webpack:///src/app/sega/diva/diva-setting/diva-setting.component.html","webpack:///src/app/sega/diva/diva-setting/diva-skin-setting/diva-skin-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-skin-setting/diva-skin-setting.html","webpack:///src/app/sega/diva/diva-setting/diva-title-setting/diva-title-setting.dialog.ts","webpack:///src/app/sega/diva/diva-setting/diva-title-setting/diva-title-setting.html","webpack:///src/app/sega/diva/diva.module.ts","webpack:///src/app/sega/diva/diva.routing.ts","webpack:///src/app/sega/diva/model/DivaPvRecord.ts","webpack:///src/app/sega/diva/model/mannagement/Festa.ts","webpack:///src/app/sega/diva/model/mannagement/contest.ts","webpack:///src/app/sega/diva/util/diva-decimal.pipe.ts","webpack:///src/app/sega/ongeki/model/OngekiEnums.ts","webpack:///src/app/sega/ongeki/ongeki-battle-point/ongeki-battle-point.component.ts","webpack:///src/app/sega/ongeki/ongeki-battle-point/ongeki-battle-point.component.html","webpack:///src/app/sega/ongeki/ongeki-card-gacha/ongeki-card-gacha.component.ts","webpack:///src/app/sega/ongeki/ongeki-card-gacha/ongeki-card-gacha.component.html","webpack:///src/app/sega/ongeki/ongeki-card-list/ongeki-card-list.component.ts","webpack:///src/app/sega/ongeki/ongeki-card-list/ongeki-card-list.component.html","webpack:///src/app/sega/ongeki/ongeki-card/ongeki-card.component.ts","webpack:///src/app/sega/ongeki/ongeki-card/ongeki-card.component.html","webpack:///src/app/sega/ongeki/ongeki-profile/ongeki-profile.component.ts","webpack:///src/app/sega/ongeki/ongeki-profile/ongeki-profile.component.html","webpack:///src/app/sega/ongeki/ongeki-rating/ongeki-rating.component.ts","webpack:///src/app/sega/ongeki/ongeki-rating/ongeki-rating.component.html","webpack:///src/app/sega/ongeki/ongeki-recent/ongeki-recent.component.ts","webpack:///src/app/sega/ongeki/ongeki-recent/ongeki-recent.component.html","webpack:///src/app/sega/ongeki/ongeki-setting/ongeki-setting.component.ts","webpack:///src/app/sega/ongeki/ongeki-setting/ongeki-setting.component.html","webpack:///src/app/sega/ongeki/ongeki-song-list/ongeki-song-list.component.ts","webpack:///src/app/sega/ongeki/ongeki-song-list/ongeki-song-list.component.html","webpack:///src/app/sega/ongeki/ongeki.module.ts","webpack:///src/app/sega/ongeki/ongeki.routing.ts","webpack:///src/app/sega/ongeki/util/to-attribute-class.pipe.ts","webpack:///src/app/sega/ongeki/util/to-battle-sprite.pipe.ts","webpack:///src/app/sega/ongeki/util/to-level-decimal.pipe.ts","webpack:///src/app/sega/ongeki/util/to-tech-sprite.pipe.ts","webpack:///src/app/util/formatnumber.pipe.ts","webpack:///src/app/util/tools.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","authenticationService","loadingSubject","loadingState","asObservable","path","params","get","getHost","data","post","put","currentUserValue","apiServer","next","show","providedIn","Resp","routes","redirectTo","pathMatch","component","canActivate","loadChildren","mod","DivaModule","canLoad","OngekiModule","AmazonModule","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","changeDetectorRef","media","route","api","preLoad","title","loading","ongekiMenu","name","url","dark","amazonMenus","divaMenus","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","user","load","subscription","subscribe","state","removeListener","logout","location","reload","selector","templateUrl","styleUrls","Menu","AppModule","provide","useClass","multi","register","enabled","production","declarations","providers","bootstrap","AuthGuardService","router","currentUser","navigate","AuthenticationService","currentUserSubject","JSON","parse","localStorage","getItem","accessCode","server","pipe","resp","extId","User","setItem","stringify","removeItem","value","ErrorInterceptorService","request","handle","err","console","log","error","message","status","statusText","LoadingInterceptorService","showLoader","event","onEnd","hideLoader","hide","ChangelogComponent","DashboardComponent","dbService","preload","divaPv","divaModule","divaCustomize","chuniMusic","ongekiCard","ongekiCharacter","ongekiMusic","ongekiSkill","chuniCharacter","chuniSkill","divaPvState","divaModuleState","divaCustomizeState","chuniMusicState","ongekiCardState","ongekiCharacterState","ongekiMusicState","ongekiSkillState","chuniCharacterState","chuniSkillState","deleteDatabase","window","DashboardModule","migrationFactory","dbConfig","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","keypath","options","unique","DatabaseModule","PreloadService","loader","storeName","count","pageCount","errorFlag","forEach","x","add","complete","ImporterModule","ImporterComponent","messageService","uploadDocument","target","files","file","type","fileReader","FileReader","onload","j","result","toString","gameId","notice","readAsText","chunithm","ongeki","LoginComponent","fb","loginForm","group","required","navigateByUrl","invalid","f","startsWith","endsWith","substring","length","login","warn","controls","onSubmit","LoginModule","MessageService","messageComponent","openSnackBar","MessageComponent","_snackBar","open","duration","MessageModule","AmazonCharacterComponent","auth","host","assetsHost","currentPage","totalElements","aimeId","String","page","param","set","characters","content","getByID","characterId","m","characterInfo","skillId","skillInfo","currentLevel","level","AmazonProfileComponent","profile","s","str","v","AmazonRatingComponent","topRating","recentRating","topTotal","recentTotal","item","rating","AmazonRecentComponent","difficulty","recent","musicId","songInfo","AmazonNameSettingDialog","dialogRef","close","onNoClick","AmazonSettingComponent","dialog","width","userName","afterClosed","AmazonSongDetailComponent","levels","records","Number","snapshot","paramMap","music","Object","key","enable","push","AmazonSongPlaylogComponent","AmazonSonglistComponent","dataSource","songList","displayedColumns","getAll","paginator","filterValue","filter","trim","toLowerCase","applyFilter","entryComponents","AmazonRoutes","forChild","Difficulty","CourceIdToClassPipe","RatingClass","args","ToRankPipe","ToRatingPipe","Math","floor","DivaCustomizeComponent","p","customizes","y","DivaContestEditComponent","contestService","contest","contestForm","description","startTime","endTime","league","stars","minComplexity","maxComplexity","stages","stageLimit","normaType","bronzeBorders","sliverBorders","goldBorders","pvList","pvDiffList","bronzeContestReward","sliverContestReward","goldContestReward","contestEntryReward","DivaContestComponent","contestLeague","contestStageLimit","contestNormaType","contests","edit","undefined","DivaContestService","currentContest","Date","Intermediate","Limited","Percentage","DivaFestaEditComponent","festaService","festa","festaForm","kind","attributes","addVP","vpMultiplier","start","end","createDate","DivaFestaComponent","festaKind","festas","DivaFestaService","currentFesta","DivaManagementComponent","DivaNewsComponent","createNews","createWarning","newsForm","propertyKey","propertyValue","warningForm","DivaModulesComponent","modules","DivaProfileComponent","pdId","DivaPvRecordComponent","edition","pvRecords","totalPages","pvId","DivaPvlistComponent","DivaRecentComponent","playLogList","performerNumber","moduleIds","split","modulesInfo","DivaRecordDetailComponent","isEdit","moduleLoadFlag","easyRanking","easyPage","normalRanking","normalPage","hardRanking","hardPage","extremeRanking","extremePage","extraExtremeRanking","extraExtremePage","record","customize","customizeFlag","skin","buttonSe","slideSe","chainSlideSe","sliderTouchSe","setModule","customizeForm","getRank","i","price","recordId","diff","DivaDisplaySettingDialog","DivaMylistSettingDialog","DivaNameSettingDialog","DivaPlateSettingDialog","DivaRivalSettingDialog","DivaSeSettingDialog","DivaSettingComponent","rival","loadRival","playerName","levelTitle","plateId","plateEffectId","skinId","commonSkin","myList0","myList1","myList2","myListId","myListData","showInterimRanking","showClearStatus","showGreatBorder","showExcellentBorder","showRivalBorder","showRgoSetting","rivalId","DivaSkinSettingDialog","DivaTitleSettingDialog","DivaRoutes","Edition","Result","FestaKind","ContestLeague","ContestStageLimit","ContestNormaType","DivaDecimalPipe","num","PlayResult","NotesComboResult","BellComboResult","RetireResult","BattleRank","TechnicalRank","AttributeType","OngekiBattlePointComponent","bPList","attribute","indexOf","musicInfo","bossCardId","bossCardInfo","OngekiCardGachaComponent","assets","isStarted","rarity","rList","srList","ssrList","cardResultList","currentShowedIndex","showCurrentCard","submitSuccessful","Array","fill","concat","random","card","submitCardData","setTimeout","showRarityEffect","resetRarityEffect","currentTimeLine","position","skipTime","gotoAndPlay","isSkipable","rarityCanvasContainer","nativeElement","style","opacity","n","rarityCanvas","WIDTH","clientWidth","HEIGHT","clientHeight","height","STAGE","alpha","on","framerate","BACKGROUND","graphics","beginFill","drawRect","canvas","addChild","FLASH","CARD_BITMAP","formatNumber","regX","regY","CARD_SMALL_BITMAP","clone","SHADOW","scale","shadow","tweenCard","loop","wait","to","getPowInOut","tweenCardSmall","tweenFlash","getPowOut","getPowIn","tweenStage","addLabel","addTween","cardId","clickHandler","animations","OngekiCardListComponent","cardList","charaId","z","choKaikaSkillId","choKaikaSkillInfo","OngekiCardComponent","cardInfo","OngekiProfileComponent","character","OngekiRatingComponent","bestList","nextList","newBestList","newNextList","hotBestList","hotNextList","allArray","list","OngekiRecentComponent","battleRank","technicalRank","attributeType","isTechNewRecord","techNewRecord","isBattleNewRecord","battleNewRecord","isOverDamageNewRecord","overDamageNewRecord","isFullCombo","fullCombo","isAllBreak","allBreak","isFullBell","fullBell","bossCharaId","bossCharaInfo","cardId1","cardInfo1","cardId2","cardInfo2","cardId3","cardInfo3","OngekiSettingComponent","OngekiSongListComponent","OngekiRoutes","ToAttributeClassPipe","ToBattleSpritePipe","ToLevelDecimalPipe","replace","charAt","slice","ToTechSpritePipe","FormatnumberPipe","ToolsModule","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {HttpClient, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {AuthenticationService} from './auth/authentication.service';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private loadingSubject = new Subject<LoadingState>();\n  loadingState = this.loadingSubject.asObservable();\n\n  constructor(private http: HttpClient,\n              private authenticationService: AuthenticationService) {\n  }\n\n  get(path: string, params?: HttpParams) {\n    return this.http.get<any>(this.getHost() + path, {params});\n  }\n\n  post(path: string, data?: object, params?: HttpParams) {\n    return this.http.post<any>(this.getHost() + path, data, {params});\n  }\n\n  put(path: string, data?: object, params?: HttpParams) {\n    return this.http.put<any>(this.getHost() + path, data, {params});\n  }\n\n  delete(path: string, params?: HttpParams) {\n    return this.http.delete<any>(this.getHost() + path, {params});\n  }\n\n  getHost(): string {\n    if (this.authenticationService.currentUserValue) {\n      return this.authenticationService.currentUserValue.apiServer + '/';\n    }\n    return 'http://localhost:80' + '/';\n  }\n\n  show() {\n    this.loadingSubject.next({show: true});\n  }\n\n  hide() {\n    this.loadingSubject.next({show: false});\n  }\n\n}\n\nexport class Resp {\n  status: string;\n  data: object;\n}\n\nexport interface LoadingState {\n  show: boolean;\n}\n","import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {AuthGuardService} from './auth/auth-guard.service';\nimport {ChangelogComponent} from './changelog/changelog.component';\nimport {ImporterComponent} from './importer/importer/importer.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService]},\n  {path: 'changelog', component: ChangelogComponent},\n  {path: 'import', component: ImporterComponent},\n  {path: 'diva', loadChildren: () => import('./sega/diva/diva.module').then(mod => mod.DivaModule), canLoad: [AuthGuardService]},\n  {path: 'ongeki', loadChildren: () => import('./sega/ongeki/ongeki.module').then(mod => mod.OngekiModule), canLoad: [AuthGuardService]},\n  {\n    path: 'amazon',\n    loadChildren: () => import('./sega/chunithm/amazon/amazon.module').then(mod => mod.AmazonModule),\n    canLoad: [AuthGuardService]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n","import {ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit} from '@angular/core';\nimport {AuthenticationService, User} from './auth/authentication.service';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {Router} from '@angular/router';\nimport {PreloadService} from './database/preload.service';\nimport {Subscription} from 'rxjs';\nimport {ApiService} from './api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnChanges, OnDestroy {\n  title = 'aqua-viewer';\n\n  user: User;\n\n  loading = false;\n  ongekiMenu: Menu[] = [\n    {\n      id: 0,\n      name: 'Profile',\n      url: 'ongeki/profile'\n    },\n    {\n      id: 1,\n      name: 'Battle Point',\n      url: 'ongeki/battle'\n    },\n    {\n      id: 2,\n      name: 'Rating',\n      url: 'ongeki/rating'\n    },\n    {\n      id: 3,\n      name: 'Recent Play',\n      url: 'ongeki/recent'\n    },\n    {\n      id: 4,\n      name: 'Song List',\n      url: 'ongeki/song'\n    },\n    {\n      id: 5,\n      name: 'Card Maker',\n      url: 'ongeki/card'\n    },\n    {\n      id: 6,\n      name: 'Item',\n      url: 'ongeki/item'\n    },\n    {\n      id: 7,\n      name: 'Setting',\n      url: 'ongeki/setting'\n    }\n  ];\n\n  mobileQuery: MediaQueryList;\n\n  dark = 'dark';\n  amazonMenus: Menu[] = [\n    {\n      id: 0,\n      name: 'Profile',\n      url: 'amazon/profile'\n    },\n    {\n      id: 1,\n      name: 'Rating',\n      url: 'amazon/rating'\n    },\n    {\n      id: 2,\n      name: 'Recent Play',\n      url: 'amazon/recent'\n    },\n    {\n      id: 3,\n      name: 'Song List',\n      url: 'amazon/song'\n    },\n    {\n      id: 4,\n      name: 'Character',\n      url: 'amazon/character'\n    },\n    {\n      id: 5,\n      name: 'Setting',\n      url: 'amazon/setting'\n    }\n  ];\n\n  divaMenus: Menu[] = [\n    {\n      id: 0,\n      name: 'Profile',\n      url: 'diva/profile'\n    },\n    {\n      id: 1,\n      name: 'Pv Record',\n      url: 'diva/record'\n    },\n    {\n      id: 2,\n      name: 'Pv List',\n      url: 'diva/pv'\n    },\n    {\n      id: 3,\n      name: 'Recent Play',\n      url: 'diva/recent'\n    },\n    {\n      id: 4,\n      name: 'Setting',\n      url: 'diva/setting'\n    },\n    {\n      id: 5,\n      name: 'Management',\n      url: 'diva/management'\n    },\n    {\n      id: 6,\n      name: 'Modules',\n      url: 'diva/modules'\n    },\n    {\n      id: 7,\n      name: 'Customizes',\n      url: 'diva/customizes'\n    },\n  ];\n  private subscription: Subscription;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private authenticationService: AuthenticationService,\n    private route: Router,\n    private api: ApiService,\n    private preLoad: PreloadService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n    this.user = authenticationService.currentUserValue;\n  }\n\n  ngOnInit(): void {\n    if (this.user !== null) {\n      this.preLoad.load();\n    }\n    this.subscription = this.api.loadingState.subscribe(\n      state => this.loading = state.show\n    );\n  }\n\n  ngOnChanges(): void {\n    this.user = this.authenticationService.currentUserValue;\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    location.reload(true);\n  }\n}\n\nexport class Menu {\n  id: number;\n  name: string;\n  url: string;\n}\n","<div class=\"container\">\n  <mat-toolbar class=\"toolbar mat-elevation-z6\" color=\"primary\">\n    <button (click)=\"drawer.toggle()\" mat-icon-button>\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n    </button>\n    <span>Aqua Viewer</span>\n    <span class=\"spacer-util\"></span>\n\n    <button *ngIf=\"user\" [matMenuTriggerFor]=\"userMenu\" mat-icon-button>\n      <mat-icon aria-hidden=\"false\" aria-label=\"User menu\">face</mat-icon>\n    </button>\n    <mat-menu #userMenu=\"matMenu\">\n      <button (click)=\"logout()\" mat-menu-item>Logout</button>\n    </mat-menu>\n\n  </mat-toolbar>\n  <mat-progress-bar [class.hide]=\"!loading\" mode=\"indeterminate\"></mat-progress-bar>\n\n  <mat-sidenav-container class=\"sidenav\">\n    <mat-sidenav #drawer [fixedInViewport]=\"true\" [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n                 fixedTopGap=\"56\">\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/dashboard\">Dashboard</a>\n        <a mat-list-item routerLink=\"/import\">Import</a>\n        <mat-divider></mat-divider>\n        <mat-toolbar>O.N.G.E.K.I</mat-toolbar>\n        <a *ngFor=\"let item of ongekiMenu\" mat-list-item routerLink=\"/{{item.url}}\">{{item.name}}</a>\n        <mat-divider></mat-divider>\n        <mat-toolbar>Project DIVA AFT</mat-toolbar>\n        <a *ngFor=\"let item of divaMenus\" mat-list-item routerLink=\"/{{item.url}}\">{{item.name}}</a>\n        <mat-divider></mat-divider>\n        <mat-toolbar>CHUNITHM Amazon</mat-toolbar>\n        <a *ngFor=\"let item of amazonMenus\" mat-list-item routerLink=\"/{{item.url}}\">{{item.name}}</a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <div [class.padding]=\"loading\" class=\"content\">\n        <router-outlet></router-outlet>\n      </div>\n      <app-message></app-message>\n\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MessageModule} from './message/message.module';\nimport {DashboardModule} from './dashboard/dashboard.module';\nimport {LoginModule} from './login/login.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {DivaModule} from './sega/diva/diva.module';\nimport {AmazonModule} from './sega/chunithm/amazon/amazon.module';\nimport {DatabaseModule} from './database/database.module';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {OngekiModule} from './sega/ongeki/ongeki.module';\nimport {ErrorInterceptorService} from './auth/error-interceptor.service';\nimport {LoadingInterceptorService} from './auth/loading-interceptor.service';\nimport {ChangelogComponent} from './changelog/changelog.component';\nimport {ImporterModule} from './importer/importer.module';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChangelogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n\n    NgxPaginationModule,\n    DatabaseModule,\n\n    MessageModule,\n    AppRoutingModule,\n    DashboardModule,\n    LoginModule,\n    ImporterModule,\n    DivaModule,\n    AmazonModule,\n    OngekiModule,\n\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatCardModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production})\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptorService, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptorService, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {AuthenticationService} from './authentication.service';\nimport {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\nimport {Route} from '@angular/compiler/src/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  canLoad(route: Route) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","import {BehaviorSubject, Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  public currentUser: Observable<User>;\n  private currentUserSubject: BehaviorSubject<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(accessCode: string, server: string) {\n    return this.http.post<any>(server + '/' + 'api/sega/aime/getByAccessCode', {accessCode})\n      .pipe(\n        map(\n          resp => {\n            if (resp && resp.extId) {\n              const user = new User(resp.extId, server);\n              localStorage.setItem('currentUser', JSON.stringify(user));\n              this.currentUserSubject.next(user);\n              return user;\n            }\n          }\n        )\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n}\n\nexport class User {\n  extId: number;\n  apiServer: string;\n\n  constructor(extId: number, apiServer: string) {\n    this.extId = extId;\n    this.apiServer = apiServer;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptorService implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      console.log(err);\n      const error = err.error ? err.error.message : err.status + err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ApiService} from '../api.service';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingInterceptorService implements HttpInterceptor {\n\n  constructor(private api: ApiService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.showLoader();\n    return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          this.onEnd();\n        }\n      },\n      (err: any) => {\n        this.onEnd();\n      }));\n  }\n\n  private onEnd(): void {\n    this.hideLoader();\n  }\n\n  private showLoader(): void {\n    this.api.show();\n  }\n\n  private hideLoader(): void {\n    this.api.hide();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrls: ['./changelog.component.css']\n})\nexport class ChangelogComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card>\n  <mat-card-title>Changelog</mat-card-title>\n  <mat-card-content>\n\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {PreloadService} from '../database/preload.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  divaPv = 'Initialize';\n  divaModule = 'Initialize';\n  divaCustomize = 'Initialize';\n  chuniMusic = 'Initialize';\n  ongekiCard = 'Initialize';\n  ongekiCharacter = 'Initialize';\n  ongekiMusic = 'Initialize';\n  ongekiSkill = 'Initialize';\n  chuniCharacter = 'Initialize';\n  chuniSkill = 'Initialize';\n\n  constructor(\n    private dbService: NgxIndexedDBService,\n    private preload: PreloadService\n  ) {\n  }\n\n  ngOnInit() {\n    this.preload.divaPvState.subscribe(data => this.divaPv = data);\n    this.preload.divaModuleState.subscribe(data => this.divaModule = data);\n    this.preload.divaCustomizeState.subscribe(data => this.divaCustomize = data);\n    this.preload.chuniMusicState.subscribe(data => this.chuniMusic = data);\n    this.preload.ongekiCardState.subscribe(data => this.ongekiCard = data);\n    this.preload.ongekiCharacterState.subscribe(data => this.ongekiCharacter = data);\n    this.preload.ongekiMusicState.subscribe(data => this.ongekiMusic = data);\n    this.preload.ongekiSkillState.subscribe(data => this.ongekiSkill = data);\n    this.preload.chuniCharacterState.subscribe(data => this.chuniCharacter = data);\n    this.preload.chuniSkillState.subscribe(data => this.chuniSkill = data);\n  }\n\n  reload() {\n    this.preload.reload();\n    this.dbService.deleteDatabase().then(\n      () => window.location.reload()\n    );\n  }\n\n}\n","<p>\n  Welcome to Aqua Server WebUI<br>\n  This version work with Aqua server v0.0.13\n</p>\n\n<mat-card>\n  <mat-card-title>Data Info</mat-card-title>\n  <mat-card-content>\n    Diva Music List : {{divaPv}}<br>\n    Diva Module List : {{divaPv}}<br>\n    Diva Customize List : {{divaPv}}<br>\n    Chunithm Music List : {{chuniMusic}}<br>\n    Chunithm Character List : {{chuniCharacter}}<br>\n    Chunithm Skill List : {{chuniSkill}}<br>\n    Ongeki Card List : {{ongekiCard}}<br>\n    Ongeki Character List : {{ongekiCharacter}}<br>\n    Ongeki Music List : {{ongekiMusic}}<br>\n    Ongeki Skill List : {{ongekiSkill}}\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button (click)=\"reload()\">Clean Cache</button>\n  </mat-card-actions>\n</mat-card>\n","import {NgModule} from '@angular/core';\n\nimport {DashboardComponent} from './dashboard.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  imports: [\n    MatCardModule,\n    MatButtonModule\n  ],\n  exports: [],\n  declarations: [DashboardComponent],\n  providers: [],\n})\nexport class DashboardModule {\n}\n","import {NgModule} from '@angular/core';\nimport {DBConfig, NgxIndexedDBModule} from 'ngx-indexed-db';\n\nexport function migrationFactory() {\n  return {};\n}\nconst dbConfig: DBConfig = {\n  name: 'Aqua',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'divaPv',\n      storeConfig: {keyPath: 'pvId', autoIncrement: false},\n      storeSchema: [\n        {name: 'bpm', keypath: 'bpm', options: {unique: false}},\n        {name: 'date', keypath: 'date', options: {unique: false}},\n        {name: 'songName', keypath: 'songName', options: {unique: false}},\n        {name: 'songNameEng', keypath: 'songNameEng', options: {unique: false}},\n        {name: 'songNameReading', keypath: 'songNameReading', options: {unique: false}},\n        {name: 'arranger', keypath: 'arranger', options: {unique: false}},\n        {name: 'illustrator', keypath: 'illustrator', options: {unique: false}},\n        {name: 'lyrics', keypath: 'lyrics', options: {unique: false}},\n        {name: 'music', keypath: 'music', options: {unique: false}},\n        {name: 'difficulty', keypath: 'difficulty', options: {unique: false}},\n        {name: 'performerNumber', keypath: 'performerNumber', options: {unique: false}}\n      ]\n    }, {\n      store: 'divaModule',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'price', keypath: 'price', options: {unique: false}}\n      ]\n    }, {\n      store: 'divaCustomize',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'price', keypath: 'price', options: {unique: false}}\n      ]\n    }, {\n      store: 'chuniMusic',\n      storeConfig: {keyPath: 'musicId', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'sotrName', keypath: 'sotrName', options: {unique: false}},\n        {name: 'copyright', keypath: 'copyright', options: {unique: false}},\n        {name: 'artistName', keypath: 'artistName', options: {unique: false}},\n        {name: 'genre', keypath: 'genre', options: {unique: false}},\n        {name: 'releaseVersion', keypath: 'releaseVersion', options: {unique: false}}\n      ]\n    }, {\n      store: 'ongekiCard',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'nickName', keypath: 'nickName', options: {unique: false}},\n        {name: 'attribute', keypath: 'attribute', options: {unique: false}},\n        {name: 'charaId', keypath: 'charaId', options: {unique: false}},\n        {name: 'school', keypath: 'school', options: {unique: false}},\n        {name: 'gakuen', keypath: 'gakuen', options: {unique: false}},\n        {name: 'rarity', keypath: 'rarity', options: {unique: false}},\n        {name: 'levelParam', keypath: 'levelParam', options: {unique: false}},\n        {name: 'skillId', keypath: 'skillId', options: {unique: false}},\n        {name: 'chouKaikaSkillId', keypath: 'chouKaikaSkillId', options: {unique: false}},\n        {name: 'cardNumber', keypath: 'cardNumber', options: {unique: false}},\n        {name: 'version', keypath: 'version', options: {unique: false}},\n      ]\n    }, {\n      store: 'ongekiCharacter',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'cv', keypath: 'cv', options: {unique: false}},\n        {name: 'modelId', keypath: 'modelId', options: {unique: false}}\n      ]\n    }, {\n      store: 'ongekiMusic',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'sortName', keypath: 'sortName', options: {unique: false}},\n        {name: 'artistName', keypath: 'artistName', options: {unique: false}},\n        {name: 'genre', keypath: 'genre', options: {unique: false}},\n        {name: 'bossCardId', keypath: 'bossCardId', options: {unique: false}},\n        {name: 'bossLevel', keypath: 'bossLevel', options: {unique: false}},\n        {name: 'level0', keypath: 'level0', options: {unique: false}},\n        {name: 'level1', keypath: 'level1', options: {unique: false}},\n        {name: 'level2', keypath: 'level2', options: {unique: false}},\n        {name: 'level3', keypath: 'level3', options: {unique: false}},\n        {name: 'level4', keypath: 'level4', options: {unique: false}}\n      ]\n    }, {\n      store: 'ongekiSkill',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'sortName', keypath: 'sortName', options: {unique: false}},\n        {name: 'category', keypath: 'category', options: {unique: false}},\n        {name: 'info', keypath: 'info', options: {unique: false}}\n      ]\n    }, {\n      store: 'chuniCharacter',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'releaseTag', keypath: 'releaseTag', options: {unique: false}},\n        {name: 'worksName', keypath: 'worksName', options: {unique: false}},\n        {name: 'illustratorName', keypath: 'illustratorName', options: {unique: false}},\n        {name: 'firstSkillId', keypath: 'firstSkillId', options: {unique: false}},\n        {name: 'skills', keypath: 'skills', options: {unique: false}},\n        {name: 'addImages', keypath: 'addImages', options: {unique: false}}\n      ]\n    }, {\n      store: 'chuniSkill',\n      storeConfig: {keyPath: 'id', autoIncrement: false},\n      storeSchema: [\n        {name: 'name', keypath: 'name', options: {unique: false}},\n        {name: 'category', keypath: 'category', options: {unique: false}}\n      ]\n    },\n  ],\n  migrationFactory\n};\n\n@NgModule({\n  declarations: [],\n  imports: [\n    NgxIndexedDBModule.forRoot(dbConfig)\n  ]\n})\nexport class DatabaseModule {\n}\n","import {Injectable} from '@angular/core';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {ReplaySubject} from 'rxjs';\nimport {ApiService} from '../api.service';\nimport {DivaPv} from '../sega/diva/model/DivaPv';\nimport {ChuniMusic} from '../sega/chunithm/amazon/model/ChuniMusic';\nimport {DivaModule} from '../sega/diva/model/DivaModule';\nimport {DivaCustomize} from '../sega/diva/model/DivaCustomize';\nimport {OngekiCard} from '../sega/ongeki/model/OngekiCard';\nimport {OngekiCharacter} from '../sega/ongeki/model/OngekiCharacter';\nimport {OngekiMusic} from '../sega/ongeki/model/OngekiMusic';\nimport {OngekiSkill} from '../sega/ongeki/model/OngekiSkill';\nimport {ChuniCharacter} from '../sega/chunithm/amazon/model/ChuniCharacter';\nimport {ChuniSkill} from '../sega/chunithm/amazon/model/ChuniSkill';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreloadService {\n\n  private divaPv = new ReplaySubject<string>();\n  divaPvState = this.divaPv.asObservable();\n  private divaModule = new ReplaySubject<string>();\n  divaModuleState = this.divaModule.asObservable();\n  private divaCustomize = new ReplaySubject<string>();\n  divaCustomizeState = this.divaCustomize.asObservable();\n\n  private chuniMusic = new ReplaySubject<string>();\n  chuniMusicState = this.chuniMusic.asObservable();\n\n  private ongekiCard = new ReplaySubject<string>();\n  ongekiCardState = this.ongekiCard.asObservable();\n  private ongekiCharacter = new ReplaySubject<string>();\n  ongekiCharacterState = this.ongekiCharacter.asObservable();\n  private ongekiMusic = new ReplaySubject<string>();\n  ongekiMusicState = this.ongekiMusic.asObservable();\n  private ongekiSkill = new ReplaySubject<string>();\n  ongekiSkillState = this.ongekiSkill.asObservable();\n\n  private chuniCharacter = new ReplaySubject<string>();\n  chuniCharacterState = this.chuniCharacter.asObservable();\n  private chuniSkill = new ReplaySubject<string>();\n  chuniSkillState = this.chuniSkill.asObservable();\n\n  constructor(\n    private dbService: NgxIndexedDBService,\n    private api: ApiService\n  ) {\n  }\n\n  load() {\n    this.loader<DivaPv>('divaPv', 'api/game/diva/data/musicList', this.divaPv);\n    this.loader<DivaModule>('divaModule', 'api/game/diva/data/moduleList', this.divaModule);\n    this.loader<DivaCustomize>('divaCustomize', 'api/game/diva/data/customizeList', this.divaCustomize);\n    this.loader<ChuniMusic>('chuniMusic', 'api/game/chuni/amazon/music', this.chuniMusic);\n    this.loader<OngekiCard>('ongekiCard', 'api/game/ongeki/data/cardList', this.ongekiCard);\n    this.loader<OngekiCharacter>('ongekiCharacter', 'api/game/ongeki/data/charaList', this.ongekiCharacter);\n    this.loader<OngekiMusic>('ongekiMusic', 'api/game/ongeki/data/musicList', this.ongekiMusic);\n    this.loader<OngekiSkill>('ongekiSkill', 'api/game/ongeki/data/skillList', this.ongekiSkill);\n    this.loader<ChuniCharacter>('chuniCharacter', 'api/game/chuni/amazon/data/character', this.chuniCharacter);\n    this.loader<ChuniSkill>('chuniSkill', 'api/game/chuni/amazon/data/skill', this.chuniSkill);\n  }\n\n  reload() {\n\n  }\n\n  loader<T>(storeName: string, url: string, status: ReplaySubject<string>) {\n    this.dbService.count(storeName).then(\n      pageCount => {\n        if (pageCount > 0) {\n          status.next('OK');\n        } else {\n          status.next('Downloading');\n          this.api.get(url).subscribe(\n            data => {\n              let errorFlag = false;\n              data.forEach(x => {\n                this.dbService.add<T>(storeName, x).then(\n                  () => '', error => {\n                    console.error(error);\n                    errorFlag = true;\n                  }\n                );\n              });\n              if (errorFlag) {\n                status.next('Error');\n              } else {\n                status.next('OK');\n              }\n              status.complete();\n            },\n            error => {\n              console.error(error);\n              status.next('Error');\n              status.complete();\n            }\n          );\n        }\n      });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ImporterComponent} from './importer/importer.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ImporterComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ]\n})\nexport class ImporterModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MessageService} from '../../message.service';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthenticationService} from '../../auth/authentication.service';\n\n@Component({\n  selector: 'app-importer',\n  templateUrl: './importer.component.html',\n  styleUrls: ['./importer.component.css']\n})\nexport class ImporterComponent implements OnInit {\n\n  apiServer: string;\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.authenticationService.currentUserValue) {\n      this.apiServer = this.authenticationService.currentUserValue.apiServer;\n    } else {\n      this.apiServer = 'http://localhost:80';\n    }\n  }\n\n  chunithm(event) {\n    this.uploadDocument(event.target.files[0], 'api/game/chuni/amazon/import', 'SDBT');\n  }\n\n  ongeki(event) {\n    this.uploadDocument(event.target.files[0], 'api/game/ongeki/import', 'SDDT');\n  }\n\n  uploadDocument(file: File, path: string, type: string) {\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const j = JSON.parse(fileReader.result.toString());\n      console.log(j);\n      if (j.gameId === type) {\n        this.http.post(this.apiServer + '/' + path, j).subscribe(\n          data => this.messageService.notice('OK'),\n          error => this.messageService.notice(error)\n        );\n      } else {\n        this.messageService.notice('Wrong Game ID, please check you have select the correct file.');\n      }\n    };\n    fileReader.readAsText(file);\n    this.messageService.notice('Uploading...');\n  }\n}\n","<mat-card>\n  <mat-card-title>\n    Import Data\n  </mat-card-title>\n  <mat-card-content>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>API Server</mat-label>\n      <input [(ngModel)]=\"apiServer\" matInput placeholder=\"\">\n    </mat-form-field>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>\n    CHUNITHM\n  </mat-card-title>\n  <mat-card-content>\n    <input (change)=\"chunithm($event)\" accept=\".json\" class=\"upload-button\" type='file'>\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>\n    ONGEKI\n  </mat-card-title>\n  <mat-card-content>\n    <input (change)=\"ongeki($event)\" accept=\".json\" class=\"upload-button\" type='file'>\n  </mat-card-content>\n</mat-card>\n","import {Router} from '@angular/router';\nimport {AuthenticationService} from '../auth/authentication.service';\nimport {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MessageService} from '../message.service';\nimport {first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private messageService: MessageService\n  ) {\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      accessCode: ['', Validators.required],\n      apiServer: ['http://localhost:80', Validators.required],\n    });\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigateByUrl('/dashboard');\n    }\n  }\n\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    let server: string = this.f.apiServer.value;\n    if (!server.startsWith('http')) {\n      server = 'http://' + server;\n    }\n\n    if (server.endsWith('/')) {\n      server = server.substring(0, server.length - 1);\n    }\n\n    this.authenticationService.login(this.f.accessCode.value, server).pipe(first())\n      .subscribe(\n        data => {\n          if (data != null) {\n            this.messageService.notice('OK');\n            location.reload(true);\n          } else {\n            this.messageService.notice('No such Card');\n          }\n        },\n        error => {\n          this.messageService.notice(error.message);\n          console.warn('login fail', error);\n        }\n      );\n\n  }\n}\n","<mat-card class=\"login-card\">\n  <mat-card-title>\n    Login\n  </mat-card-title>\n  <mat-card-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Access Code</mat-label>\n        <input formControlName=\"accessCode\" matInput required type=\"text\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>ApiServer</mat-label>\n        <input formControlName=\"apiServer\" matInput required type=\"text\">\n      </mat-form-field>\n      <button [disabled]=\"!loginForm.valid\" mat-raised-button type=\"submit\">Login</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import {NgModule} from '@angular/core';\n\nimport {LoginComponent} from './login.component';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AppRoutingModule} from '../app-routing.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  imports: [\n    LayoutModule,\n    FormsModule,\n    AppRoutingModule,\n\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n  ],\n  exports: [],\n  declarations: [LoginComponent],\n  providers: [],\n})\nexport class LoginModule {\n}\n","import {MessageComponent} from './message/message.component';\nimport {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  constructor(private messageComponent: MessageComponent) {\n  }\n\n  notice(message: string) {\n    this.messageComponent.openSnackBar(message);\n  }\n}\n","import {Component, Injectable, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n\n\n  constructor(\n    private _snackBar: MatSnackBar\n  ) {\n  }\n\n\n  ngOnInit() {\n    this.openSnackBar('Initialized');\n  }\n\n  public openSnackBar(message: string) {\n    this._snackBar.open(message, 'OK', {\n      duration: 2000,\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\n\nimport {MessageComponent} from './message.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    MatSnackBarModule,\n    MatButtonModule\n  ],\n  exports: [MessageComponent],\n  declarations: [MessageComponent],\n  providers: [],\n})\nexport class MessageModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../../api.service';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {MessageService} from '../../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {HttpParams} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {AmazonCharacter} from '../model/AmazonCharacter';\nimport {ChuniCharacter} from '../model/ChuniCharacter';\nimport {environment} from '../../../../../environments/environment';\nimport {ChuniSkill} from '../model/ChuniSkill';\n\n@Component({\n  selector: 'app-amazon-character',\n  templateUrl: './amazon-character.component.html',\n  styleUrls: ['./amazon-character.component.css']\n})\nexport class AmazonCharacterComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  aimeId: string;\n\n  characters: Observable<AmazonCharacter[]>;\n\n  currentPage = 1;\n  totalElements = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    this.load(this.currentPage);\n  }\n\n  load(page: number) {\n    const param = new HttpParams().set('aimeId', this.aimeId).set('page', String(page - 1));\n    this.characters = this.api.get('api/game/chuni/amazon/character', param).pipe(\n      tap(\n        data => {\n          this.totalElements = data.totalElements;\n          this.currentPage = page;\n        }\n      ),\n      map(\n        data => {\n          data.content.forEach(x => {\n            this.dbService.getByID<ChuniCharacter>('chuniCharacter', x.characterId).then(\n              m => x.characterInfo = m\n            );\n            this.dbService.getByID<ChuniSkill>('chuniSkill', x.skillId).then(\n              m => x.skillInfo = m\n            );\n          });\n          return data.content;\n        },\n        error => this.messageService.notice(error)\n      )\n    );\n  }\n\n  levelUp(characterId: number, currentLevel: number) {\n    this.api.post('api/game/chuni/amazon/character', {\n      aimeId: this.aimeId,\n      characterId,\n      level: currentLevel + 1\n    }).subscribe(data => {\n      this.load(this.currentPage);\n    }, error => this.messageService.notice(error));\n  }\n}\n","<mat-card>\n  <mat-card-title>Characters</mat-card-title>\n  <mat-card-actions>\n    <button mat-button>Show All</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card\n  *ngFor=\"let item of characters | async | paginate: { id: 'server', itemsPerPage: 10, currentPage: currentPage, totalItems: totalElements }\">\n  <mat-card-title>\n    {{item.characterInfo ? item.characterInfo.name : 'ID:' + item.characterId}}\n  </mat-card-title>\n  <mat-card-content>\n    <div class=\"character-display\">\n      <div class=\"image\">\n        <a href=\"{{host}}chuni/amazon/chara/CHU_UI_Character_{{item.characterId|formatNumber:4}}_00_00.png\"\n           target=\"_blank\">\n          <img src=\"{{host}}chuni/amazon/chara/CHU_UI_Character_{{item.characterId|formatNumber:4}}_00_00.png\">\n        </a>\n      </div>\n      <div class=\"content\">\n        <table class=\"zebra\">\n          <tr>\n            <th>Level</th>\n            <td>{{item.level}}</td>\n          </tr>\n          <tr>\n            <th>Friendship Exp</th>\n            <td>{{item.friendshipExp}}</td>\n          </tr>\n          <tr>\n            <th>Play Count</th>\n            <td>{{item.playCount}}</td>\n          </tr>\n          <tr>\n            <th>Skill</th>\n            <td>{{item.skillInfo ? item.skillInfo.name : 'SkillId: ' + item.skillId}}<br>\n              {{item.skillInfo ? item.skillInfo.category : ''}}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </mat-card-content>\n  <mat-card-actions>\n    <div fxFlex></div>\n    <button (click)=\"levelUp(item.characterId, item.level)\"\n            mat-button>\n      LevelUp\n    </button>\n  </mat-card-actions>\n</mat-card>\n<div class=\"pagination\">\n  <pagination-controls (pageChange)=\"load($event)\" id=\"server\"></pagination-controls>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MessageService} from '../../../../message.service';\nimport {AmazonProfile} from '../model/AmazonProfile';\nimport {ApiService} from '../../../../api.service';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {HttpParams} from '@angular/common/http';\n\n@Component({\n  selector: 'app-amazon-profile',\n  templateUrl: './amazon-profile.component.html',\n  styleUrls: ['./amazon-profile.component.css']\n})\nexport class AmazonProfileComponent implements OnInit {\n\n  profile: AmazonProfile;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n  ) {\n  }\n\n  ngOnInit() {\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', aimeId);\n    this.api.get('api/game/chuni/amazon/profile', param).subscribe(\n      data => {\n        this.profile = data;\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n  getRatingRank(s: number): number {\n    switch (true) {\n      case (s < 2.0):\n        return 1;\n      case (s < 4.0):\n        return 2;\n      case (s < 7.0):\n        return 3;\n      case (s < 10.0):\n        return 4;\n      case (s < 12.0):\n        return 5;\n      case (s < 13.0):\n        return 6;\n      case (s < 14.0):\n        return 7;\n      case (s < 14.5):\n        return 8;\n      case (s < 15.0):\n        return 9;\n      case (s >= 15.0):\n        return 10;\n    }\n  }\n\n  formatNumber(value: number, length?: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n      str = '0' + str;\n    }\n    return str;\n  }\n\n  getClass(v: number): number {\n    switch (true) {\n      case (v === 10):\n        return 1;\n      case (v === 11):\n        return 2;\n      case (v === 12):\n        return 3;\n      case (v === 13):\n        return 4;\n      case (v === 14):\n        return 5;\n      case (v === 20):\n        return 6; // infinity\n      case (v === 21):\n        return 7; // class unknown\n    }\n  }\n\n}\n\n\n","<mat-card>\n  <mat-card-title>Player Profile</mat-card-title>\n  <mat-card-content>\n    <table *ngIf=\"profile\" class=\"zebra\">\n      <tr>\n        <th>Player Name</th>\n        <td>{{profile.userName}}</td>\n      </tr>\n      <tr>\n        <th>Player Rating</th>\n        <td>{{profile.playerRating / 100}}</td>\n      </tr>\n      <tr>\n        <th>Player Highest Rating</th>\n        <td>{{profile.highestRating / 100}}</td>\n      </tr>\n      <tr>\n        <th>Player Level</th>\n        <td>{{profile.level}}</td>\n      </tr>\n      <tr>\n        <th>Total Play Count</th>\n        <td>{{profile.playCount}}</td>\n      </tr>\n      <tr>\n        <th>Name Plate Id</th>\n        <td>{{profile.nameplateId}}</td>\n      </tr>\n      <tr>\n        <th>Frame Id</th>\n        <td>{{profile.frameId}}</td>\n      </tr>\n      <tr>\n        <th>Character Id</th>\n        <td>{{profile.characterId}}</td>\n      </tr>\n      <tr>\n        <th>Last Play</th>\n        <td>{{profile.lastPlayDate}}</td>\n      </tr>\n      <tr>\n        <th>Total High Score</th>\n        <td>{{profile.totalHiScore}}</td>\n      </tr>\n      <tr>\n        <th>Total Basic High Score</th>\n        <td>{{profile.totalBasicHighScore}}</td>\n      </tr>\n      <tr>\n        <th>Total Advanced High Score</th>\n        <td>{{profile.totalAdvancedHighScore}}</td>\n      </tr>\n      <tr>\n        <th>Total Expert High Score</th>\n        <td>{{profile.totalExpertHighScore}}</td>\n      </tr>\n      <tr>\n        <th>Total Master High Score</th>\n        <td>{{profile.totalMasterHighScore}}</td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {MessageService} from '../../../../message.service';\nimport {ApiService} from '../../../../api.service';\nimport {HttpParams} from '@angular/common/http';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {environment} from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-amazon-rating',\n  templateUrl: './amazon-rating.component.html',\n  styleUrls: ['./amazon-rating.component.css']\n})\nexport class AmazonRatingComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  topRating: RatingItem[] = [];\n  recentRating: RatingItem[] = [];\n  topTotal = 0;\n  recentTotal = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService\n  ) {\n  }\n\n  ngOnInit() {\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', aimeId);\n    this.api.get('api/game/chuni/amazon/rating', param).subscribe(\n      data => {\n        this.topRating = data;\n        if (this.topRating.length === 0) {\n          this.messageService.notice('No Data');\n        }\n        this.topRating.forEach(item => this.topTotal += item.rating);\n      },\n      error => this.messageService.notice(error)\n    );\n\n    this.api.get('api/game/chuni/amazon/rating/recent', param).subscribe(\n      data => {\n        this.recentRating = data;\n        if (this.recentRating.length === 0) {\n          this.messageService.notice('No Data');\n        }\n        this.recentRating.forEach(item => this.recentTotal += item.rating);\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n\nexport interface RatingItem {\n  musicId: number;\n  musicName: string;\n  artistName: string;\n  level: number;\n  score: number;\n  ratingBase: number;\n  rating: number;\n}\n","<div>\n  <mat-card>\n    <h3>Total Rating <span\n      class=\"{{(topTotal + recentTotal) / 40 | toRating | ratingClass}}\">{{(topTotal + recentTotal) / 40 | toRating }}</span>\n    </h3>\n    <h3>Top <span class=\"{{topTotal / 30 | toRating | ratingClass}}\">{{topTotal / 30 | toRating }}</span></h3>\n    <h3>Recent <span class=\"{{recentTotal / 10 | toRating | ratingClass}}\">{{recentTotal / 10 | toRating }}</span></h3>\n  </mat-card>\n</div>\n<div fxLayout=\"row wrap\" fxLayout.sm=\"column\" fxLayout.xs=\"column\">\n\n  <div class=\"skill-card\" fxFlex=\"45\">\n    <mat-card>\n      <h3>Top</h3>\n      <table class=\"zebra\">\n        <thead>\n        <th>Music</th>\n        <th>Diff</th>\n        <th>Score</th>\n        <th>Rating</th>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let item of topRating; index as i\">\n          <td>\n            <img src=\"{{host}}chuni/jacket/CHU_UI_Jacket_{{item.musicId|formatNumber:4}}.jpg\">\n            {{i + 1}}: {{item.musicName}}\n          </td>\n          <td>\n            {{item.ratingBase|toRating}}\n          </td>\n          <td>\n            {{item.score}}\n          </td>\n          <td>\n            <span class=\"{{item.rating|toRating|ratingClass}}\">{{item.rating|toRating}}</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </mat-card>\n  </div>\n  <div fxFlex=\"10\">\n  </div>\n  <div class=\"skill-card\" fxFlex=\"45\">\n    <mat-card>\n      <h3>Recent</h3>\n      <table class=\"zebra\">\n        <thead>\n        <th>Music</th>\n        <th>Diff</th>\n        <th>Score</th>\n        <th>Rating</th>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let item of recentRating; index as i\">\n          <td>\n            <img src=\"{{host}}chuni/jacket/CHU_UI_Jacket_{{item.musicId|formatNumber:4}}.jpg\">\n            {{i + 1}}: {{item.musicName}}\n          </td>\n          <td>\n            {{item.ratingBase|toRating}}\n          </td>\n          <td>\n            {{item.score}}\n          </td>\n          <td>\n            <span class=\"{{item.rating|toRating|ratingClass}}\">{{item.rating|toRating}}</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </mat-card>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../../api.service';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {MessageService} from '../../../../message.service';\nimport {HttpParams} from '@angular/common/http';\nimport {AmazonPlayLog} from '../model/AmazonPlayLog';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {ChuniMusic, Difficulty} from '../model/ChuniMusic';\nimport {environment} from '../../../../../environments/environment';\nimport {map, tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-amazon-recent',\n  templateUrl: './amazon-recent.component.html',\n  styleUrls: ['./amazon-recent.component.css']\n})\nexport class AmazonRecentComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  aimeId: string;\n\n  recent: Observable<AmazonPlayLog[]>;\n  difficulty = Difficulty;\n\n  currentPage = 1;\n  totalElements = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    this.load(this.currentPage);\n  }\n\n  load(page: number) {\n    const param = new HttpParams().set('aimeId', this.aimeId).set('page', String(page - 1));\n    this.recent = this.api.get('api/game/chuni/amazon/recent', param).pipe(\n      tap(\n        data => {\n          this.totalElements = data.totalElements;\n          this.currentPage = page;\n        }\n      ),\n      map(\n        data => {\n          data.content.forEach(x => {\n            this.dbService.getByID<ChuniMusic>('chuniMusic', x.musicId).then(\n              m => x.songInfo = m\n            );\n          });\n          return data.content;\n        },\n        error => this.messageService.notice(error)\n      )\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    Recent Play\n  </mat-card-title>\n</mat-card>\n<div *ngIf=\"recent\" class=\"record\">\n  <mat-card\n    *ngFor=\"let item of recent | async | paginate: { id: 'server', itemsPerPage: 10, currentPage: currentPage, totalItems: totalElements }\"\n    routerLink=\"/amazon/song/{{item.musicId}}\">\n    <mat-card-title>{{item.userPlayDate}}</mat-card-title>\n    <mat-card-content>\n      <div class=\"song-header\">\n        <img src=\"{{host}}chuni/jacket/CHU_UI_Jacket_{{item.musicId|formatNumber:4}}.jpg\">\n        <div class=\"song-info\">\n          <span class=\"title\">{{item.songInfo != null ? item.songInfo.name : 'musicId:' + item.musicId}}</span><br>\n          <span\n            class=\"info\">{{item.songInfo != null ? item.songInfo.artistName : ''}}</span>\n        </div>\n        <div class=\"level\">\n          {{difficulty[item.level]}}\n        </div>\n      </div>\n\n      <div class=\"result-content\">\n        <div class=\"left\">\n          Rank:<br>\n          <span class=\"achievement-value\">{{item.rank|toRank}}</span>\n          <br>\n          <br>Score:<br>\n          <span class=\"score-value\">{{item.score}}</span>\n          <br>\n          <br>{{item.isNewRecord ? 'NEW RECORD' : ''}}<br>\n        </div>\n        <div class=\"right\">\n          <table class=\"zebra\">\n            <tr>\n              <th>JUSTICE C.</th>\n              <td>{{item.judgeCritical}}</td>\n              <td>TAP</td>\n              <td>{{item.rateTap / 100}}%</td>\n            </tr>\n            <tr>\n              <th>JUSTICE</th>\n              <td>{{item.judgeJustice}}</td>\n              <td>HOLD</td>\n              <td>{{item.rateHold / 100}}%</td>\n            </tr>\n            <tr>\n              <th>ATTACK</th>\n              <td>{{item.judgeAttack}}</td>\n              <td>SLIDE</td>\n              <td>{{item.rateSlide / 100}}%</td>\n            </tr>\n            <tr>\n              <th>MISS</th>\n              <td>{{item.judgeGuilty}}</td>\n              <td>AIR</td>\n              <td>{{item.rateAir / 100}}%</td>\n            </tr>\n            <tr>\n              <th>Combo</th>\n              <td>{{item.maxCombo}}</td>\n              <td>FLICK</td>\n              <td>{{item.rateFlick / 100}}%</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <div class=\"pagination\">\n    <pagination-controls (pageChange)=\"load($event)\" id=\"server\"></pagination-controls>\n  </div>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'amazon-name-setting-dialog',\n  templateUrl: 'amazon-name-setting.html',\n})\nexport class AmazonNameSettingDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<AmazonNameSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: AmazonNameSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface AmazonNameSettingData {\n  userName: string;\n}\n","<h1 mat-dialog-title>Change User Name</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input [(ngModel)]=\"data.userName\" matInput>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data.userName\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../../api.service';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {MessageService} from '../../../../message.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AmazonProfile} from '../model/AmazonProfile';\nimport {HttpParams} from '@angular/common/http';\nimport {AmazonNameSettingDialog} from './amazon-name-setting/amazon-name-setting.dialog';\n\n@Component({\n  selector: 'app-amazon-setting',\n  templateUrl: './amazon-setting.component.html',\n  styleUrls: ['./amazon-setting.component.css']\n})\nexport class AmazonSettingComponent implements OnInit {\n\n  profile: AmazonProfile;\n  aimeId: string;\n  apiServer: string;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    this.apiServer = this.auth.currentUserValue.apiServer;\n    const param = new HttpParams().set('aimeId', this.aimeId);\n    this.api.get('api/game/chuni/amazon/profile', param).subscribe(\n      data => {\n        this.profile = data;\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n  userName() {\n    const dialogRef = this.dialog.open(AmazonNameSettingDialog, {\n      width: '250px',\n      data: {userName: this.profile.userName}\n    });\n\n    dialogRef.afterClosed().subscribe(userName => {\n      if (userName) {\n        this.api.put('api/game/chuni/amazon/profile/userName', {aimeId: this.aimeId, userName}).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n}\n","<mat-card>\n  <mat-card-title>CHUNITHM Settings</mat-card-title>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>Username</mat-card-title>\n  <mat-card-content *ngIf=\"profile\">\n    <div class=\"content\">{{profile.userName}}</div>\n    <div class=\"action\">\n      <button (click)=\"userName()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>Privacy</mat-card-title>\n  <mat-card-content *ngIf=\"profile\">\n    <div class=\"content\">Hide Rating Info:</div>\n    <div class=\"action\">\n      <button (click)=\"null\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>Export data</mat-card-title>\n  <mat-card-content>\n    <div class=\"action\">\n      <a href=\"{{apiServer + '/api/game/chuni/amazon/export?aimeId=' + aimeId}}\" mat-button target=\"_blank\">Download</a>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ApiService} from '../../../../api.service';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {ChuniMusic, ChuniMusicLevelInfo, Difficulty} from '../model/ChuniMusic';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {environment} from '../../../../../environments/environment';\nimport {HttpParams} from '@angular/common/http';\nimport {MessageService} from '../../../../message.service';\nimport {AmazonRecord} from '../model/AmazonRecord';\n\n@Component({\n  selector: 'app-amazon-song-detail',\n  templateUrl: './amazon-song-detail.component.html',\n  styleUrls: ['./amazon-song-detail.component.css']\n})\nexport class AmazonSongDetailComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  id: number;\n  music: ChuniMusic;\n  levels: ChuniMusicLevelInfo[] = [];\n  difficulty = Difficulty;\n  records: AmazonRecord[] = [null, null, null, null, null];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', String(aimeId));\n    this.dbService.getByID<ChuniMusic>('chuniMusic', this.id).then(x => {\n      if (x) {\n        this.music = x;\n        for (const key of Object.keys(this.music.levels)) {\n          if (this.music.levels[key].enable) {\n            this.levels.push(this.music.levels[key]);\n          }\n        }\n      }\n\n    });\n    this.api.get('api/game/chuni/amazon/song/' + this.id, param).subscribe(\n      data => {\n        console.log(data);\n        data.forEach(x => {\n          this.records[x.level] = x;\n        });\n      },\n      error => this.messageService.notice(error)\n    );\n\n  }\n\n}\n","<div>\n  <mat-card>\n    <mat-card-content>\n      <div class=\"song-info\">\n        <img *ngIf=\"music\" src=\"{{host}}chuni/jacket/CHU_UI_Jacket_{{music.musicId|formatNumber:4}}.jpg\">\n        <div class=\"text-content\">\n          <span class=\"title\">{{music != null ? music.name : 'musicId:' + id}}</span><br>\n          <span\n            class=\"info\">{{music != null ? 'Artist: ' + music.artistName : ''}}</span><br>\n          <span\n            class=\"info\">{{music != null ? 'Genre: ' + music.genre : ''}}</span><br>\n          <span\n            class=\"info\">{{music != null ? 'Release Version: ' + music.releaseVersion : ''}}</span>\n        </div>\n\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card *ngFor=\"let item of levels\">\n    <mat-card-title>\n      <div class=\"level-title\">\n        <div class=\"difficulty\">\n          {{difficulty[item.diff]}}\n        </div>\n        <div class=\"level\">\n          {{'Level: ' + item.level + '.' + item.levelDecimal}}\n        </div>\n      </div>\n    </mat-card-title>\n    <ng-container *ngIf=\"records[item.diff] as record; else no_record\">\n      <mat-card-content>\n        <div class=\"result-content\">\n          <div class=\"left\">\n            Max Rank:<br>\n            <span class=\"achievement-value\">{{record.scoreRank|toRank}}</span>\n            <br>\n            <br>Max Score:<br>\n            <span class=\"score-value\">{{record.scoreMax}}</span>\n            <br>\n          </div>\n          <table class=\"zebra\">\n            <tr>\n              <th>Is AJ?</th>\n              <td>{{record.isAllJustice}}</td>\n              <td>Play Count</td>\n              <td>{{record.playCount}}</td>\n            </tr>\n            <tr>\n              <th>Is FC?</th>\n              <td>{{record.isFullCombo}}</td>\n              <td>Max Combo</td>\n              <td>{{record.maxComboCount}}</td>\n            </tr>\n            <tr>\n              <th>Is Clear?</th>\n              <td>{{record.isSuccess}}</td>\n              <td>Miss Count</td>\n              <td>{{record.missCount}}</td>\n            </tr>\n          </table>\n        </div>\n        <mat-card-actions>\n          <button mat-flat-button routerLink=\"{{item.diff}}\">Show all play history</button>\n        </mat-card-actions>\n      </mat-card-content>\n    </ng-container>\n    <ng-template #no_record>\n      <mat-card-content>\n        No play record\n      </mat-card-content>\n    </ng-template>\n  </mat-card>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {environment} from '../../../../../environments/environment';\nimport {AmazonPlayLog} from '../model/AmazonPlayLog';\nimport {HttpParams} from '@angular/common/http';\nimport {ChuniMusic, Difficulty} from '../model/ChuniMusic';\nimport {ApiService} from '../../../../api.service';\nimport {AuthenticationService} from '../../../../auth/authentication.service';\nimport {MessageService} from '../../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-amazon-song-playlog',\n  templateUrl: './amazon-song-playlog.component.html',\n  styleUrls: ['./amazon-song-playlog.component.css']\n})\nexport class AmazonSongPlaylogComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  id: number;\n  level: number;\n  records: AmazonPlayLog[] = [];\n  songInfo: ChuniMusic;\n  difficulty = Difficulty;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    this.level = Number(this.route.snapshot.paramMap.get('level'));\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', aimeId);\n    this.api.get('api/game/chuni/amazon/song/' + this.id + '/' + this.level, param).subscribe(\n      data => {\n        data.forEach(x => {\n          this.records.push(x);\n        });\n      },\n      error => this.messageService.notice(error)\n    );\n    this.dbService.getByID<ChuniMusic>('chuniMusic', this.id).then(\n      m => this.songInfo = m\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    Play History\n  </mat-card-title>\n</mat-card>\n\n<div *ngIf=\"records\">\n  <mat-card *ngFor=\"let item of records\" class=\"record\" routerLink=\"/amazon/song/{{item.musicId}}\">\n    <mat-card-title>{{item.userPlayDate}}</mat-card-title>\n    <mat-card-content>\n      <div class=\"song-header\">\n        <img src=\"{{host}}chuni/jacket/CHU_UI_Jacket_{{id|formatNumber:4}}.jpg\">\n        <div class=\"song-info\">\n          <span class=\"title\">{{songInfo != null ? songInfo.name : 'musicId:' + id}}</span><br>\n          <span\n            class=\"info\">{{songInfo != null ? songInfo.artistName : ''}}</span>\n        </div>\n        <div class=\"level\">\n          {{difficulty[item.level]}}\n        </div>\n      </div>\n\n      <div class=\"result-content\">\n        <div class=\"left\">\n          Rank:<br>\n          <span class=\"achievement-value\">{{item.rank|toRank}}</span>\n          <br>\n          <br>Score:<br>\n          <span class=\"score-value\">{{item.score}}</span>\n          <br>\n          <br>{{item.isNewRecord ? 'NEW RECORD' : ''}}<br>\n        </div>\n        <table class=\"zebra\">\n          <tr>\n            <th>JUSTICE C.</th>\n            <td>{{item.judgeCritical}}</td>\n            <td>TAP</td>\n            <td>{{item.rateTap / 100}}%</td>\n          </tr>\n          <tr>\n            <th>JUSTICE</th>\n            <td>{{item.judgeJustice}}</td>\n            <td>HOLD</td>\n            <td>{{item.rateHold / 100}}%</td>\n          </tr>\n          <tr>\n            <th>ATTACK</th>\n            <td>{{item.judgeAttack}}</td>\n            <td>SLIDE</td>\n            <td>{{item.rateSlide / 100}}%</td>\n          </tr>\n          <tr>\n            <th>MISS</th>\n            <td>{{item.judgeGuilty}}</td>\n            <td>AIR</td>\n            <td>{{item.rateAir / 100}}%</td>\n          </tr>\n          <tr>\n            <th>Combo</th>\n            <td>{{item.maxCombo}}</td>\n            <td>FLICK</td>\n            <td>{{item.rateFlick / 100}}%</td>\n          </tr>\n        </table>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ChuniMusic} from '../model/ChuniMusic';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\n\n@Component({\n  selector: 'app-amazon-songlist',\n  templateUrl: './amazon-songlist.component.html',\n  styleUrls: ['./amazon-songlist.component.css']\n})\nexport class AmazonSonglistComponent implements OnInit {\n\n  dataSource = new MatTableDataSource();\n  songList: ChuniMusic[] = [];\n  displayedColumns: string[] = ['musicId', 'name', 'artistName'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private dbService: NgxIndexedDBService) {\n  }\n\n  ngOnInit() {\n    this.dbService.getAll<ChuniMusic>('chuniMusic').then(\n      x => {\n        this.songList = x;\n        this.dataSource.data = this.songList;\n      }\n    );\n    this.dataSource.paginator = this.paginator;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-form-field>\n  <input (keyup)=\"applyFilter($event.target.value)\" matInput placeholder=\"Filter\">\n</mat-form-field>\n<table [dataSource]=\"dataSource\" mat-table matSort>\n  <ng-container matColumnDef=\"musicId\">\n    <th *matHeaderCellDef mat-header-cell> Id.</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.musicId}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"name\">\n    <th *matHeaderCellDef mat-header-cell> Name</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.name}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"artistName\">\n    <th *matHeaderCellDef mat-header-cell> Artist</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.artistName}} </td>\n  </ng-container>\n  <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n  <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row routerLink=\"/amazon/song/{{row.musicId}}\"></tr>\n\n</table>\n<mat-paginator [pageSizeOptions]=\"[15, 50, 100]\"></mat-paginator>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {AmazonRoutes} from './amazon.routing';\nimport {AmazonProfileComponent} from './amazon-profile/amazon-profile.component';\nimport {AmazonRatingComponent} from './amazon-rating/amazon-rating.component';\nimport {ToRatingPipe} from './util/to-rating.pipe';\nimport {RatingClass} from './util/rating-class.pipe';\nimport {CourceIdToClassPipe} from './util/cource-id-to-class.pipe';\nimport {AmazonRecentComponent} from './amazon-recent/amazon-recent.component';\nimport {ToRankPipe} from './util/to-rank.pipe';\nimport {AmazonSettingComponent} from './amazon-setting/amazon-setting.component';\nimport {AmazonNameSettingDialog} from './amazon-setting/amazon-name-setting/amazon-name-setting.dialog';\nimport {AmazonCharacterComponent} from './amazon-character/amazon-character.component';\nimport {AmazonSonglistComponent} from './amazon-songlist/amazon-songlist.component';\nimport {AmazonSongDetailComponent} from './amazon-song-detail/amazon-song-detail.component';\nimport {AmazonSongPlaylogComponent} from './amazon-song-playlog/amazon-song-playlog.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {ToolsModule} from '../../../util/tools.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    AmazonRoutes,\n\n    MatFormFieldModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    FlexLayoutModule,\n    NgxPaginationModule,\n    ToolsModule\n  ],\n  declarations: [\n    AmazonProfileComponent,\n    AmazonRatingComponent,\n    ToRatingPipe,\n    RatingClass,\n    CourceIdToClassPipe,\n    AmazonRecentComponent,\n    ToRankPipe,\n    AmazonSettingComponent,\n    AmazonNameSettingDialog,\n    AmazonCharacterComponent,\n    AmazonSonglistComponent,\n    AmazonSongDetailComponent,\n    AmazonSongPlaylogComponent\n  ],\n  entryComponents: [\n    AmazonNameSettingDialog\n  ]\n})\nexport class AmazonModule {\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {AmazonProfileComponent} from './amazon-profile/amazon-profile.component';\nimport {AmazonRatingComponent} from './amazon-rating/amazon-rating.component';\nimport {AmazonRecentComponent} from './amazon-recent/amazon-recent.component';\nimport {AmazonSettingComponent} from './amazon-setting/amazon-setting.component';\nimport {AmazonSonglistComponent} from './amazon-songlist/amazon-songlist.component';\nimport {AmazonCharacterComponent} from './amazon-character/amazon-character.component';\nimport {AmazonSongDetailComponent} from './amazon-song-detail/amazon-song-detail.component';\nimport {AmazonSongPlaylogComponent} from './amazon-song-playlog/amazon-song-playlog.component';\n\nconst routes: Routes = [\n  {path: 'profile', component: AmazonProfileComponent},\n  {path: 'rating', component: AmazonRatingComponent},\n  {path: 'recent', component: AmazonRecentComponent},\n  {path: 'song', component: AmazonSonglistComponent},\n  {path: 'song/:id', component: AmazonSongDetailComponent},\n  {path: 'song/:id/:level', component: AmazonSongPlaylogComponent},\n  {path: 'character', component: AmazonCharacterComponent},\n  {path: 'setting', component: AmazonSettingComponent},\n];\n\nexport const AmazonRoutes = RouterModule.forChild(routes);\n","export interface ChuniMusic {\n  musicId: number;\n  name: string;\n  sotrName: string;\n  copyright: string;\n  artistName: string;\n  genre: string;\n  releaseVersion: string;\n  levels: ChuniMusicLevels;\n}\n\nexport interface ChuniMusicLevels {\n  0: ChuniMusicLevelInfo;\n  1: ChuniMusicLevelInfo;\n  2: ChuniMusicLevelInfo;\n  3: ChuniMusicLevelInfo;\n  4: ChuniMusicLevelInfo;\n}\n\nexport interface ChuniMusicLevelInfo {\n  enable: boolean;\n  level: number;\n  levelDecimal: number;\n  diff: number;\n}\n\nexport enum Difficulty {\n  BASIC = 0,\n  ADVANCED = 1,\n  EXPERT = 2,\n  MASTER = 3,\n  WORLD_END = 4,\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'courceIdToClass'\n})\nexport class CourceIdToClassPipe implements PipeTransform {\n\n  transform(v: number): number {\n    switch (true) {\n      case (v === 10):\n        return 1;\n      case (v === 11):\n        return 2;\n      case (v === 12):\n        return 3;\n      case (v === 13):\n        return 4;\n      case (v === 14):\n        return 5;\n      case (v === 20):\n        return 6; // infinity\n      case (v === 21):\n        return 7; // class unknown\n    }\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'ratingClass'\n})\nexport class RatingClass implements PipeTransform {\n\n  transform(s: number, args?: any): string {\n    switch (true) {\n      case (s < 2.0):\n        return 'lv8';\n      case (s < 4.0):\n        return 'lv6';\n      case (s < 7.0):\n        return 'lv2';\n      case (s < 10.0):\n        return 'lv12';\n      case (s < 12.0):\n        return 'lv10';\n      case (s < 13.0):\n        return 'lv14';\n      case (s < 14.0):\n        return 'lv15';\n      case (s < 14.5):\n        return 'lv16';\n      case (s < 15.0):\n        return 'lv0';\n      case (s >= 15.0):\n        return 'lv17';\n    }\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'toRank'\n})\nexport class ToRankPipe implements PipeTransform {\n\n  transform(value: number): string {\n    if (value === 0) {\n      return 'D';\n    }\n    if (value === 1) {\n      return 'C';\n    }\n    if (value === 2) {\n      return 'B';\n    }\n    if (value === 3) {\n      return 'BB';\n    }\n    if (value === 4) {\n      return 'BBB';\n    }\n    if (value === 5) {\n      return 'A';\n    }\n    if (value === 6) {\n      return 'AA';\n    }\n    if (value === 7) {\n      return 'AAA';\n    }\n    if (value === 8) {\n      return 'S';\n    }\n    if (value === 9) {\n      return 'SS';\n    }\n    if (value === 10) {\n      return 'SSS';\n    }\n    if (value > 10) {\n      return 'SSS';\n    }\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'toRating'\n})\nexport class ToRatingPipe implements PipeTransform {\n\n  transform(value: number): number {\n    return Math.floor(value) / 100;\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {DivaCustomize} from '../model/DivaCustomize';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\n\n@Component({\n  selector: 'app-diva-customize',\n  templateUrl: './diva-customize.component.html',\n  styleUrls: ['./diva-customize.component.css']\n})\nexport class DivaCustomizeComponent implements OnInit {\n\n  p = 0;\n  customizes: DivaCustomize[] = [];\n\n  constructor(private dbService: NgxIndexedDBService) {\n  }\n\n  ngOnInit() {\n    this.dbService.getAll<DivaCustomize>('divaCustomize').then(\n      x => x.forEach(y => this.customizes.push(y))\n    );\n  }\n\n}\n","<div *ngIf=\"customizes\">\n  <mat-card *ngFor=\"let item of customizes | paginate: {itemsPerPage: 15, currentPage: p}\">\n    <mat-card-content>\n      <span>Module ID: {{item.id}}</span><br><br>\n      <span>Name: {{item.name}}</span><br>\n      <span>Price: {{item.price}} VP</span>\n    </mat-card-content>\n  </mat-card>\n</div>\n<pagination-controls class=\"pagination\" maxSize=\"9\"\n                      (pageChange)=\"p = $event\"\n                      directionLinks=\"true\"\n                      autoHide=\"true\"\n                      responsive=\"true\"\n                      previousLabel=\"Previous\"\n                      nextLabel=\"Next\"\n                      screenReaderPaginationLabel=\"Pagination\"\n                      screenReaderPageLabel=\"page\"\n                      screenReaderCurrentLabel=\"You're on page\">\n</pagination-controls>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ApiService} from '../../../../../api.service';\nimport {MessageService} from '../../../../../message.service';\nimport {Router} from '@angular/router';\nimport {Contest} from '../../../model/mannagement/contest';\nimport {DivaContestService} from '../diva-contest.service';\n\n@Component({\n  selector: 'app-diva-contest-edit',\n  templateUrl: './diva-contest-edit.component.html',\n  styleUrls: ['./diva-contest-edit.component.css']\n})\nexport class DivaContestEditComponent implements OnInit {\n\n  contest: Contest;\n  contestForm: FormGroup;\n\n  constructor(\n    private api: ApiService,\n    private messageService: MessageService,\n    private fb: FormBuilder,\n    private contestService: DivaContestService,\n    private router: Router\n  ) {\n  }\n\n  get f() {\n    return this.contestForm.controls;\n  }\n\n  ngOnInit() {\n    this.contest = this.contestService.contest;\n    this.contestForm = this.fb.group({\n      id: [this.contest.id, Validators.required],\n      enable: [this.contest.enable],\n      name: [this.contest.name, Validators.required],\n      description: [this.contest.description, Validators.required],\n      startTime: [this.contest.startTime, Validators.required],\n      endTime: [this.contest.endTime, Validators.required],\n      league: [String(this.contest.league), Validators.required],\n      stars: [this.contest.stars, Validators.required],\n      minComplexity: [this.contest.minComplexity, Validators.required],\n      maxComplexity: [this.contest.maxComplexity, Validators.required],\n      stages: [this.contest.stages, Validators.required],\n      stageLimit: [String(this.contest.stageLimit), Validators.required],\n      normaType: [String(this.contest.normaType), Validators.required],\n      bronzeBorders: [this.contest.bronzeBorders, Validators.required],\n      sliverBorders: [this.contest.sliverBorders, Validators.required],\n      goldBorders: [this.contest.goldBorders, Validators.required],\n      pvList: [this.contest.pvList],\n      pvDiffList: [this.contest.pvDiffList],\n      bronzeContestReward: [this.contest.bronzeContestReward],\n      sliverContestReward: [this.contest.sliverContestReward],\n      goldContestReward: [this.contest.goldContestReward],\n      contestEntryReward: [this.contest.contestEntryReward]\n    });\n  }\n\n  onSubmit() {\n    this.api.put('api/manage/diva/contest', this.contestForm.value).subscribe(\n      data => {\n        console.log(data);\n        this.router.navigateByUrl('/diva/management/contest');\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    <div class=\"title\">Contest ID: {{f.id.value}}</div>\n  </mat-card-title>\n  <mat-card-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"contestForm\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>Name</mat-label>\n        <input formControlName=\"name\" matInput required type=\"text\">\n      </mat-form-field>\n\n      <mat-checkbox class=\"full-width\" formControlName=\"enable\">Enabled</mat-checkbox>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Description</mat-label>\n        <textarea formControlName=\"description\" matInput required type=\"text\"></textarea>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Start Time</mat-label>\n        <input [matDatepicker]=\"startTime\" formControlName=\"startTime\" matInput placeholder=\"Choose a start date\">\n        <mat-datepicker-toggle [for]=\"startTime\" matSuffix></mat-datepicker-toggle>\n        <mat-datepicker #startTime></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>End Time</mat-label>\n        <input [matDatepicker]=\"endTime\" formControlName=\"endTime\" matInput placeholder=\"Choose a end date\">\n        <mat-datepicker-toggle [for]=\"endTime\" matSuffix></mat-datepicker-toggle>\n        <mat-datepicker #endTime></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>League</mat-label>\n        <mat-select formControlName=\"league\">\n          <mat-option value=\"0\">Beginner</mat-option>\n          <mat-option value=\"1\">Intermediate</mat-option>\n          <mat-option value=\"2\">Advanced</mat-option>\n          <mat-option value=\"3\">Professional</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Stars</mat-label>\n        <input formControlName=\"stars\" matInput required type=\"number\">\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>minComplexity</mat-label>\n        <input formControlName=\"minComplexity\" matInput required type=\"number\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>maxComplexity</mat-label>\n        <input formControlName=\"maxComplexity\" matInput required type=\"number\">\n      </mat-form-field>\n      <p>Complexity: Chart Level(Stars) × 2. eg: 9.5 starts is 19. max:20, min:1. </p>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Stages</mat-label>\n        <input formControlName=\"stages\" matInput required type=\"number\">\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Stage Limit</mat-label>\n        <mat-select formControlName=\"stageLimit\">\n          <mat-option value=\"0\">Unlimited</mat-option>\n          <mat-option value=\"1\">Limited</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Norma Type</mat-label>\n        <mat-select formControlName=\"normaType\">\n          <mat-option value=\"0\">Score</mat-option>\n          <mat-option value=\"1\">Percentage</mat-option>\n          <mat-option value=\"2\">Cool Percentage</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>bronzeBorders</mat-label>\n        <input formControlName=\"bronzeBorders\" matInput required type=\"number\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>sliverBorders</mat-label>\n        <input formControlName=\"sliverBorders\" matInput required type=\"number\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>goldBorders</mat-label>\n        <input formControlName=\"goldBorders\" matInput required type=\"number\">\n      </mat-form-field>\n\n      <p>Please set the value below carefully, or it will break contest loading and stage saving. Leave it empty if you\n        doesn't know what that means.</p>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Pv List</mat-label>\n        <input formControlName=\"pvList\" matInput placeholder=\"pv_id_start:pv_id_end...\" type=\"text\">\n      </mat-form-field>\n      <p>Pv List Format: \"pv_id_start:pv_id_end,pv_id_start:pv_id_end,pv_id_start:pv_id_end\". <br>\n        Max allowed length is 20. Use -1 as range end if you only need a single PV.</p>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Pv Difficulty List</mat-label>\n        <input formControlName=\"pvDiffList\" matInput type=\"text\"\n               placeholder=\"pv_difficulty:min_complexity:max_complexity...\">\n      </mat-form-field>\n      <p>Pv Difficulty List Format: \"pv_difficulty:min_complexity:max_complexity,...\". Use it to control the difficulty\n        of Pv List. <br>\n        pv_difficulty: -1 is unrestricted, 0 is easy, 1 is normal. But it seems not work with 2 and 3 so leave it -1 and\n        set the complexity. <br>\n        complexity: format same as above. </p>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Bronze Contest Reward</mat-label>\n        <input formControlName=\"bronzeContestReward\" matInput type=\"text\" placeholder=\"rewardType:rewardId:string1:string2\">\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Silver Contest Reward</mat-label>\n        <input formControlName=\"sliverContestReward\" matInput type=\"text\" placeholder=\"rewardType:rewardId:string1:string2\">\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Gold Contest Reward</mat-label>\n        <input formControlName=\"goldContestReward\" matInput type=\"text\" placeholder=\"rewardType:rewardId:string1:string2\">\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Contest Entry Reward</mat-label>\n        <input formControlName=\"contestEntryReward\" matInput type=\"text\">\n      </mat-form-field>\n\n      <p>Contest Reward Format: \"rewardType:rewardId:string1:string2\" string1 and 2 should be urlencoded and must exist. use *** aka %2A%2A%2A as placeholder <br>\n        Reward Type: (-1 None, 0 VP, 1 Skin, 2 Callsign, 3 Customize)</p>\n      <button [disabled]=\"!contestForm.valid\" mat-flat-button type=\"submit\">Submit</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../../api.service';\nimport {MessageService} from '../../../../message.service';\nimport {Router} from '@angular/router';\nimport {DivaContestService} from './diva-contest.service';\nimport {Contest, ContestLeague, ContestNormaType, ContestStageLimit} from '../../model/mannagement/contest';\n\n@Component({\n  selector: 'app-diva-contest',\n  templateUrl: './diva-contest.component.html',\n  styleUrls: ['./diva-contest.component.css']\n})\nexport class DivaContestComponent implements OnInit {\n\n  contests: Contest[];\n  contestLeague = ContestLeague;\n  contestStageLimit = ContestStageLimit;\n  contestNormaType = ContestNormaType;\n\n  constructor(\n    private api: ApiService,\n    private messageService: MessageService,\n    private contestService: DivaContestService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  load() {\n    this.api.get('api/manage/diva/contest').subscribe(\n      data => this.contests = data,\n      error => this.messageService.notice(error)\n    );\n  }\n\n  delete(id) {\n    this.api.delete('api/manage/diva/contest/' + id).subscribe(\n      () => {\n        this.messageService.notice('OK');\n        this.load();\n      },\n      error => {\n        this.messageService.notice(error);\n        this.load();\n      }\n    );\n  }\n\n  edit(contest) {\n    this.contestService.contest = contest;\n    this.router.navigateByUrl('/diva/management/contest/edit');\n  }\n}\n","<mat-card>\n  <mat-card-title>\n    <div>Contest List, Length: {{contests ? contests.length : 0}}</div>\n    <button (click)=\"edit(undefined)\" mat-flat-button>Add</button>\n  </mat-card-title>\n</mat-card>\n<div *ngIf=\"contests\">\n  <mat-card *ngFor=\"let contest of contests\">\n    <mat-card-content>\n      <table class=\"zebra\">\n        <tr>\n          <th>ID</th>\n          <td>{{contest.id}}</td>\n        </tr>\n        <tr>\n          <th>Enabled</th>\n          <td>{{contest.enable}}</td>\n        </tr>\n        <tr>\n          <th>Name</th>\n          <td>{{contest.name}}</td>\n        </tr>\n        <tr>\n          <th>Description</th>\n          <td>{{contest.description}}</td>\n        </tr>\n        <tr>\n          <th>Start Time</th>\n          <td>{{contest.startTime}}</td>\n        </tr>\n        <tr>\n          <th>End Time</th>\n          <td>{{contest.endTime}}</td>\n        </tr>\n        <tr>\n          <th>League</th>\n          <td>{{contestLeague[contest.league]}}</td>\n        </tr>\n        <tr>\n          <th>Star</th>\n          <td>{{contest.stars}}</td>\n        </tr>\n        <tr>\n          <th>Min Complexity</th>\n          <td>{{contest.minComplexity}}</td>\n        </tr>\n        <tr>\n          <th>Max Complexity</th>\n          <td>{{contest.maxComplexity}}</td>\n        </tr>\n        <tr>\n          <th>Stages</th>\n          <td>{{contest.stages}}</td>\n        </tr>\n        <tr>\n          <th>Stage Limit</th>\n          <td>{{contestStageLimit[contest.stageLimit]}}</td>\n        </tr>\n        <tr>\n          <th>Norma Type</th>\n          <td>{{contestNormaType[contest.normaType]}}</td>\n        </tr>\n        <tr>\n          <th>Bronze borders</th>\n          <td>{{contest.bronzeBorders}}</td>\n        </tr>\n        <tr>\n          <th>Sliver borders</th>\n          <td>{{contest.sliverBorders}}</td>\n        </tr>\n        <tr>\n          <th>Gold borders</th>\n          <td>{{contest.goldBorders}}</td>\n        </tr>\n        <tr>\n          <th>Pv List</th>\n          <td>{{contest.pvList}}</td>\n        </tr>\n        <tr>\n          <th>Pv Difficulty List</th>\n          <td>{{contest.pvDiffList}}</td>\n        </tr>\n        <tr>\n          <th>Bronze Contest Reward</th>\n          <td>{{contest.bronzeContestReward}}</td>\n        </tr>\n        <tr>\n          <th>Silver Contest Reward</th>\n          <td>{{contest.sliverContestReward}}</td>\n        </tr>\n        <tr>\n          <th>Gold Contest Reward</th>\n          <td>{{contest.goldContestReward}}</td>\n        </tr>\n        <tr>\n          <th>Contest Entry Reward</th>\n          <td>{{contest.contestEntryReward}}</td>\n        </tr>\n      </table>\n    </mat-card-content>\n    <mat-card-actions>\n      <button (click)=\"edit(contest)\" mat-flat-button>Edit</button>\n      <button (click)=\"delete(contest.id)\" mat-flat-button>Delete</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import {Injectable} from '@angular/core';\nimport {Contest, ContestLeague, ContestNormaType, ContestStageLimit} from '../../model/mannagement/contest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DivaContestService {\n\n  currentContest: Contest = undefined;\n\n  constructor() {\n  }\n\n  get contest() {\n    return this.currentContest === undefined ? {\n      id: -1,\n      enable: true,\n      startTime: new Date(),\n      endTime: new Date(),\n      name: 'Untitled',\n      description: 'description',\n      league: ContestLeague.Intermediate,\n      stars: 16,\n      minComplexity: 10,\n      maxComplexity: 20,\n      stages: 4,\n      stageLimit: ContestStageLimit.Limited,\n      normaType: ContestNormaType.Percentage,\n      bronzeBorders: 16000,\n      sliverBorders: 28000,\n      goldBorders: 32000,\n      pvList: '',\n      pvDiffList: '',\n      bronzeContestReward: '',\n      sliverContestReward: '',\n      goldContestReward: '',\n      contestEntryReward: ''\n    } : this.currentContest;\n  }\n\n  set contest(f: Contest) {\n    this.currentContest = f;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../../../api.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DivaFestaService} from '../diva-festa.service';\nimport {Festa} from '../../../model/mannagement/Festa';\nimport {Router} from '@angular/router';\nimport {MessageService} from '../../../../../message.service';\n\n@Component({\n  selector: 'app-diva-festa-edit',\n  templateUrl: './diva-festa-edit.component.html',\n  styleUrls: ['./diva-festa-edit.component.css']\n})\nexport class DivaFestaEditComponent implements OnInit {\n\n  festa: Festa;\n  festaForm: FormGroup;\n\n  constructor(\n    private api: ApiService,\n    private messageService: MessageService,\n    private fb: FormBuilder,\n    private festaService: DivaFestaService,\n    private router: Router\n  ) {\n  }\n\n  get f() {\n    return this.festaForm.controls;\n  }\n\n  ngOnInit() {\n    this.festa = this.festaService.festa;\n    this.festaForm = this.fb.group({\n      id: [this.festa.id, Validators.required],\n      name: [this.festa.name, Validators.required],\n      enable: [this.festa.enable],\n      kind: [String(this.festa.kind), Validators.required],\n      difficulty: [String(this.festa.difficulty), Validators.required],\n      pvList: [this.festa.pvList, Validators.required],\n      attributes: [this.festa.attributes, Validators.required],\n      addVP: [this.festa.addVP, Validators.required],\n      vpMultiplier: [this.festa.vpMultiplier, Validators.required],\n      start: [this.festa.start, Validators.required],\n      end: [this.festa.end, Validators.required],\n      createDate: [this.festa.createDate, Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.api.put('api/manage/diva/festa', this.festaForm.value).subscribe(\n      data => {\n        console.log(data);\n        this.router.navigateByUrl('/diva/management/festa');\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    <div class=\"title\">Festa</div>\n  </mat-card-title>\n  <mat-card-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"festaForm\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>Name</mat-label>\n        <input formControlName=\"name\" matInput required type=\"text\">\n      </mat-form-field>\n      <mat-checkbox class=\"full-width\" formControlName=\"enable\">Enabled</mat-checkbox>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Kind</mat-label>\n        <mat-select formControlName=\"kind\">\n          <mat-option value=\"0\">PinkFesta</mat-option>\n          <mat-option value=\"1\">GreenFesta</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Difficulty Limit</mat-label>\n        <mat-select formControlName=\"difficulty\">\n          <mat-option value=\"-1\">Unset</mat-option>\n          <mat-option value=\"0\">Easy</mat-option>\n          <mat-option value=\"1\">Normal</mat-option>\n          <mat-option value=\"2\">Hard</mat-option>\n          <mat-option value=\"3\">Extreme</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>PV List</mat-label>\n        <input formControlName=\"pvList\" matInput required type=\"text\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Attributes</mat-label>\n        <input formControlName=\"attributes\" matInput required type=\"text\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Add VP</mat-label>\n        <input formControlName=\"addVP\" matInput required type=\"number\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>VP Multiplier</mat-label>\n        <input formControlName=\"vpMultiplier\" matInput required type=\"number\">\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Start Time</mat-label>\n        <input [matDatepicker]=\"start\" formControlName=\"start\" matInput placeholder=\"Choose a start date\">\n        <mat-datepicker-toggle [for]=\"start\" matSuffix></mat-datepicker-toggle>\n        <mat-datepicker #start></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>End Time</mat-label>\n        <input [matDatepicker]=\"end\" formControlName=\"end\" matInput placeholder=\"Choose a end date\">\n        <mat-datepicker-toggle [for]=\"end\" matSuffix></mat-datepicker-toggle>\n        <mat-datepicker #end></mat-datepicker>\n      </mat-form-field>\n      <button [disabled]=\"!festaForm.valid\" mat-flat-button type=\"submit\">Submit</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../../api.service';\nimport {MessageService} from '../../../../message.service';\nimport {Festa, FestaKind} from '../../model/mannagement/Festa';\nimport {DivaFestaService} from './diva-festa.service';\nimport {Router} from '@angular/router';\nimport {Difficulty} from '../../model/DivaPvRecord';\n\n@Component({\n  selector: 'app-diva-festa',\n  templateUrl: './diva-festa.component.html',\n  styleUrls: ['./diva-festa.component.css']\n})\nexport class DivaFestaComponent implements OnInit {\n\n  festas: Festa[];\n  festaKind = FestaKind;\n  difficulty = Difficulty;\n\n  constructor(\n    private api: ApiService,\n    private messageService: MessageService,\n    private festaService: DivaFestaService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  load() {\n    this.api.get('api/manage/diva/festa').subscribe(\n      data => this.festas = data,\n      error => this.messageService.notice(error)\n    );\n  }\n\n  delete(id) {\n    this.api.delete('api/manage/diva/festa/' + id).subscribe(\n      () => {\n        this.messageService.notice('OK');\n        this.load();\n      },\n      error => {\n        this.messageService.notice(error);\n        this.load();\n      }\n    );\n  }\n\n  edit(festa) {\n    this.festaService.festa = festa;\n    this.router.navigateByUrl('/diva/management/festa/edit');\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    <div>Festa List, Length: {{festas ? festas.length : 0}}</div>\n    <button (click)=\"edit(undefined)\" mat-flat-button>Add</button>\n  </mat-card-title>\n</mat-card>\n<div *ngIf=\"festas\">\n  <mat-card *ngFor=\"let festa of festas\">\n    <mat-card-content>\n      <table class=\"zebra\">\n        <tr>\n          <th>ID</th>\n          <td>{{festa.id}}</td>\n        </tr>\n        <tr>\n          <th>Name</th>\n          <td>{{festa.name}}</td>\n        </tr>\n        <tr>\n          <th>FestaKind</th>\n          <td>{{festaKind[festa.kind]}}</td>\n        </tr>\n        <tr>\n          <th>Difficulty</th>\n          <td>{{difficulty[festa.difficulty]}}</td>\n        </tr>\n        <tr>\n          <th>PvList</th>\n          <td>{{festa.pvList}}</td>\n        </tr>\n        <tr>\n          <th>Attributes</th>\n          <td>{{festa.attributes}}</td>\n        </tr>\n        <tr>\n          <th>Add VP</th>\n          <td>{{festa.addVP}}</td>\n        </tr>\n        <tr>\n          <th>VP Multiplier</th>\n          <td>{{festa.vpMultiplier}}</td>\n        </tr>\n        <tr>\n          <th>Start</th>\n          <td>{{festa.start}}</td>\n        </tr>\n        <tr>\n          <th>End</th>\n          <td>{{festa.end}}</td>\n        </tr>\n        <tr>\n          <th>Create Date</th>\n          <td>{{festa.createDate}}</td>\n        </tr>\n      </table>\n    </mat-card-content>\n    <mat-card-actions>\n      <button (click)=\"edit(festa)\" mat-flat-button>Edit</button>\n      <button (click)=\"delete(festa.id)\" mat-flat-button>Delete</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import {Injectable} from '@angular/core';\nimport {Festa} from '../../model/mannagement/Festa';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DivaFestaService {\n\n  currentFesta: Festa = undefined;\n\n  constructor() {\n  }\n\n  get festa() {\n    return this.currentFesta === undefined ? {\n      id: -1,\n      enable: true,\n      name: 'Untitled',\n      kind: 0,\n      difficulty: -1,\n      pvList: 'ALL',\n      attributes: '7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',\n      addVP: 0,\n      vpMultiplier: 1,\n      start: new Date(),\n      end: new Date(),\n      createDate: new Date()\n    } : this.currentFesta;\n  }\n\n  set festa(f: Festa) {\n    this.currentFesta = f;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-diva-management',\n  templateUrl: './diva-management.component.html',\n  styleUrls: ['./diva-management.component.css']\n})\nexport class DivaManagementComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<h2>Management</h2>\n<mat-nav-list>\n  <mat-list-item routerLink=\"/diva/management/festa\">\n    <a matLine>Festa</a>\n  </mat-list-item>\n  <mat-list-item routerLink=\"/diva/management/contest\">\n    <a matLine>Contest</a>\n  </mat-list-item>\n  <mat-list-item routerLink=\"/diva/management/news\">\n    <a matLine>News / Warning</a>\n  </mat-list-item>\n</mat-nav-list>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ApiService} from '../../../../api.service';\nimport {MessageService} from '../../../../message.service';\n\n@Component({\n  selector: 'app-diva-news',\n  templateUrl: './diva-news.component.html',\n  styleUrls: ['./diva-news.component.css']\n})\nexport class DivaNewsComponent implements OnInit {\n\n  newsForm: FormGroup;\n  warningForm: FormGroup;\n\n  constructor(\n    private api: ApiService,\n    private messageService: MessageService,\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    this.api.get('api/manage/diva/news').subscribe(\n      data => this.createNews(data),\n      error => this.messageService.notice(error)\n    );\n    this.api.get('api/manage/diva/warning').subscribe(\n      data => this.createWarning(data),\n      error => this.messageService.notice(error)\n    );\n  }\n\n  createNews(data) {\n    this.newsForm = this.fb.group({\n      propertyKey: [data.propertyKey, Validators.required],\n      propertyValue: [data.propertyValue, Validators.required],\n    });\n  }\n\n  createWarning(data) {\n    this.warningForm = this.fb.group({\n      propertyKey: [data.propertyKey, Validators.required],\n      propertyValue: [data.propertyValue, Validators.required],\n    });\n  }\n\n  submitNews() {\n    this.api.put('api/manage/diva/news', this.newsForm.value).subscribe(\n      data => this.createNews(data),\n      error => this.messageService.notice(error)\n    );\n  }\n\n  submitWarning() {\n    this.api.put('api/manage/diva/warning', this.newsForm.value).subscribe(\n      data => this.createWarning(data),\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    <div class=\"title\">News</div>\n  </mat-card-title>\n  <mat-card-content *ngIf=\"newsForm\">\n    <form (ngSubmit)=\"submitNews()\" [formGroup]=\"newsForm\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>Content</mat-label>\n        <textarea formControlName=\"propertyValue\" matInput required type=\"text\"></textarea>\n      </mat-form-field>\n      <button [disabled]=\"!newsForm.valid\" mat-flat-button type=\"submit\">Submit</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>\n    <div class=\"title\">Warning</div>\n  </mat-card-title>\n  <mat-card-content *ngIf=\"warningForm\">\n    <form (ngSubmit)=\"submitWarning()\" [formGroup]=\"warningForm\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>Content</mat-label>\n        <textarea formControlName=\"propertyValue\" matInput required type=\"text\"></textarea>\n      </mat-form-field>\n      <button [disabled]=\"!warningForm.valid\" mat-flat-button type=\"submit\">Submit</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {DivaModule} from '../model/DivaModule';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\n\n@Component({\n  selector: 'app-diva-modules',\n  templateUrl: './diva-modules.component.html',\n  styleUrls: ['./diva-modules.component.css']\n})\nexport class DivaModulesComponent implements OnInit {\n\n  p = 0;\n  modules: DivaModule[] = [];\n\n  constructor(private dbService: NgxIndexedDBService) {\n  }\n\n  ngOnInit() {\n    this.dbService.getAll<DivaModule>('divaModule').then(\n      x => x.forEach(y => this.modules.push(y))\n    );\n  }\n\n}\n","<div *ngIf=\"modules\">\n  <mat-card *ngFor=\"let item of modules | paginate: {itemsPerPage: 15, currentPage: p}\">\n    <mat-card-content>\n      <span>Module ID: {{item.id}}</span><br><br>\n      <span>Name: {{item.name}}</span><br>\n      <span>Price: {{item.price}} VP</span>\n    </mat-card-content>\n  </mat-card>\n</div>\n<pagination-controls class=\"pagination\" maxSize=\"9\"\n                     (pageChange)=\"p = $event\"\n                     directionLinks=\"true\"\n                     autoHide=\"true\"\n                     responsive=\"true\"\n                     previousLabel=\"Previous\"\n                     nextLabel=\"Next\"\n                     screenReaderPaginationLabel=\"Pagination\"\n                     screenReaderPageLabel=\"page\"\n                     screenReaderCurrentLabel=\"You're on page\">\n</pagination-controls>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {DivaProfile} from '../model/DivaProfile';\nimport {HttpParams} from '@angular/common/http';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\n\n@Component({\n  selector: 'app-diva-profile',\n  templateUrl: './diva-profile.component.html',\n  styleUrls: ['./diva-profile.component.css']\n})\nexport class DivaProfileComponent implements OnInit {\n\n  profile: DivaProfile;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService\n  ) {\n  }\n\n  ngOnInit() {\n    const pdId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('pdId', pdId);\n    this.api.get('api/game/diva/playerInfo', param).subscribe(\n      data => this.profile = data,\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>Player Profile</mat-card-title>\n  <mat-card-content>\n    <table *ngIf=\"profile\" class=\"zebra\">\n      <tr>\n        <th>Project DIVA ID</th>\n        <td>{{profile.pdId}}</td>\n      </tr>\n      <tr>\n        <th>Player Name</th>\n        <td>{{profile.playerName}}</td>\n      </tr>\n      <tr>\n        <th>Player Level</th>\n        <td>{{profile.level}}</td>\n      </tr>\n      <tr>\n        <th>Level Exp</th>\n        <td>{{profile.levelExp}}%</td>\n      </tr>\n      <tr>\n        <th>Player Title</th>\n        <td>{{profile.levelTitle}}</td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {HttpParams} from '@angular/common/http';\nimport {Difficulty, DivaPvRecord, Edition, Result} from '../model/DivaPvRecord';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {DivaPv} from '../model/DivaPv';\n\n@Component({\n  selector: 'app-diva-pv-record',\n  templateUrl: './diva-pv-record.component.html',\n  styleUrls: ['./diva-pv-record.component.css']\n})\nexport class DivaPvRecordComponent implements OnInit {\n\n  edition = Edition;\n  difficulty = Difficulty;\n  result = Result;\n\n  pvRecords: DivaPvRecord[] = [];\n\n  currentPage = 0;\n  totalPages = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  load() {\n    const pdId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('pdId', pdId).set('page', String(this.currentPage));\n    this.api.get('api/game/diva/pvRecord', param).subscribe(\n      data => {\n        if (data.content.length === 0) {\n          this.messageService.notice('No more record');\n          return;\n        }\n        this.currentPage = data.page + 1;\n        this.totalPages = data.totalPages;\n        data.content.forEach(x => {\n          this.pvRecords.push(x);\n        });\n        this.pvRecords.forEach(x => {\n          if (!x.songInfo) {\n            this.dbService.getByID<DivaPv>('divaPv', x.pvId).then(\n              m => x.songInfo = m\n            );\n          }\n        });\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<div *ngIf=\"pvRecords\">\n  <mat-card *ngFor=\"let item of pvRecords\" routerLink=\"{{item.pvId}}\">\n    <mat-card-title>\n      <div class=\"title\">{{item.songInfo != null ? item.songInfo.songName : 'pvId:' + item.pvId}}</div>\n      <div class=\"level\">\n        {{item.edition === 1 ? edition[item.edition] : ''}}\n        {{difficulty[item.difficulty]}}\n      </div>\n    </mat-card-title>\n    <mat-card-content>\n      <div class=\"song-info\">\n        <span\n          class=\"info\">{{item.songInfo != null ? 'Lyric: ' + item.songInfo.lyrics + ' Song: ' + item.songInfo.music : ''}}</span>\n      </div>\n      <div class=\"result-content\">\n        <div class=\"left\">\n          <br>\n          <span class=\"rank-value\">{{result[item.result]}}</span>\n        </div>\n        <div class=\"left\">\n          Achievement:<br>\n          <span class=\"achievement-value\">{{item.maxAttain|divaDecimal}}%</span>\n        </div>\n        <div class=\"left\">\n          Score:<br>\n          <span class=\"score-value\">{{item.maxScore}}</span>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <button (click)=\"load()\" mat-flat-button>Load More</button>\n\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {DivaPv} from '../model/DivaPv';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-diva-pvlist',\n  templateUrl: './diva-pvlist.component.html',\n  styleUrls: ['./diva-pvlist.component.css']\n})\nexport class DivaPvlistComponent implements OnInit {\n\n  dataSource = new MatTableDataSource();\n  pvList: DivaPv[] = [];\n  displayedColumns: string[] = ['pvId', 'songName', 'songNameEng'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private dbService: NgxIndexedDBService) {\n  }\n\n  ngOnInit() {\n    this.dbService.getAll<DivaPv>('divaPv').then(\n      x => {\n        x.forEach(y => this.pvList.push(y));\n        this.dataSource.data = this.pvList;\n      }\n    );\n    this.dataSource.paginator = this.paginator;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-form-field>\n  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n</mat-form-field>\n<table mat-table [dataSource]=\"dataSource\" matSort>\n  <ng-container matColumnDef=\"pvId\">\n    <th mat-header-cell *matHeaderCellDef> PvId.</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.pvId}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"songName\">\n    <th mat-header-cell *matHeaderCellDef> Name</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.songName}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"songNameEng\">\n    <th mat-header-cell *matHeaderCellDef> Eng. Name</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.songNameEng}} </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/diva/record/{{row.pvId}}\"></tr>\n\n</table>\n<mat-paginator [pageSizeOptions]=\"[15, 50, 100]\"></mat-paginator>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {HttpParams} from '@angular/common/http';\nimport {DivaPlayLog} from '../model/DivaPlayLog';\nimport {Difficulty, Edition, Result} from '../model/DivaPvRecord';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {DivaPv} from '../model/DivaPv';\nimport {DivaModule} from '../model/DivaModule';\n\n@Component({\n  selector: 'app-diva-recent',\n  templateUrl: './diva-recent.component.html',\n  styleUrls: ['./diva-recent.component.css']\n})\nexport class DivaRecentComponent implements OnInit {\n\n  edition = Edition;\n  difficulty = Difficulty;\n  result = Result;\n\n  playLogList: DivaPlayLog[] = [];\n\n  currentPage = 0;\n  totalPages = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  load() {\n    const pdId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('pdId', pdId).set('page', String(this.currentPage));\n    this.api.get('api/game/diva/playLog', param).subscribe(\n      data => {\n        if (data.content.length === 0) {\n          this.messageService.notice('No more record');\n          return;\n        }\n        this.currentPage = data.page + 1;\n        this.totalPages = data.totalPages;\n        data.content.forEach(x => {\n          this.playLogList.push(x);\n        });\n\n        this.playLogList.forEach(x => {\n          if (!x.songInfo) {\n            this.dbService.getByID<DivaPv>('divaPv', x.pvId).then(y => {\n              x.songInfo = y;\n              const p = x.songInfo.performerNumber;\n              const moduleIds = x.modules.split(',');\n              x.modulesInfo = [];\n              if (p > 0) {\n                this.dbService.getByID<DivaModule>('divaModule', moduleIds[0]).then(y => x.modulesInfo[0] = y);\n              }\n              if (p > 1) {\n                this.dbService.getByID<DivaModule>('divaModule', moduleIds[1]).then(y => x.modulesInfo[1] = y);\n              }\n              if (p > 2) {\n                this.dbService.getByID<DivaModule>('divaModule', moduleIds[2]).then(y => x.modulesInfo[2] = y);\n              }\n            });\n          }\n        });\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<div *ngIf=\"playLogList\">\n  <mat-card *ngFor=\"let item of playLogList\" routerLink=\"/diva/record/{{item.pvId}}\">\n    <mat-card-title>{{item.dateTime}}</mat-card-title>\n    <mat-card-content>\n      <div class=\"song-header\">\n        <div class=\"song-info\">\n          <span class=\"title\">{{item.songInfo != null ? item.songInfo.songName : 'pvId:' + item.pvId}}</span><br>\n          <span\n            class=\"info\">{{item.songInfo != null ? 'Lyric: ' + item.songInfo.lyrics + ' Song: ' + item.songInfo.music : ''}}</span>\n        </div>\n        <div class=\"level\">\n          {{item.edition === 1 ? edition[item.edition] : ''}}\n          {{difficulty[item.difficulty]}}\n        </div>\n      </div>\n      <div class=\"result-content\">\n        <div class=\"left\">\n          Rank:<br>\n          <span class=\"rank\">{{result[item.clearResult]}}</span>\n          <br>\n          <br>Achievement:<br>\n          <span class=\"achievement-value\">{{item.attainPoint|divaDecimal}}%</span>\n          <br>\n          <br>Score:<br>\n          <span class=\"score-value\">{{item.score}}</span><br><br>\n          <table *ngIf=\"item.modulesInfo\">\n            <tr>\n              <th>Module</th>\n            </tr>\n            <tr>\n              <td *ngIf=\"item.modulesInfo[0]\">\n                <span class=\"module1\">{{item.modulesInfo[0].name}}</span>\n              </td>\n            </tr>\n            <tr>\n              <td *ngIf=\"item.modulesInfo[1]\">\n                <span class=\"module1\">{{item.modulesInfo[1].name}}</span>\n              </td>\n            </tr>\n            <tr>\n              <td *ngIf=\"item.modulesInfo[2]\">\n                <span class=\"module1\">{{item.modulesInfo[2].name}}</span>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <div class=\"right\">\n          <table class=\"zebra result-table\">\n            <tr>\n              <th>Cool</th>\n              <td>{{item.coolCount}}</td>\n              <td>{{item.coolPercent|divaDecimal}}%</td>\n            </tr>\n            <tr>\n              <th>Fine</th>\n              <td>{{item.fineCount}}</td>\n              <td>{{item.finePercent|divaDecimal}}%</td>\n            </tr>\n            <tr>\n              <th>Safe</th>\n              <td>{{item.safeCount}}</td>\n              <td>{{item.safePercent|divaDecimal}}%</td>\n            </tr>\n            <tr>\n              <th>Sad</th>\n              <td>{{item.sadCount}}</td>\n              <td>{{item.sadPercent|divaDecimal}}%</td>\n            </tr>\n            <tr>\n              <th class=\"result-head\">Worst / Wrong</th>\n              <td>{{item.wrongCount}}</td>\n              <td>{{item.wrongPercent|divaDecimal}}%</td>\n            </tr>\n            <tr>\n              <th>Combo</th>\n              <td colspan=\"2\">{{item.maxCombo}}</td>\n            </tr>\n            <tr>\n              <th class=\"result-head\">Challenge Time</th>\n              <td colspan=\"2\">{{item.chanceTime}}</td>\n            </tr>\n            <tr>\n              <th>Hold</th>\n              <td colspan=\"2\">{{item.holdScore}}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <button (click)=\"load()\" mat-flat-button>Load More</button>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {HttpParams} from '@angular/common/http';\nimport {DivaRecordDetail} from '../model/DivaRecordDetail';\nimport {Difficulty, Edition} from '../model/DivaPvRecord';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DivaRankingRecord} from '../model/DivaRankingRecord';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {DivaPv} from '../model/DivaPv';\nimport {DivaModule} from '../model/DivaModule';\n\n@Component({\n  selector: 'app-diva-record-detail',\n  templateUrl: './diva-record-detail.component.html',\n  styleUrls: ['./diva-record-detail.component.css']\n})\nexport class DivaRecordDetailComponent implements OnInit {\n\n  edition = Edition;\n  difficulty = Difficulty;\n  record: DivaRecordDetail;\n  isEdit = false;\n  customizeForm: FormGroup;\n  pvId: number;\n  pdId: number;\n\n  moduleLoadFlag = 0;\n\n  easyRanking: DivaRankingRecord[] = [];\n  easyPage = 0;\n  normalRanking: DivaRankingRecord[] = [];\n  normalPage = 0;\n  hardRanking: DivaRankingRecord[] = [];\n  hardPage = 0;\n  extremeRanking: DivaRankingRecord[] = [];\n  extremePage = 0;\n  extraExtremeRanking: DivaRankingRecord[] = [];\n  extraExtremePage = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private fb: FormBuilder,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  get f() {\n    return this.customizeForm.controls;\n  }\n\n  ngOnInit() {\n    this.pvId = Number(this.route.snapshot.paramMap.get('pvId'));\n    this.pdId = this.auth.currentUserValue.extId;\n    const param = new HttpParams().set('pdId', String(this.pdId));\n    this.api.get('api/game/diva/pvRecord/' + this.pvId, param).subscribe(\n      data => {\n        this.record = data;\n        this.dbService.getByID<DivaPv>('divaPv', this.pvId).then(x => this.record.songInfo = x);\n        if (!this.record.customize) {\n          this.record.customize = {\n            pvId: this.pvId,\n            module: '-999,-999,-999',\n            customize: '-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999',\n            customizeFlag: '-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1',\n            skin: -1,\n            buttonSe: -1,\n            slideSe: -1,\n            chainSlideSe: -1,\n            sliderTouchSe: -1\n          };\n        }\n        const moduleIds = this.record.customize.module.split(',');\n        this.record.customize.modulesInfo = [];\n        this.setModule(moduleIds, 0);\n        this.setModule(moduleIds, 1);\n        this.setModule(moduleIds, 2);\n        this.customizeForm = this.fb.group({\n          module: [this.record.customize.module, Validators.required],\n          customize: [this.record.customize.customize, Validators.required],\n          customizeFlag: [this.record.customize.customizeFlag, Validators.required],\n          skin: [this.record.customize.skin, Validators.required],\n          buttonSe: [this.record.customize.buttonSe, Validators.required],\n          slideSe: [this.record.customize.slideSe, Validators.required],\n          chainSlideSe: [this.record.customize.chainSlideSe, Validators.required],\n          sliderTouchSe: [this.record.customize.sliderTouchSe, Validators.required],\n        });\n      },\n      error => this.messageService.notice(error)\n    );\n    this.getRank('EASY');\n    this.getRank('NORMAL');\n    this.getRank('HARD');\n    this.getRank('EXTREME');\n    this.getRank('EXTRA_EXTREME');\n  }\n\n  setModule(moduleIds, i) {\n    if (moduleIds[i] === '-999' || moduleIds[i] === '-1') {\n      this.record.customize.modulesInfo[i] = {\n        id: -999,\n        name: 'Not Set',\n        price: 0\n      };\n      this.moduleLoadFlag++;\n    } else if (moduleIds[i] >= 0) {\n      this.dbService.getByID<DivaModule>('divaModule', moduleIds[i]).then(y => {\n          this.record.customize.modulesInfo[i] = y;\n          this.moduleLoadFlag++;\n        }\n      );\n    }\n  }\n\n  onSubmit() {\n    if (this.customizeForm.invalid) {\n      return;\n    }\n    this.api.put('api/game/diva/pvRecord/' + this.pvId, {\n      pdId: this.pdId,\n      pvId: this.pvId,\n      module: this.f.module.value,\n      customize: this.f.customize.value,\n      customizeFlag: this.f.customizeFlag.value,\n      skin: this.f.skin.value,\n      buttonSe: this.f.buttonSe.value,\n      slideSe: this.f.slideSe.value,\n      chainSlideSe: this.f.chainSlideSe.value,\n      sliderTouchSe: this.f.sliderTouchSe.value\n    }).subscribe(\n      data => {\n        this.record.customize = data;\n        this.isEdit = false;\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n  addRival(recordId: number) {\n    this.api.put('api/game/diva/playerInfo/rival/byRecord', {\n      pdId: this.pdId,\n      recordId\n    }).subscribe(\n      data => this.messageService.notice('OK'),\n      error => this.messageService.notice(error)\n    );\n  }\n\n  getRank(diff: string) {\n    let param = null;\n    switch (diff) {\n      case 'EASY' :\n        param = new HttpParams().set('page', String(this.easyPage));\n        break;\n      case 'NORMAL' :\n        param = new HttpParams().set('page', String(this.normalPage));\n        break;\n      case 'HARD' :\n        param = new HttpParams().set('page', String(this.hardPage));\n        break;\n      case 'EXTREME' :\n        param = new HttpParams().set('page', String(this.extremePage));\n        break;\n      case 'EXTRA_EXTREME' :\n        param = new HttpParams().set('page', String(this.extraExtremePage));\n        break;\n    }\n    if (param == null) {\n      return;\n    }\n\n    this.api.get('api/game/diva/pvRecord/' + this.pvId + '/ranking/' + diff, param).subscribe(\n      data => {\n        switch (diff) {\n          case 'EASY' :\n            data.content.forEach(x => this.easyRanking.push(x));\n            break;\n          case 'NORMAL' :\n            data.content.forEach(x => this.normalRanking.push(x));\n            break;\n          case 'HARD' :\n            data.content.forEach(x => this.hardRanking.push(x));\n            break;\n          case 'EXTREME' :\n            data.content.forEach(x => this.extremeRanking.push(x));\n            break;\n          case 'EXTRA_EXTREME' :\n            data.content.forEach(x => this.extraExtremeRanking.push(x));\n            break;\n        }\n        if (data.page >= data.totalPages) {\n          this.messageService.notice('No more record');\n        } else {\n          switch (diff) {\n            case 'EASY' :\n              this.easyPage += 1;\n              break;\n            case 'NORMAL' :\n              this.normalPage += 1;\n              break;\n            case 'HARD' :\n              this.hardPage += 1;\n              break;\n            case 'EXTREME' :\n              this.extremePage += 1;\n              break;\n            case 'EXTRA_EXTREME' :\n              this.extraExtremePage += 1;\n              break;\n          }\n        }\n      }, error => this.messageService.notice(error)\n    );\n  }\n}\n","<div *ngIf=\"record\">\n\n  <mat-card>\n    <mat-card-title>\n      <div\n        class=\"title\">{{record.songInfo != null ? record.songInfo.songName : 'pvId:' + pvId}}</div>\n    </mat-card-title>\n    <mat-card-content>\n      <div class=\"song-info\">\n        <span\n          class=\"info\">{{record.songInfo != null ? 'Lyric: ' + record.songInfo.lyrics + ' Song: ' + record.songInfo.music : ''}}</span>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card *ngFor=\"let item of record.records\" routerLink=\"{{item.pvId}}\">\n    <mat-card-title>\n      <div class=\"level\">\n        {{item.edition === 1 ? edition[item.edition] : ''}}\n        {{difficulty[item.difficulty]}}\n      </div>\n    </mat-card-title>\n    <mat-card-content>\n      <div class=\"song-info\">\n        <span\n          class=\"info\">{{item.songInfo != null ? 'Lyric: ' + item.songInfo.lyrics + ' Song: ' + item.songInfo.music : ''}}</span>\n      </div>\n      <div class=\"result-content\">\n        <div class=\"left\">\n          Achievement:<br>\n          <span class=\"achievement-value\">{{item.maxAttain|divaDecimal}}%</span>\n        </div>\n        <div class=\"left\">\n          Score:<br>\n          <span class=\"score-value\">{{item.maxScore}}</span>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card *ngIf=\"!isEdit\">\n    <mat-card-title>\n      <div class=\"title\">Per PV Customize</div>\n      <button (click)=\"isEdit = true\" mat-flat-button>Edit</button>\n    </mat-card-title>\n    <mat-card-content>\n      <table class=\"zebra\">\n        <tr>\n          <th>Module:</th>\n          <td *ngIf=\"moduleLoadFlag == 3; else moduleString\">\n            {{record.customize.modulesInfo[0].name}} ,\n            {{record.customize.modulesInfo[1].name}} ,\n            {{record.customize.modulesInfo[2].name}}\n          </td>\n          <ng-template #moduleString>\n            <td>\n              {{record.customize.module}}\n            </td>\n          </ng-template>\n\n        </tr>\n        <tr>\n          <th>Customize:</th>\n          <td>{{record.customize.customize}}</td>\n        </tr>\n        <tr>\n          <th>Customize Flag:</th>\n          <td>{{record.customize.customizeFlag}}</td>\n        </tr>\n        <tr>\n          <th>Skin ID:</th>\n          <td>{{record.customize.skin}}</td>\n        </tr>\n        <tr>\n          <th>Button SE ID:</th>\n          <td>{{record.customize.buttonSe}}</td>\n        </tr>\n        <tr>\n          <th>Chain Slide SE ID:</th>\n          <td>{{record.customize.chainSlideSe}}</td>\n        </tr>\n        <tr>\n          <th>Slide SE ID:</th>\n          <td>{{record.customize.slideSe}}</td>\n        </tr>\n        <tr>\n          <th>Slider Touch SE ID:</th>\n          <td>{{record.customize.sliderTouchSe}}</td>\n        </tr>\n      </table>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card *ngIf=\"isEdit\">\n    <mat-card-title>\n      <div class=\"title\">Per PV Customize Edit</div>\n    </mat-card-title>\n    <mat-card-content>\n      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"customizeForm\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Module</mat-label>\n          <input formControlName=\"module\" matInput required type=\"text\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Customize</mat-label>\n          <input formControlName=\"customize\" matInput required type=\"text\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Customize Flag</mat-label>\n          <input formControlName=\"customizeFlag\" matInput required type=\"text\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Skin ID</mat-label>\n          <input formControlName=\"skin\" matInput required type=\"number\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Button SE ID</mat-label>\n          <input formControlName=\"buttonSe\" matInput required type=\"number\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Chain Slide SE ID</mat-label>\n          <input formControlName=\"chainSlideSe\" matInput required type=\"number\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Slide SE ID</mat-label>\n          <input formControlName=\"slideSe\" matInput required type=\"number\">\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <mat-label>Slider Touch SE ID</mat-label>\n          <input formControlName=\"sliderTouchSe\" matInput required type=\"number\">\n        </mat-form-field>\n        <button [disabled]=\"!customizeForm.valid\" mat-flat-button type=\"submit\">Submit</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Ranking</mat-card-title>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Easy</mat-card-title>\n    <mat-card-content>\n      <table class=\"zebra\" *ngIf=\"easyRanking.length > 0;else empty_easy\">\n        <tr *ngFor=\"let item of easyRanking; index as i\">\n          <td>{{i+1}}. {{item.playerName}}</td>\n          <td>{{item.score}}</td>\n          <td>{{item.attain/100}}%</td>\n          <td><button mat-flat-button (click)=\"addRival(item.id)\">Add Rival</button></td>\n        </tr>\n      </table>\n      <ng-template #empty_easy>Nobody play this.</ng-template>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Normal</mat-card-title>\n    <mat-card-content>\n      <table class=\"zebra\" *ngIf=\"normalRanking.length > 0;else empty_easy\">\n        <tr *ngFor=\"let item of normalRanking; index as i\">\n          <td>{{i+1}}. {{item.playerName}}</td>\n          <td>{{item.score}}</td>\n          <td>{{item.attain/100}}%</td>\n          <td><button mat-flat-button (click)=\"addRival(item.id)\">Add Rival</button></td>\n        </tr>\n      </table>\n      <ng-template #empty_easy>Nobody play this.</ng-template>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Hard</mat-card-title>\n    <mat-card-content>\n      <table class=\"zebra\" *ngIf=\"hardRanking.length > 0;else empty_easy\">\n        <tr *ngFor=\"let item of hardRanking; index as i\">\n          <td>{{i+1}}. {{item.playerName}}</td>\n          <td>{{item.score}}</td>\n          <td>{{item.attain/100}}%</td>\n          <td><button mat-flat-button (click)=\"addRival(item.id)\">Add Rival</button></td>\n        </tr>\n      </table>\n      <ng-template #empty_easy>Nobody play this.</ng-template>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Extreme</mat-card-title>\n    <mat-card-content>\n      <table class=\"zebra\" *ngIf=\"extremeRanking.length > 0;else empty_easy\">\n        <tr *ngFor=\"let item of extremeRanking; index as i\">\n          <td>{{i+1}}. {{item.playerName}}</td>\n          <td>{{item.score}}</td>\n          <td>{{item.attain/100}}%</td>\n          <td><button mat-flat-button (click)=\"addRival(item.id)\">Add Rival</button></td>\n        </tr>\n      </table>\n      <ng-template #empty_easy>Nobody play this.</ng-template>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Extra Extreme</mat-card-title>\n    <mat-card-content>\n      <table class=\"zebra\" *ngIf=\"extraExtremeRanking.length > 0;else empty_easy\">\n        <tr *ngFor=\"let item of extraExtremeRanking; index as i\">\n          <td>{{i+1}}. {{item.playerName}}</td>\n          <td>{{item.score}}</td>\n          <td>{{item.attain/100}}%</td>\n          <td><button mat-flat-button (click)=\"addRival(item.id)\">Add Rival</button></td>\n        </tr>\n      </table>\n      <ng-template #empty_easy>Nobody play this.</ng-template>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-display-setting-dialog',\n  templateUrl: 'diva-display-setting.html',\n})\nexport class DivaDisplaySettingDialog {\n\n  // item:  = this.data.commonModule : this.data.commonModule.split(',').map(x => Number(x));\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaDisplaySettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaDisplaySettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaDisplaySettingData {\n  showInterimRanking: boolean;\n  showClearStatus: boolean;\n  showGreatBorder: boolean;\n  showExcellentBorder: boolean;\n  showRivalBorder: boolean;\n  showRgoSetting: boolean;\n}\n","<h1 mat-dialog-title>Change Display Setting</h1>\n<mat-dialog-content>\n  <div>\n    <mat-checkbox [(ngModel)]=\"data.showInterimRanking\">Show Ranking</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"data.showClearStatus\">Show Clear Status</mat-checkbox>\n\n    <mat-checkbox [(ngModel)]=\"data.showGreatBorder\">Show Great Border</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"data.showExcellentBorder\">Show Excellent Border</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"data.showRivalBorder\">Show Rival Border</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"data.showRgoSetting\">Show Rhythm Game Option</mat-checkbox>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-mylist-setting-dialog',\n  templateUrl: 'diva-mylist-setting.html',\n})\nexport class DivaMylistSettingDialog {\n\n  // item:  = this.data.commonModule : this.data.commonModule.split(',').map(x => Number(x));\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaMylistSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaMylistSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaMylistSettingData {\n  selector: string;\n  myList0: string;\n  myList1: string;\n  myList2: string;\n}\n","<h1 mat-dialog-title>Change MyList</h1>\n<div mat-dialog-content>\n  <span>Length is 40, so make sure there is 39 comma</span><br>\n  <mat-form-field>\n    <mat-label>myList</mat-label>\n    <mat-select [(ngModel)]=\"data.selector\">\n      <mat-option value=\"0\">myList1</mat-option>\n      <mat-option value=\"1\">myList2</mat-option>\n      <mat-option value=\"2\">myList3</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field *ngIf=\"data.selector === '0'\">\n    <mat-label>myList1</mat-label>\n    <textarea [(ngModel)]=\"data.myList0\" matInput></textarea>\n  </mat-form-field>\n  <mat-form-field *ngIf=\"data.selector === '1'\">\n    <mat-label>myList2</mat-label>\n    <textarea [(ngModel)]=\"data.myList1\" matInput></textarea>\n  </mat-form-field>\n  <mat-form-field *ngIf=\"data.selector === '2'\">\n    <mat-label>myList3</mat-label>\n    <textarea [(ngModel)]=\"data.myList2\" matInput></textarea>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-name-setting-dialog',\n  templateUrl: 'diva-name-setting.html',\n})\nexport class DivaNameSettingDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaNameSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaNameSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaNameSettingData {\n  playerName: string;\n}\n","<h1 mat-dialog-title>Change Player Name</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input [(ngModel)]=\"data.playerName\" matInput>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data.playerName\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-plate-setting-dialog',\n  templateUrl: 'diva-plate-setting.html',\n})\nexport class DivaPlateSettingDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaPlateSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaPlateSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaPlateSettingData {\n  plateId: number;\n  plateEffectId: number;\n}\n","<h1 mat-dialog-title>Change Plate</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Plate Id:</mat-label>\n    <input type=\"number\" [(ngModel)]=\"data.plateId\" matInput>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Plate Effect Id:</mat-label>\n    <input type=\"number\" [(ngModel)]=\"data.plateEffectId\" matInput>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-rival-setting-dialog',\n  templateUrl: 'diva-rival-setting.html',\n})\nexport class DivaRivalSettingDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaRivalSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaRivalSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaRivalSettingData {\n  rivalId: number;\n}\n","<h1 mat-dialog-title>Set Rival</h1>\n<div mat-dialog-content>\n  <p>Ask your friend's Project DIVA ID or add rival at ranking page</p>\n  <mat-form-field>\n    <mat-label>Rival PdId:</mat-label>\n    <input type=\"number\" [(ngModel)]=\"data.rivalId\" matInput>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-se-setting-dialog',\n  templateUrl: 'diva-se-setting.html',\n})\nexport class DivaSeSettingDialog {\n\n  // item:  = this.data.commonModule : this.data.commonModule.split(',').map(x => Number(x));\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaSeSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaSeSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaSeSettingData {\n  buttonSe: number;\n  chainSlideSe: number;\n  slideSe: number;\n  sliderTouchSe: number;\n}\n","<h1 mat-dialog-title>Change Se</h1>\n<div mat-dialog-content>\n  <span>Set to -1 if you want to disable</span>\n  <mat-form-field>\n    <mat-label>Button Se</mat-label>\n    <input [(ngModel)]=\"data.buttonSe\" matInput type=\"number\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Chain Slide Se</mat-label>\n    <input [(ngModel)]=\"data.chainSlideSe\" matInput type=\"number\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Slide Se</mat-label>\n    <input [(ngModel)]=\"data.slideSe\" matInput type=\"number\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Slider Touch Se</mat-label>\n    <input [(ngModel)]=\"data.sliderTouchSe\" matInput type=\"number\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DivaProfile} from '../model/DivaProfile';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {HttpParams} from '@angular/common/http';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DivaNameSettingDialog} from './diva-name-setting/diva-name-setting.dialog';\nimport {DivaTitleSettingDialog} from './diva-title-setting/diva-title-setting.dialog';\nimport {DivaPlateSettingDialog} from './diva-plate-setting/diva-plate-setting.dialog';\nimport {DivaMylistSettingDialog} from './diva-mylist-setting/diva-mylist-setting.dialog';\nimport {DivaSeSettingDialog} from './diva-se-setting/diva-se-setting.dialog';\nimport {DivaDisplaySettingDialog} from './diva-display-setting/diva-display-setting.dialog';\nimport {DivaSkinSettingDialog} from './diva-skin-setting/diva-skin-setting.dialog';\nimport {DivaRivalSettingDialog} from './diva-rival-setting/diva-rival-setting.dialog';\n\n@Component({\n  selector: 'app-diva-setting',\n  templateUrl: './diva-setting.component.html',\n  styleUrls: ['./diva-setting.component.css']\n})\nexport class DivaSettingComponent implements OnInit {\n\n  profile: DivaProfile;\n\n  pdId: number;\n\n  rival = 'Loading...';\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    public dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.pdId = this.auth.currentUserValue.extId;\n    const param = new HttpParams().set('pdId', String(this.pdId));\n    this.api.get('api/game/diva/playerInfo', param).subscribe(\n      data => this.profile = data,\n      error => this.messageService.notice(error)\n    );\n    this.loadRival();\n  }\n\n  loadRival() {\n    const param = new HttpParams().set('pdId', String(this.pdId));\n    this.api.get('api/game/diva/playerInfo/rival', param).subscribe(\n      data => this.rival = data.rival,\n      error => this.messageService.notice(error)\n    );\n  }\n\n  playerName(): void {\n    const dialogRef = this.dialog.open(DivaNameSettingDialog, {\n      width: '250px',\n      data: {playerName: this.profile.playerName}\n    });\n\n    dialogRef.afterClosed().subscribe(playerName => {\n      if (playerName) {\n        this.api.put('api/game/diva/playerInfo/playerName', {pdId: this.pdId, playerName}).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  playerTitle(): void {\n    const dialogRef = this.dialog.open(DivaTitleSettingDialog, {\n      width: '250px',\n      data: {title: this.profile.levelTitle}\n    });\n\n    dialogRef.afterClosed().subscribe(title => {\n      if (title) {\n        this.api.put('api/game/diva/playerInfo/title', {pdId: this.pdId, title}).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  playerPlate(): void {\n    const dialogRef = this.dialog.open(DivaPlateSettingDialog, {\n      width: '250px',\n      data: {\n        plateId: this.profile.plateId,\n        plateEffectId: this.profile.plateEffectId,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        this.api.put('api/game/diva/playerInfo/plate', {\n          pdId: this.pdId,\n          plateId: data.plateId,\n          plateEffectId: data.plateEffectId\n        }).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  skin(): void {\n    const dialogRef = this.dialog.open(DivaSkinSettingDialog, {\n      width: '250px',\n      data: {\n        skinId: this.profile.commonSkin\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        this.api.put('api/game/diva/playerInfo/commonSkin', {\n          pdId: this.pdId,\n          skinId: data.skinId\n        }).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  myList(): void {\n    const dialogRef = this.dialog.open(DivaMylistSettingDialog, {\n      width: '250px',\n      data: {\n        selector: '0',\n        myList0: this.profile.myList0,\n        myList1: this.profile.myList1,\n        myList2: this.profile.myList2,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        this.api.put('api/game/diva/playerInfo/myList', {\n          pdId: this.pdId,\n          myListId: Number(data.selector),\n          myListData: Number(data.selector) === 0 ? data.myList0 : data.selector === 1 ? data.myList1 : data.myList2\n        }).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  commonSe(): void {\n    const dialogRef = this.dialog.open(DivaSeSettingDialog, {\n      width: '250px',\n      data: {\n        buttonSe: this.profile.buttonSe,\n        chainSlideSe: this.profile.chainSlideSe,\n        slideSe: this.profile.slideSe,\n        sliderTouchSe: this.profile.sliderTouchSe\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        this.api.put('api/game/diva/playerInfo/se', {\n          pdId: this.pdId,\n          buttonSe: data.buttonSe,\n          chainSlideSe: data.chainSlideSe,\n          slideSe: data.slideSe,\n          sliderTouchSe: data.sliderTouchSe\n        }).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  display(): void {\n    const dialogRef = this.dialog.open(DivaDisplaySettingDialog, {\n      width: '250px',\n      data: {\n        showInterimRanking: this.profile.showInterimRanking,\n        showClearStatus: this.profile.showClearStatus,\n        showGreatBorder: this.profile.showGreatBorder,\n        showExcellentBorder: this.profile.showExcellentBorder,\n        showRivalBorder: this.profile.showRivalBorder,\n        showRgoSetting: this.profile.showRgoSetting,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        this.api.put('api/game/diva/playerInfo/display', {\n          pdId: this.pdId,\n          showInterimRanking: data.showInterimRanking,\n          showClearStatus: data.showClearStatus,\n          showGreatBorder: data.showGreatBorder,\n          showExcellentBorder: data.showExcellentBorder,\n          showRivalBorder: data.showRivalBorder,\n          showRgoSetting: data.showRgoSetting,\n        }).subscribe(\n          x => {\n            this.profile = x;\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n\n  setRival(): void {\n    const dialogRef = this.dialog.open(DivaRivalSettingDialog, {\n      width: '250px',\n      data: {\n        rival: -1,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        this.api.put('api/game/diva/playerInfo/rival', {\n          pdId: this.pdId,\n          rivalId: data.rivalId\n        }).subscribe(\n          x => {\n            this.profile = x;\n            this.loadRival();\n            this.messageService.notice('OK');\n          }, error => this.messageService.notice(error)\n        );\n      }\n    });\n  }\n}\n","<mat-card>\n  Please notice that malformed input will break profile loading<br>\n  Leave it empty if you don't know the correct format for some string value\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>Player Name</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">{{profile.playerName}}</div>\n    <div class=\"action\">\n      <button (click)=\"playerName()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>Player Title</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">{{profile.levelTitle}}</div>\n    <div class=\"action\">\n      <button (click)=\"playerTitle()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>Player Plate</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">\n      Plate ID: {{profile.plateId}}<br>\n      Plate Effect ID: {{profile.plateEffectId}}\n    </div>\n    <div class=\"action\">\n      <button (click)=\"playerPlate()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>Common Skin</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">\n      Skin ID:\n      {{profile.commonSkin}}\n    </div>\n    <div class=\"action\">\n      <button (click)=\"skin()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>MyList</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">\n      MyList 1:<br>\n      {{profile.myList0}}<br>\n      MyList 2:<br>\n      {{profile.myList1}}<br>\n      MyList 3:<br>\n      {{profile.myList2}}\n    </div>\n    <div class=\"action\">\n      <button (click)=\"myList()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>Common Se</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">\n      Button Se ID: {{profile.buttonSe == -1 ? 'Disabled' : profile.buttonSe}}<br>\n      Chain Slide Se ID: {{profile.chainSlideSe == -1 ? 'Disabled' : profile.chainSlideSe}}<br>\n      Slide Se ID: {{profile.slideSe == -1 ? 'Disabled' : profile.slideSe}}<br>\n      Slider Touch Se ID: {{profile.sliderTouchSe == -1 ? 'Disabled' : profile.sliderTouchSe}}<br>\n    </div>\n    <div class=\"action\">\n      <button (click)=\"commonSe()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"profile\">\n  <mat-card-title>Display Setting</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">\n      Show Ranking: {{profile.showInterimRanking}}<br>\n      Show Clear Status: {{profile.showClearStatus}}<br>\n      Show Great Border: {{profile.showGreatBorder}}<br>\n      Show Rival Border: {{profile.showRivalBorder}}<br>\n      Show Rhythm Game Option: {{profile.showRgoSetting}}<br>\n    </div>\n    <div class=\"action\">\n      <button (click)=\"display()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"rival\">\n  <mat-card-title>Rival</mat-card-title>\n  <mat-card-content>\n    <div class=\"content\">\n      Rival Name: {{rival}}<br>\n    </div>\n    <div class=\"action\">\n      <button (click)=\"setRival()\" mat-button>Edit</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-skin-setting-dialog',\n  templateUrl: 'diva-skin-setting.html',\n})\nexport class DivaSkinSettingDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaSkinSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaSkinSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaSkinSettingData {\n  skinId: number;\n}\n","<h1 mat-dialog-title>Change Skin</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Skin Id:</mat-label>\n    <input type=\"number\" [(ngModel)]=\"data.skinId\" matInput>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'diva-title-setting-dialog',\n  templateUrl: 'diva-title-setting.html',\n})\nexport class DivaTitleSettingDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DivaTitleSettingDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DivaTitleSettingData) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface DivaTitleSettingData {\n  title: string;\n}\n","<h1 mat-dialog-title>Change Title</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input [(ngModel)]=\"data.title\" matInput>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"onNoClick()\" mat-button>No Thanks</button>\n  <button [mat-dialog-close]=\"data.title\" cdkFocusInitial mat-button>Ok</button>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {DivaProfileComponent} from './diva-profile/diva-profile.component';\nimport {DivaRoutes} from './diva.routing';\nimport {DivaRecentComponent} from './diva-recent/diva-recent.component';\nimport {DivaDecimalPipe} from './util/diva-decimal.pipe';\nimport {DivaSettingComponent} from './diva-setting/diva-setting.component';\nimport {DivaNameSettingDialog} from './diva-setting/diva-name-setting/diva-name-setting.dialog';\nimport {DivaTitleSettingDialog} from './diva-setting/diva-title-setting/diva-title-setting.dialog';\nimport {DivaPlateSettingDialog} from './diva-setting/diva-plate-setting/diva-plate-setting.dialog';\nimport {DivaMylistSettingDialog} from './diva-setting/diva-mylist-setting/diva-mylist-setting.dialog';\nimport {DivaSeSettingDialog} from './diva-setting/diva-se-setting/diva-se-setting.dialog';\nimport {DivaDisplaySettingDialog} from './diva-setting/diva-display-setting/diva-display-setting.dialog';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {DivaSkinSettingDialog} from './diva-setting/diva-skin-setting/diva-skin-setting.dialog';\nimport {DivaPvRecordComponent} from './diva-pv-record/diva-pv-record.component';\nimport {DivaRecordDetailComponent} from './diva-record-detail/diva-record-detail.component';\nimport {DivaManagementComponent} from './diva-management/diva-management/diva-management.component';\nimport {DivaFestaComponent} from './diva-management/diva-festa/diva-festa.component';\nimport {DivaFestaEditComponent} from './diva-management/diva-festa/diva-festa-edit/diva-festa-edit.component';\nimport {DivaContestComponent} from './diva-management/diva-contest/diva-contest.component';\nimport {DivaContestEditComponent} from './diva-management/diva-contest/diva-contest-edit/diva-contest-edit.component';\nimport {DivaModulesComponent} from './diva-modules/diva-modules.component';\nimport {DivaNewsComponent} from './diva-management/diva-news/diva-news.component';\nimport {DivaCustomizeComponent} from './diva-customize/diva-customize.component';\nimport {DivaRivalSettingDialog} from './diva-setting/diva-rival-setting/diva-rival-setting.dialog';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {DivaPvlistComponent} from './diva-pvlist/diva-pvlist.component';\n\n\n@NgModule({\n  declarations: [\n    DivaProfileComponent,\n    DivaPvRecordComponent,\n    DivaRecentComponent,\n    DivaDecimalPipe,\n    DivaSettingComponent,\n    DivaRecordDetailComponent,\n\n    DivaNameSettingDialog,\n    DivaTitleSettingDialog,\n    DivaPlateSettingDialog,\n    DivaSkinSettingDialog,\n    DivaMylistSettingDialog,\n    DivaSeSettingDialog,\n    DivaDisplaySettingDialog,\n    DivaRivalSettingDialog,\n\n    DivaManagementComponent,\n    DivaFestaComponent,\n    DivaFestaEditComponent,\n    DivaContestComponent,\n    DivaContestEditComponent,\n    DivaModulesComponent,\n    DivaNewsComponent,\n    DivaCustomizeComponent,\n    DivaPvlistComponent,\n  ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        DivaRoutes,\n\n        MatFormFieldModule,\n        MatCardModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatInputModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        MatMenuModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        NgxPaginationModule\n    ],\n  entryComponents: [\n    DivaNameSettingDialog,\n    DivaTitleSettingDialog,\n    DivaPlateSettingDialog,\n    DivaSkinSettingDialog,\n    DivaMylistSettingDialog,\n    DivaSeSettingDialog,\n    DivaDisplaySettingDialog,\n    DivaRivalSettingDialog\n  ]\n})\nexport class DivaModule {\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {DivaProfileComponent} from './diva-profile/diva-profile.component';\nimport {DivaRecentComponent} from './diva-recent/diva-recent.component';\nimport {DivaSettingComponent} from './diva-setting/diva-setting.component';\nimport {DivaPvRecordComponent} from './diva-pv-record/diva-pv-record.component';\nimport {DivaRecordDetailComponent} from './diva-record-detail/diva-record-detail.component';\nimport {DivaManagementComponent} from './diva-management/diva-management/diva-management.component';\nimport {DivaFestaComponent} from './diva-management/diva-festa/diva-festa.component';\nimport {DivaFestaEditComponent} from './diva-management/diva-festa/diva-festa-edit/diva-festa-edit.component';\nimport {DivaContestComponent} from './diva-management/diva-contest/diva-contest.component';\nimport {DivaContestEditComponent} from './diva-management/diva-contest/diva-contest-edit/diva-contest-edit.component';\nimport {DivaModulesComponent} from './diva-modules/diva-modules.component';\nimport {DivaNewsComponent} from './diva-management/diva-news/diva-news.component';\nimport {DivaCustomizeComponent} from './diva-customize/diva-customize.component';\nimport {DivaPvlistComponent} from './diva-pvlist/diva-pvlist.component';\n\nconst routes: Routes = [\n  {path: 'profile', component: DivaProfileComponent},\n  {path: 'record', component: DivaPvRecordComponent},\n  {path: 'record/:pvId', component: DivaRecordDetailComponent},\n  {path: 'recent', component: DivaRecentComponent},\n  {path: 'setting', component: DivaSettingComponent},\n  {path: 'management', component: DivaManagementComponent},\n  {path: 'management/festa', component: DivaFestaComponent},\n  {path: 'management/festa/edit', component: DivaFestaEditComponent},\n  {path: 'management/contest', component: DivaContestComponent},\n  {path: 'management/contest/edit', component: DivaContestEditComponent},\n  {path: 'management/news', component: DivaNewsComponent},\n  {path: 'modules', component: DivaModulesComponent},\n  {path: 'customizes', component: DivaCustomizeComponent},\n  {path: 'pv', component: DivaPvlistComponent},\n];\n\nexport const DivaRoutes = RouterModule.forChild(routes);\n","import {DivaPv} from './DivaPv';\n\nexport interface DivaPvRecord {\n    x: unknown;\n  pvId: number;\n  songInfo?: DivaPv;\n  edition: Edition;\n  difficulty: Difficulty;\n  result: Result;\n  maxScore: number;\n  maxAttain: number;\n  challengeKind: number;\n  rgoPurchased: string;\n  rgoPlayed: string;\n}\n\nexport enum Edition {\n  Original,\n  Extra\n}\n\nexport enum Difficulty {\n  UNDEFINED = -1,\n  Easy = 0,\n  Normal = 1,\n  Hard = 2,\n  Extreme = 3,\n}\n\nexport enum Result {\n  NO_CLEAR = -1,\n  MISS_TAKE = 0,\n  CHEAP = 1,\n  STANDARD = 2,\n  GREAT = 3,\n  EXCELLENT = 4,\n  PERFECT = 5\n}\n","import {Difficulty} from '../DivaPvRecord';\n\nexport interface Festa {\n  id: number;\n  enable: boolean;\n  name: string;\n  kind: FestaKind;\n  difficulty: Difficulty;\n  pvList: string;\n  attributes: string;\n  addVP: number;\n  vpMultiplier: number;\n  start: Date;\n  end: Date;\n  createDate: Date;\n}\n\nexport enum FestaKind {\n  PinkFesta = 0,\n  GreenFesta = 1,\n}\n","export interface Contest {\n  id: number;\n  enable: boolean;\n  startTime: Date;\n  endTime: Date;\n  name: string;\n  description: string;\n  league: ContestLeague;\n  stars: number;\n  minComplexity: number;\n  maxComplexity: number;\n  stages: number;\n  stageLimit: ContestStageLimit;\n  normaType: ContestNormaType;\n  bronzeBorders: number;\n  sliverBorders: number;\n  goldBorders: number;\n  pvList?: string;\n  pvDiffList?: string;\n  bronzeContestReward?: string;\n  sliverContestReward?: string;\n  goldContestReward?: string;\n  contestEntryReward?: string;\n}\n\nexport enum ContestLeague {\n  Beginner = 0,\n  Intermediate = 1,\n  Advanced = 2,\n  Professional = 3,\n}\n\nexport enum ContestStageLimit {\n  Unlimited = 0,\n  Limited = 1,\n}\n\nexport enum ContestNormaType {\n  Score = 0,\n  Percentage = 1,\n  CoolPercentage = 2,\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'divaDecimal'\n})\nexport class DivaDecimalPipe implements PipeTransform {\n\n  transform(num: number): string {\n    return String(num / 100);\n  }\n\n}\n","export enum Difficulty {\n  Basic,\n  Advanced,\n  Expert,\n  Master,\n  Lunatic,\n  Max,\n}\n\nexport enum PlayResult {\n  Failed,\n  Finish,\n  Clear,\n  Max\n}\n\nexport enum NotesComboResult {\n  None,\n  FullCombo,\n  AllBreak,\n  Max,\n}\n\nexport enum BellComboResult {\n  None,\n  FullBell,\n  Max,\n}\n\nexport enum RetireResult {\n  None,\n  NoLife,\n  ScoreRetire,\n  DeathSkill,\n  Max,\n}\n\nexport enum BattleRank {\n  Invalid = -1,\n  Begin = 0,\n  None = 0,\n  Fuka = 1,\n  Ka = 2,\n  Ryo = 3,\n  Yu = 4,\n  Shu = 5,\n  Goku = 6,\n  Goku1 = 7,\n  Goku2 = 8,\n  Goku3 = 9,\n  Goku4 = 10,\n  Goku5 = 11,\n  End = 12,\n}\n\nexport enum TechnicalRank {\n  Invalid = -1,\n  Begin = 0,\n  None = 0,\n  D = 1,\n  C = 2,\n  B = 3,\n  BB = 4,\n  BBB = 5,\n  A = 6,\n  AA = 7,\n  AAA = 8,\n  S = 9,\n  SS = 10,\n  SSS = 11,\n  SSS1 = 12,\n  End = 13,\n}\n\n// The AttributeType send by client is + 1. So the value here is start from 1\nexport enum AttributeType {\n  Fire = 1,\n  Aqua = 2,\n  Leaf = 3,\n  Max = 4\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {HttpParams} from '@angular/common/http';\nimport {PlayerRatingItem} from '../model/PlayerRatingItem';\nimport {OngekiMusic} from '../model/OngekiMusic';\nimport {environment} from '../../../../environments/environment';\nimport {PropertyEntry} from '../../../model/PropertyEntry';\nimport {AttributeType, Difficulty} from '../model/OngekiEnums';\nimport {OngekiCard} from '../model/OngekiCard';\nimport {DisplayOngekiProfile} from '../model/OngekiProfile';\n\n@Component({\n  selector: 'app-ongeki-battle-point',\n  templateUrl: './ongeki-battle-point.component.html',\n  styleUrls: ['./ongeki-battle-point.component.css']\n})\nexport class OngekiBattlePointComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  aimeId = '';\n\n  profile: DisplayOngekiProfile;\n\n  bPList: PlayerRatingItem[] = [];\n\n  difficulty = Difficulty;\n  attribute = AttributeType;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', this.aimeId);\n    this.api.get('api/game/ongeki/profile', param).subscribe(\n      data => this.profile = data,\n      error => this.messageService.notice(error)\n    );\n    this.load();\n  }\n\n  load() {\n    const param = new HttpParams().set('aimeId', this.aimeId).set('key', 'battle_point_base');\n    this.api.get('api/game/ongeki/general', param).subscribe(\n      (data: PropertyEntry) => {\n        if (data.propertyValue.indexOf(',') < 0) {\n          this.messageService.notice('Can\\'t read battle data. Please save again in-game');\n        } else {\n          const records = data.propertyValue.split(',');\n          records.forEach(record => {\n            const value = record.split(':');\n            const item: PlayerRatingItem = {\n              musicId: Number(value[0]),\n              level: Number(value[1]),\n              value: Number(value[2]),\n            };\n            this.dbService.getByID<OngekiMusic>('ongekiMusic', item.musicId).then(\n              x => {\n                item.musicInfo = x;\n                this.dbService.getByID<OngekiCard>('ongekiCard', item.musicInfo.bossCardId)\n                  .then(y => item.bossCardInfo = y);\n              }\n            );\n            this.bPList.push(item);\n          });\n        }\n      }\n    );\n  }\n}\n","<mat-card>\n  <mat-card-title>Battle Point</mat-card-title>\n</mat-card>\n\n<mat-card>\n  <mat-card-content>\n    Current Battle Point: {{profile ? profile.battlePoint : ''}}\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <h3>Best Battle Points</h3>\n  <table class=\"zebra battle-point-table\">\n    <thead>\n    <th>Music</th>\n    <th>Level</th>\n    <th>Point</th>\n    <th>Attr.</th>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let item of bPList; index as i\">\n      <td class=\"music-title\">\n        <img src=\"{{host}}ongeki/jacket/UI_Jacket_{{item.musicId|formatNumber:4}}.png\">\n        {{i + 1}}: {{item.musicInfo ? item.musicInfo.name : 'MusicID:' + item.musicId}}\n      </td>\n      <td>\n        {{difficulty[item.level]}}\n      </td>\n      <td>\n        {{item.value}}\n      </td>\n      <td>\n        {{item.bossCardInfo ? item.bossCardInfo.attribute : 'Unknown' }}\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</mat-card>\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport {OngekiCard} from '../model/OngekiCard';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {animate, style, transition, trigger} from '@angular/animations';\nimport {Bitmap, Shadow, Shape, Stage, Ticker} from '@createjs/easeljs';\nimport {Ease, Timeline, Tween} from '@createjs/tweenjs';\n\n@Component({\n  selector: 'app-ongeki-card-gacha',\n  templateUrl: './ongeki-card-gacha.component.html',\n  styleUrls: ['./ongeki-card-gacha.component.css'],\n  animations: [\n    trigger('control', [\n      transition(':enter', [\n        style({opacity: 0}),\n        animate('1s 0.5s ease-out',\n          style({opacity: 1}))\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('1s ease-in',\n          style({opacity: 0}))\n      ])\n    ])\n  ]\n})\nexport class OngekiCardGachaComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('card_animation', {static: true})\n  canvas: ElementRef<HTMLCanvasElement>;\n\n  @ViewChild('card_rarity_animation', {static: true})\n  rarityCanvas: ElementRef<HTMLCanvasElement>;\n\n  @ViewChild('card_rarity_animation_container', {static: true})\n  rarityCanvasContainer: ElementRef<HTMLDivElement>;\n\n\n  host = environment.assetsHost;\n  assets = environment.assetsHost + 'ongeki/gameUi/';\n\n  isStarted = false;\n\n  rarity: number[] = [];\n  rList: OngekiCard[] = [];\n  srList: OngekiCard[] = [];\n  ssrList: OngekiCard[] = [];\n\n  cardResultList: CardResult[] = [];\n  currentShowedIndex = 0;\n  showCurrentCard = false;\n\n  submitSuccessful = 0;\n\n  NEW_GET_BANNER: Bitmap;\n  currentTimeLine: Timeline;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.rarity = Array(70).fill(1);\n    this.rarity = this.rarity.concat(Array(25).fill(2));\n    this.rarity = this.rarity.concat(Array(5).fill(3));\n    this.dbService.getAll<OngekiCard>('ongekiCard').then(\n      x => {\n        x.forEach(y => {\n          switch (y.rarity) {\n            case 'R':\n              this.rList.push(y);\n              break;\n            case 'SR':\n              this.srList.push(y);\n              break;\n            case 'SSR':\n              this.ssrList.push(y);\n              break;\n          }\n        });\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    // this.initAnimation();\n  }\n\n  gacha(count: number) {\n    this.cardResultList = [];\n    this.currentShowedIndex = 0;\n    this.isStarted = true;\n    this.submitSuccessful = 0;\n\n    for (let i = 0; i < count; i++) {\n      const rarity = this.rarity[Math.floor(Math.random() * 99)];\n      console.log('rarity: ' + rarity);\n      let card;\n      switch (rarity) {\n        case 1:\n          card = this.rList[Math.floor(Math.random() * this.rList.length)];\n          break;\n        case 2:\n          card = this.srList[Math.floor(Math.random() * this.srList.length)];\n          break;\n        case 3:\n          card = this.ssrList[Math.floor(Math.random() * this.ssrList.length)];\n          break;\n      }\n      console.log('card: ' + JSON.stringify(card));\n      this.cardResultList.push({\n        show: false,\n        card\n      });\n    }\n    this.submitCardData();\n    return;\n  }\n\n  open() {\n    console.log('clicked');\n    if (this.currentShowedIndex < this.cardResultList.length) {\n      const card = this.cardResultList[this.currentShowedIndex];\n      card.show = true;\n\n      this.showCurrentCard = true;\n\n      if (card.card.rarity === 'SR') {\n        setTimeout(() => this.showRarityEffect('SR'), 500);\n      } else if (card.card.rarity === 'SSR') {\n        setTimeout(() => this.showRarityEffect('SSR'), 500);\n      } else {\n        this.resetRarityEffect();\n      }\n\n    } else {\n      this.isStarted = false;\n    }\n  }\n\n  // a global click handler to click on multiple overlay\n  clickHandler() {\n    if (!this.showCurrentCard) {\n      this.open();\n      return;\n    }\n\n    if (this.currentTimeLine) {\n      if (this.currentTimeLine.position < this.currentTimeLine.skipTime) {\n        this.currentTimeLine.gotoAndPlay('skip');\n        this.currentTimeLine.isSkipable = false;\n      }\n    }\n  }\n\n  resetRarityEffect() {\n    this.rarityCanvasContainer.nativeElement.style.opacity = '0';\n    this.currentShowedIndex += 1;\n    this.showCurrentCard = false;\n  }\n\n  showRarityEffect(type: string) {\n    // Initialize full screen canvas\n\n    this.rarityCanvasContainer.nativeElement.style.opacity = '1';\n    const n = this.rarityCanvas.nativeElement;\n\n    // Render at 2x resolution. as a workaround for canvas low quality image scaling.\n    const WIDTH = this.rarityCanvasContainer.nativeElement.clientWidth * 2;\n    const HEIGHT = this.rarityCanvasContainer.nativeElement.clientHeight * 2;\n    n.width = WIDTH;\n    n.height = HEIGHT;\n    console.log(n);\n    const STAGE = new Stage('card-rarity-animation');\n    STAGE.alpha = 0;\n\n    Ticker.on('tick', STAGE);\n    Ticker.framerate = 60;\n\n    // BG\n    const BACKGROUND = new Shape();\n    BACKGROUND.graphics.beginFill('black').drawRect(0, 0, STAGE.canvas.width, STAGE.canvas.height);\n    STAGE.addChild(BACKGROUND);\n\n    // Flash\n    const FLASH = new Shape();\n    FLASH.graphics.beginFill('white').drawRect(0, 0, STAGE.canvas.width, STAGE.canvas.height);\n\n    const CARD_BITMAP = new Bitmap(this.host + 'ongeki/card/UI_Card_' +\n      this.formatNumber(this.cardResultList[this.currentShowedIndex].card.id, 6) + '.png');\n\n    // Set anchor point\n    CARD_BITMAP.regX = 768 / 2;\n    CARD_BITMAP.regY = 1052 / 2;\n\n    const CARD_SMALL_BITMAP = CARD_BITMAP.clone();\n\n    CARD_SMALL_BITMAP.regX = 768 / 2;\n    CARD_SMALL_BITMAP.regY = 1052 / 2;\n\n    const SHADOW = new Shadow('#FFFFFF', 0, 0, 15);\n    if (type === 'SSR') {\n      // Card image size is 768*1052\n\n      // Resize it to 1.8x\n      if (HEIGHT > WIDTH) {\n        CARD_BITMAP.scale = HEIGHT / 1052 * 2;\n      } else {\n        CARD_BITMAP.scale = WIDTH / 768 * 2;\n      }\n\n      // Initial Position\n      CARD_BITMAP.x = WIDTH * 0.8;\n      CARD_BITMAP.y = HEIGHT * 0.2;\n\n      CARD_BITMAP.alpha = CARD_SMALL_BITMAP.alpha = 0;\n\n      // Set small card size\n      let target = 0;\n      if (HEIGHT > WIDTH) {\n        CARD_SMALL_BITMAP.scale = WIDTH / 768 * 0.9;\n        target = WIDTH / 768 * 0.8;\n      } else {\n        CARD_SMALL_BITMAP.scale = HEIGHT / 1052 * 0.9;\n        target = HEIGHT / 1052 * 0.8;\n      }\n\n      CARD_SMALL_BITMAP.x = WIDTH * 0.5;\n      CARD_SMALL_BITMAP.y = HEIGHT * 0.5;\n\n      CARD_SMALL_BITMAP.shadow = SHADOW;\n\n      STAGE.addChild(CARD_BITMAP, CARD_SMALL_BITMAP);\n\n      const tweenCard = Tween.get(CARD_BITMAP, {loop: false})\n        .wait(100)\n        .to({\n          alpha: 1\n        }, 100)\n        .to({\n          x: WIDTH * 0.2\n        }, 2000, Ease.getPowInOut(2))\n        .wait(50)\n        .to({\n          x: WIDTH * 0.8,\n          y: HEIGHT * 0.7\n        }, 0) // Reset it to top\n        .wait(50)\n        .to({\n          x: WIDTH * 0.2\n        }, 2000, Ease.getPowInOut(2))\n        .wait(50)\n        .to({\n          x: WIDTH * 0.5,\n          y: HEIGHT * 0.5\n        }, 0) // Reset it to center\n        .wait(50)\n        .to({\n          scale: WIDTH / 768 * 1.3,\n          alpha: 0.8\n        }, 1700, Ease.getPowInOut(4))\n        .wait(100);\n\n      const tweenCardSmall = Tween.get(CARD_SMALL_BITMAP, {loop: false})\n        .wait(5500)\n        .to({\n          alpha: 1,\n          scale: target\n        }, 500, Ease.getPowInOut(4));\n\n      STAGE.addChild(FLASH);\n      const tweenFlash = Tween.get(FLASH)\n        .wait(200)\n        .to({\n          alpha: 0.2\n        }, 100)\n        .wait(1900)\n        // Flash\n        .to({alpha: 1}, 80, Ease.getPowOut(4))\n        .wait(40)\n        .to({alpha: 0.2}, 80, Ease.getPowIn(4))\n\n        .wait(1900)\n        // Flash\n        .to({alpha: 1}, 80, Ease.getPowOut(4))\n        .wait(40)\n        .to({alpha: 0.2}, 80, Ease.getPowIn(4))\n\n        .wait(1000)\n        // Flash\n        .to({alpha: 0.5}, 80, Ease.getPowOut(4))\n        .wait(40)\n        .to({alpha: 0.2}, 80, Ease.getPowIn(4))\n\n        .wait(2000);\n      const tweenStage = Tween.get(STAGE)\n        .to({\n          alpha: 1\n        }, 200)\n        .wait(8700)\n        .to({\n          alpha: 0\n        }, 1000);\n      this.currentTimeLine = new Timeline();\n      this.currentTimeLine.addLabel('skip', 8500);\n      this.currentTimeLine.skipTime = 8500;\n      this.currentTimeLine.addTween(tweenCard);\n      this.currentTimeLine.addTween(tweenCardSmall);\n      this.currentTimeLine.addTween(tweenFlash);\n      this.currentTimeLine.addTween(tweenStage);\n      this.currentTimeLine.isSkipable = true;\n      this.currentTimeLine.on('complete', () => this.resetRarityEffect());\n      this.currentTimeLine.gotoAndPlay(0);\n      console.log(this.currentTimeLine);\n    }\n\n    // SR Animation\n    if (type === 'SR') {\n\n      // Card image size is 768*1052\n      // Resize it to canvas\n      if (HEIGHT > WIDTH) {\n        CARD_BITMAP.scale = HEIGHT / 1052 * 1.3;\n      } else {\n        CARD_BITMAP.scale = WIDTH / 768 * 1.2;\n      }\n\n      // Initial Position\n      CARD_BITMAP.x = WIDTH * 0.5;\n      CARD_BITMAP.y = HEIGHT * 0.4;\n\n      CARD_BITMAP.alpha = CARD_SMALL_BITMAP.alpha = 0;\n\n      // Set small card size\n      if (HEIGHT > WIDTH) {\n        CARD_SMALL_BITMAP.scale = WIDTH / 768 * 0.8;\n      } else {\n        CARD_SMALL_BITMAP.scale = HEIGHT / 1052 * 0.8;\n      }\n\n      CARD_SMALL_BITMAP.x = WIDTH * 0.5;\n      CARD_SMALL_BITMAP.y = HEIGHT * 0.5;\n\n      CARD_SMALL_BITMAP.shadow = SHADOW;\n\n      STAGE.addChild(CARD_BITMAP, CARD_SMALL_BITMAP);\n\n      const tweenCard = Tween.get(CARD_BITMAP, {loop: false})\n        .wait(100)\n        .to({\n          alpha: 1\n        }, 100)\n        .to({\n          y: HEIGHT * 0.6\n        }, 4000)\n        .wait(50)\n        .to({\n          scale: WIDTH / 768 * 1.3,\n          x: WIDTH * 0.5,\n          y: HEIGHT * 0.5,\n          alpha: 0.8\n        }, 0)\n        .wait(100);\n\n      const tweenCardSmall = Tween.get(CARD_SMALL_BITMAP, {loop: false})\n        .wait(4300)\n        .to({\n          alpha: 1\n        }, 100);\n\n      STAGE.addChild(FLASH);\n      const tweenFlash = Tween.get(FLASH)\n        .wait(200)\n        .to({\n          alpha: 0\n        }, 4000)\n        // Flash\n        .to({alpha: 0.8}, 80, Ease.getPowOut(4))\n        .wait(40)\n        .to({alpha: 0.2}, 80, Ease.getPowIn(4))\n\n        .wait(1500)\n        .to({\n          alpha: 1\n        }, 1000);\n      const tweenStage = Tween.get(STAGE)\n        .to({\n          alpha: 1\n        }, 200)\n        .wait(5500)\n        .to({\n          alpha: 0\n        }, 1000);\n      this.currentTimeLine = new Timeline();\n      this.currentTimeLine.addLabel('skip', 4250);\n      this.currentTimeLine.skipTime = 4250;\n      this.currentTimeLine.addTween(tweenCard);\n      this.currentTimeLine.addTween(tweenCardSmall);\n      this.currentTimeLine.addTween(tweenFlash);\n      this.currentTimeLine.addTween(tweenStage);\n      this.currentTimeLine.isSkipable = true;\n      this.currentTimeLine.on('complete', () => this.resetRarityEffect());\n      this.currentTimeLine.gotoAndPlay(0);\n      console.log(this.currentTimeLine);\n    }\n  }\n\n  submitCardData() {\n    const aimeId = this.auth.currentUserValue.extId;\n    this.cardResultList.forEach(x => {\n      this.api.post('api/game/ongeki/card', {\n        aimeId,\n        cardId: x.card.id\n      }).subscribe(\n        data => {\n          this.submitSuccessful = this.submitSuccessful + 1;\n          return;\n        },\n        error => this.messageService.notice(error)\n      );\n    });\n  }\n\n  formatNumber(value: number, length?: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n      str = '0' + str;\n    }\n    return str;\n  }\n\n}\n\ninterface CardResult {\n  show: boolean;\n  card: OngekiCard;\n}\n","<mat-card *ngIf=\"!isStarted\" [@control] class=\"control\">\n  <mat-card-content>\n    <h2>Regular Gacha</h2>\n    <p>This is still work in progress. Animation isn't implemented.</p>\n    <div class=\"gacha-button-group\">\n      <button (click)=\"gacha(1)\" mat-raised-button>Gacha<br>1x</button>\n      <button (click)=\"gacha(5)\" mat-raised-button>Gacha<br>5x</button>\n      <button (click)=\"gacha(11)\" mat-raised-button>Gacha<br>11x</button>\n    </div>\n    <p>Detail:<br>\n      R: 70%<br>\n      SR: 25%<br>\n      SSR: 5%\n    </p>\n    <p *ngIf=\"cardResultList.length > 0\">\n      Card data saved in server: {{submitSuccessful}} , failed {{cardResultList.length - submitSuccessful}}\n    </p>\n  </mat-card-content>\n</mat-card>\n\n<div class=\"full-screen\">\n  <div (click)=\"clickHandler()\" *ngIf=\"isStarted\" [@control] class=\"card-container\">\n    <div *ngFor=\"let item of cardResultList\" class=\"result-card\" style>\n      <div [class.flip]=\"item.show\" class=\"card-image\">\n        <div class=\"image-front\">\n          <img src=\"{{assets}}UI_CMN_CardBackSide.png\">\n        </div>\n        <div class=\"image-back\">\n          <img src=\"{{host}}ongeki/card/UI_Card_{{item.card.id|formatNumber:6}}.png\">\n        </div>\n      </div>\n      <div class=\"overlay\">\n        <img src=\"{{assets}}SB_CMN_CardGet_Card_kira.png\">\n      </div>\n      <div *ngIf=\"item.card.rarity == 'SR' && !item.show\" class=\"overlay-rarity\">\n        <img src=\"{{assets}}UI_CMN_CardGlow_SR.png\">\n      </div>\n      <div *ngIf=\"item.card.rarity == 'SSR' && !item.show\" class=\"overlay-rarity\">\n        <img src=\"{{assets}}UI_CMN_CardGlow_SSR.png\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<div #card_rarity_animation_container (click)=\"clickHandler()\" class=\"card-animation-full-screen\">\n  <canvas #card_rarity_animation height=\"1920\" id=\"card-rarity-animation\" width=\"1080\"></canvas>\n</div>\n\n<div class=\"card-animation-full-screen\" style=\"display: none\">\n  <canvas #card_animation height=\"1920\" id=\"card-detail-animation\" width=\"1080\"></canvas>\n</div>\n\n<div id=\"image_loader\">\n  <img id=\"new_card_get\" src=\"{{assets}}UI_CMN_CardGet_NEW.png\">\n  <img src=\"{{assets}}UI_CMN_CardGet_NEW_Right_Eff_00_1.png\">\n  <img src=\"{{assets}}SB_CMN_CardGet_class_N.png\">\n  <img src=\"{{assets}}SB_CMN_CardGet_Title.png\">\n  <img src=\"{{assets}}UI_CMN_CardCharacter_Mask.png\">\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {environment} from '../../../../environments/environment';\nimport {OngekiCard} from '../model/OngekiCard';\nimport {OngekiSkill} from '../model/OngekiSkill';\nimport {OngekiCharacter} from '../model/OngekiCharacter';\n\n@Component({\n  selector: 'app-ongeki-card-list',\n  templateUrl: './ongeki-card-list.component.html',\n  styleUrls: ['./ongeki-card-list.component.css']\n})\nexport class OngekiCardListComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  cardList: OngekiCard[] = [];\n\n  p = 1;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.dbService.getAll<OngekiCard>('ongekiCard').then(\n      x => x.forEach(y => {\n        this.dbService.getByID<OngekiCharacter>('ongekiCharacter', y.charaId).then(z => y.characterInfo = z);\n        this.dbService.getByID<OngekiSkill>('ongekiSkill', y.skillId).then(z => y.skillInfo = z);\n        this.dbService.getByID<OngekiSkill>('ongekiSkill', y.choKaikaSkillId).then(z => y.choKaikaSkillInfo = z);\n        this.cardList.push(y);\n      })\n    );\n  }\n\n  insertCard(cardId: number) {\n    const aimeId = this.auth.currentUserValue.extId;\n    this.api.post('api/game/ongeki/card', {\n      aimeId,\n      cardId\n    }).subscribe(\n      data => this.messageService.notice('Successful, go to check your card list'),\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>All Card List</mat-card-title>\n</mat-card>\n\n<mat-card *ngFor=\"let item of cardList | paginate: { id: 'card', itemsPerPage: 10, currentPage: p }\">\n  <mat-card-title>\n    {{item.name}}\n  </mat-card-title>\n  <mat-card-content>\n    <div class=\"card-display\">\n      <div class=\"image\">\n        <a href=\"{{host}}ongeki/card/UI_Card_{{item.id|formatNumber:6}}.png\" target=\"_blank\">\n          <img src=\"{{host}}ongeki/card/UI_Card_{{item.id|formatNumber:6}}_S.png\">\n        </a>\n        <div *ngIf=\"item.characterInfo\">\n          {{item.characterInfo.name}}<br>\n          {{item.characterInfo.cv ? '(CV: ' + item.characterInfo.cv + ')' : ''}}\n        </div>\n      </div>\n      <div class=\"content\">\n        <table class=\"zebra\">\n          <tr>\n            <th>Card ID</th>\n            <td>{{item.id}}</td>\n          </tr>\n          <tr>\n            <th>Rarity</th>\n            <td>{{item.rarity}}</td>\n          </tr>\n          <tr>\n            <th>Card Name</th>\n            <td>{{item.nickName}}</td>\n          </tr>\n          <tr>\n            <th>Attribute</th>\n            <td>{{item.attribute}}</td>\n          </tr>\n          <tr>\n            <th>School</th>\n            <td>{{item.school}}</td>\n          </tr>\n          <tr>\n            <th>Gakunen</th>\n            <td>{{item.gakunen}}</td>\n          </tr>\n          <tr>\n            <th>Skill</th>\n            <td>{{item.skillInfo ? item.skillInfo.name : 'ID:' + item.skillId}}</td>\n          </tr>\n          <tr>\n            <th>ChoKaika Skill</th>\n            <td>{{item.choKaikaSkillInfo ? item.choKaikaSkillInfo.name : 'ID:' + item.choKaikaSkillId}}</td>\n          </tr>\n          <tr>\n            <th>CardNumber</th>\n            <td>{{item.cardNumber}}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </mat-card-content>\n  <mat-card-actions>\n    <div fxFlex></div>\n    <button (click)=\"insertCard(item.id)\" mat-button>I want it!!</button>\n  </mat-card-actions>\n</mat-card>\n<div class=\"pagination\">\n  <pagination-controls (pageChange)=\"p = $event\" id=\"card\"></pagination-controls>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpParams} from '@angular/common/http';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {OngekiCard} from '../model/OngekiCard';\nimport {OngekiCharacter} from '../model/OngekiCharacter';\nimport {PlayerCard} from '../model/PlayerCard';\nimport {map, tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\nimport {OngekiSkill} from '../model/OngekiSkill';\n\n@Component({\n  selector: 'app-ongeki-card',\n  templateUrl: './ongeki-card.component.html',\n  styleUrls: ['./ongeki-card.component.css']\n})\nexport class OngekiCardComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  cardList: Observable<PlayerCard[]>;\n\n  currentPage = 1;\n  totalElements = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.load(this.currentPage);\n  }\n\n  load(page: number) {\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', aimeId).set('page', String(page - 1));\n    this.cardList = this.api.get('api/game/ongeki/card', param).pipe(\n      tap(\n        data => {\n          this.totalElements = data.totalElements;\n          this.currentPage = page;\n        }\n      ),\n      map(\n        data => {\n          data.content.forEach(x => {\n            this.dbService.getByID<OngekiCard>('ongekiCard', x.cardId).then(\n              y => {\n                x.cardInfo = y;\n                this.dbService.getByID<OngekiCharacter>('ongekiCharacter', y.charaId).then(\n                  z => x.characterInfo = z\n                );\n                this.dbService.getByID<OngekiSkill>('ongekiSkill', y.skillId).then(\n                  z => x.skillInfo = z\n                );\n              }\n            );\n          });\n          return data.content;\n        },\n        error => this.messageService.notice(error)\n      )\n    );\n  }\n\n  kaika(cardId: number, type: string) {\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', aimeId);\n    this.api.post('api/game/ongeki/card/' + cardId + '/' + type, param).subscribe(\n      data => {\n        this.messageService.notice('Successful');\n        this.load(this.currentPage);\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>My Card List</mat-card-title>\n  <mat-card-content>\n    <p class=\"hint\">\n      Hint: <br>\n      Every card has base Lv.10 Max. After Kaika, max level will plus 40. (Means 10 + 40)<br>\n      Every Star larger than 1 will add 5 levels to max level. And R,SR,SSR card can get max 5 stars, N card can get max\n      10 stars.<br>\n      Means max level for N card is 100, for R,SR,SSR card is 70.<br>\n      Star level can be increase by getting the same card or use item in game.\n    </p>\n    <div class=\"action\">\n      <button mat-button routerLink=\"all\">Show All Cards</button>\n      <button mat-button routerLink=\"gacha\">Gacha(Work in progress)</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card\n  *ngFor=\"let item of cardList | async | paginate: { id: 'server', itemsPerPage: 10, currentPage: currentPage, totalItems: totalElements }\">\n  <mat-card-title>\n    {{item.cardInfo ? item.cardInfo.name : 'ID:' + item.cardId}}\n  </mat-card-title>\n  <mat-card-content>\n    <div class=\"card-display\">\n      <div class=\"image\">\n        <a href=\"{{host}}ongeki/card/UI_Card_{{item.cardId|formatNumber:6}}.png\" target=\"_blank\">\n          <img src=\"{{host}}ongeki/card/UI_Card_{{item.cardId|formatNumber:6}}_S.png\">\n        </a>\n        <div *ngIf=\"item.characterInfo\">\n          {{item.characterInfo.name}}<br>\n          {{item.characterInfo.cv ? '(CV: ' + item.characterInfo.cv + ')' : ''}}\n        </div>\n      </div>\n      <div class=\"content\">\n        <table class=\"zebra\">\n          <tr>\n            <th>Level</th>\n            <td>{{item.level}}</td>\n          </tr>\n          <tr>\n            <th>Current Max Level</th>\n            <td>{{item.maxLevel}}</td>\n          </tr>\n          <tr>\n            <th>Star</th>\n            <td>{{item.digitalStock}}</td>\n          </tr>\n          <tr>\n            <th>Skill</th>\n            <td>{{item.skillInfo ? item.skillInfo.name : 'ID:' + item.skillId}}</td>\n          </tr>\n          <tr>\n            <th>Kaika</th>\n            <td>{{item.kaikaDate == '0000-00-00 00:00:00.0' ? 'No' : 'Yes'}}</td>\n          </tr>\n          <tr>\n            <th>ChoKaika</th>\n            <td>{{item.choKaikaDate == '0000-00-00 00:00:00.0' ? 'No' : 'Yes'}}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </mat-card-content>\n  <mat-card-actions>\n    <div fxFlex></div>\n    <button (click)=\"kaika(item.cardId, 'kaika')\" [disabled]=\"item.kaikaDate != '0000-00-00 00:00:00.0'\"\n            mat-button>\n      Kaika\n    </button>\n    <button (click)=\"kaika(item.cardId, 'choKaika')\" [disabled]=\"item.choKaikaDate != '0000-00-00 00:00:00.0'\"\n            mat-button>\n      ChoKaika\n    </button>\n  </mat-card-actions>\n</mat-card>\n<div class=\"pagination\">\n  <pagination-controls (pageChange)=\"load($event)\" id=\"server\"></pagination-controls>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {HttpParams} from '@angular/common/http';\nimport {DisplayOngekiProfile} from '../model/OngekiProfile';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {OngekiCard} from '../model/OngekiCard';\nimport {OngekiCharacter} from '../model/OngekiCharacter';\n\n@Component({\n  selector: 'app-ongeki-profile',\n  templateUrl: './ongeki-profile.component.html',\n  styleUrls: ['./ongeki-profile.component.css']\n})\nexport class OngekiProfileComponent implements OnInit {\n\n  profile: DisplayOngekiProfile;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    const aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', aimeId);\n    this.api.get('api/game/ongeki/profile', param).subscribe(\n      data => {\n        this.profile = data;\n        this.dbService.getByID<OngekiCard>('ongekiCard', this.profile.cardId).then(\n          x => this.profile.card = x\n        );\n        this.dbService.getByID<OngekiCharacter>('ongekiCharacter', this.profile.characterId).then(\n          x => this.profile.character = x\n        );\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>Player Profile</mat-card-title>\n  <mat-card-content>\n    <table *ngIf=\"profile\" class=\"zebra\">\n      <tr>\n        <th>Player Name</th>\n        <td>{{profile.userName}}</td>\n      </tr>\n      <tr>\n        <th>Player Rating</th>\n        <td>{{profile.playerRating / 100 | number: '1.2-2'}}</td>\n      </tr>\n      <tr>\n        <th>Player Highest Rating</th>\n        <td>{{profile.highestRating / 100 | number: '1.2-2'}}</td>\n      </tr>\n      <tr>\n        <th>Battle Point</th>\n        <td>{{profile.battlePoint}}</td>\n      </tr>\n      <tr>\n        <th>Player Level</th>\n        <td>{{profile.level}}</td>\n      </tr>\n      <tr>\n        <th>Total Play Count</th>\n        <td>{{profile.playCount}}</td>\n      </tr>\n      <tr>\n        <th>Name Plate Id</th>\n        <td>{{profile.nameplateId}}</td>\n      </tr>\n      <tr>\n        <th>Card</th>\n        <td>{{profile.card ? profile.card.name : 'ID:' + profile.cardId}}</td>\n      </tr>\n      <tr>\n        <th>Character</th>\n        <td>{{profile.character ? profile.character.name : 'ID:' + profile.characterId}}</td>\n      </tr>\n      <tr>\n        <th>Total Tech High Score</th>\n        <td>{{profile.sumTechHighScore}}</td>\n      </tr>\n      <tr>\n        <th>Total Battle High Score</th>\n        <td>{{profile.sumBattleHighScore}}</td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {environment} from '../../../../environments/environment';\nimport {PlayerRatingItem} from '../model/PlayerRatingItem';\nimport {AttributeType, Difficulty} from '../model/OngekiEnums';\nimport {HttpParams} from '@angular/common/http';\nimport {PropertyEntry} from '../../../model/PropertyEntry';\nimport {OngekiMusic} from '../model/OngekiMusic';\nimport {DisplayOngekiProfile} from '../model/OngekiProfile';\n\n@Component({\n  selector: 'app-ongeki-rating',\n  templateUrl: './ongeki-rating.component.html',\n  styleUrls: ['./ongeki-rating.component.css']\n})\nexport class OngekiRatingComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  aimeId = '';\n\n  profile: DisplayOngekiProfile;\n\n  bestList: PlayerRatingItem[] = [];\n  nextList: PlayerRatingItem[] = [];\n  newBestList: PlayerRatingItem[] = [];\n  newNextList: PlayerRatingItem[] = [];\n  hotBestList: PlayerRatingItem[] = [];\n  hotNextList: PlayerRatingItem[] = [];\n\n  allArray = [this.bestList, this.nextList, this.newBestList, this.newNextList, this.hotBestList, this.hotNextList];\n\n  difficulty = Difficulty;\n  attribute = AttributeType;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    const param = new HttpParams().set('aimeId', this.aimeId);\n    this.api.get('api/game/ongeki/profile', param).subscribe(\n      data => this.profile = data,\n      error => this.messageService.notice(error)\n    );\n    this.load('rating_base_best', this.bestList);\n    this.load('rating_base_next', this.nextList);\n    this.load('rating_base_new_best', this.newBestList);\n    this.load('rating_base_new_next', this.newNextList);\n    this.load('rating_base_hot_best', this.hotBestList);\n    this.load('rating_base_hot_next', this.hotNextList);\n  }\n\n  load(key: string, list: PlayerRatingItem[]) {\n    const param = new HttpParams().set('aimeId', this.aimeId).set('key', key);\n    this.api.get('api/game/ongeki/general', param).subscribe(\n      (data: PropertyEntry) => {\n        if (data.propertyValue.indexOf(',') < 0) {\n          this.messageService.notice('Can\\'t read battle data. Please save again in-game');\n        } else {\n          const records = data.propertyValue.split(',');\n          records.forEach(record => {\n            const value = record.split(':');\n            const item: PlayerRatingItem = {\n              musicId: Number(value[0]),\n              level: Number(value[1]),\n              value: Number(value[2]),\n            };\n            this.dbService.getByID<OngekiMusic>('ongekiMusic', item.musicId).then(\n              x => item.musicInfo = x\n            );\n            list.push(item);\n          });\n        }\n      }\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>Rating (TECHNICAL Score)</mat-card-title>\n  <mat-card-content>\n    ONGEKI rating is calculate from 55 songs avg.<br>\n    Including :<br>\n    1. Best 30 chart in all old song.<br>\n    2. Best 15 chart in new song.<br>\n    3. Best 10 chart in recent 30 plays. (Can be same chart, but not include LUNATIC chart)\n  </mat-card-content>\n</mat-card>\n\n<mat-card>\n  <mat-card-content>\n    <div class=\"rating-info\">\n      Current Rating: {{profile ? (profile.playerRating / 100 | number: '1.2-2') : ''}}<br>\n      Highest Rating: {{profile ? (profile.highestRating / 100 | number: '1.2-2') : ''}}\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<mat-card *ngFor=\"let index of [0,2,4]\">\n  <h3>{{index == 0 ? 'Total Best 30' : index == 2 ? 'New Song Best 15' : 'Recent Best 10' }}</h3>\n  <table class=\"zebra battle-point-table\">\n    <thead>\n    <th>Music</th>\n    <th>Level</th>\n    <th>Score</th>\n    </thead>\n    <tbody>\n    <ng-container *ngFor=\"let item of allArray[index]; index as i\">\n      <ng-container *ngTemplateOutlet=\"recordRow; context: {item: item, i: i}\"></ng-container>\n    </ng-container>\n    <tr>\n      <td colspan=\"4\">\n        ===== Next 10 =====\n      </td>\n    </tr>\n    <ng-container *ngFor=\"let item of allArray[index + 1]; index as i\">\n      <ng-container *ngTemplateOutlet=\"recordRow; context: {item: item, i: i}\"></ng-container>\n    </ng-container>\n    </tbody>\n  </table>\n</mat-card>\n\n<ng-template #recordRow let-i=\"i\" let-item=\"item\">\n  <tr *ngIf=\"item.musicId > 0\">\n    <td class=\"music-title\">\n      <img src=\"{{host}}ongeki/jacket/UI_Jacket_{{item.musicId|formatNumber:4}}.png\">\n      {{i + 1}}: {{item.musicInfo ? item.musicInfo.name : 'MusicID:' + item.musicId}}\n    </td>\n    <td>\n      {{difficulty[item.level]}}\n      <ng-container *ngIf=\"item.musicInfo\" [ngSwitch]=\"item.level\">\n        Lv.\n        <ng-container *ngSwitchCase=\"0\">{{item.musicInfo.level0 | toLevelDecimal}}</ng-container>\n        <ng-container *ngSwitchCase=\"1\">{{item.musicInfo.level1 | toLevelDecimal}}</ng-container>\n        <ng-container *ngSwitchCase=\"2\">{{item.musicInfo.level2 | toLevelDecimal}}</ng-container>\n        <ng-container *ngSwitchCase=\"3\">{{item.musicInfo.level3 | toLevelDecimal}}</ng-container>\n        <ng-container *ngSwitchCase=\"4\">{{item.musicInfo.level4 | toLevelDecimal}}</ng-container>\n      </ng-container>\n    </td>\n    <td>\n      {{item.value}}\n    </td>\n  </tr>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {environment} from '../../../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {PlayerPlaylog} from '../model/PlayerPlaylog';\nimport {HttpParams} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {OngekiMusic} from '../model/OngekiMusic';\nimport {AttributeType, BattleRank, Difficulty, TechnicalRank} from '../model/OngekiEnums';\nimport {OngekiCard} from '../model/OngekiCard';\nimport {OngekiCharacter} from '../model/OngekiCharacter';\n\n@Component({\n  selector: 'app-ongeki-recent',\n  templateUrl: './ongeki-recent.component.html',\n  styleUrls: ['./ongeki-recent.component.css']\n})\nexport class OngekiRecentComponent implements OnInit {\n\n  host = environment.assetsHost;\n\n  aimeId: string;\n\n  recent: Observable<PlayerPlaylog[]>;\n  difficulty = Difficulty;\n  battleRank = BattleRank;\n  technicalRank = TechnicalRank;\n  attributeType = AttributeType;\n\n  currentPage = 1;\n  totalElements = 0;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private dbService: NgxIndexedDBService\n  ) {\n  }\n\n  ngOnInit() {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    this.load(this.currentPage);\n  }\n\n  load(page: number) {\n    const param = new HttpParams().set('aimeId', this.aimeId).set('page', String(page - 1));\n    this.recent = this.api.get('api/game/ongeki/recent', param).pipe(\n      tap(\n        data => {\n          this.totalElements = data.totalElements;\n          this.currentPage = page;\n        }\n      ),\n      map(\n        data => {\n          data.content.forEach(x => {\n            x.isTechNewRecord = x.techNewRecord ? x.techNewRecord : x.isTechNewRecord;\n            x.isBattleNewRecord = x.battleNewRecord ? x.battleNewRecord : x.isBattleNewRecord;\n            x.isOverDamageNewRecord = x.overDamageNewRecord ? x.overDamageNewRecord : x.isOverDamageNewRecord;\n            x.isFullCombo = x.fullCombo ? x.fullCombo : x.isFullCombo;\n            x.isAllBreak = x.allBreak ? x.allBreak : x.isAllBreak;\n            x.isFullBell = x.fullBell ? x.fullBell : x.isFullBell;\n            this.dbService.getByID<OngekiMusic>('ongekiMusic', x.musicId).then(\n              m => x.songInfo = m\n            );\n            this.dbService.getByID<OngekiCharacter>('ongekiCharacter', x.bossCharaId).then(\n              m => x.bossCharaInfo = m\n            );\n            this.dbService.getByID<OngekiCard>('ongekiCard', x.cardId1).then(\n              m => x.cardInfo1 = m\n            );\n            this.dbService.getByID<OngekiCard>('ongekiCard', x.cardId2).then(\n              m => x.cardInfo2 = m\n            );\n            this.dbService.getByID<OngekiCard>('ongekiCard', x.cardId3).then(\n              m => x.cardInfo3 = m\n            );\n          });\n          return data.content;\n        },\n        error => this.messageService.notice(error)\n      )\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    Recent Play\n  </mat-card-title>\n</mat-card>\n<div *ngIf=\"recent\" class=\"record\">\n  <mat-card\n    *ngFor=\"let item of recent | async | paginate: { id: 'server', itemsPerPage: 10, currentPage: currentPage, totalItems: totalElements }\"\n    routerLink=\"/ongeki/song/{{item.musicId}}\">\n    <mat-card-title>{{item.userPlayDate}}</mat-card-title>\n    <mat-card-content>\n      <div class=\"song-header\">\n        <img src=\"{{host}}ongeki/jacket/UI_Jacket_{{item.musicId|formatNumber:4}}.png\">\n        <div class=\"song-info\">\n          <span class=\"title\">{{item.songInfo != null ? item.songInfo.name : 'musicId:' + item.musicId}}</span><br>\n          <span\n            class=\"info\">{{item.songInfo != null ? item.songInfo.artistName : ''}}</span>\n        </div>\n        <div class=\"level\">\n          {{difficulty[item.level]}}\n        </div>\n      </div>\n\n      <div class=\"result-content\">\n        <div class=\"left\">\n          <div class=\"score-area\">\n            <div class=\"score-element\">\n              <span class=\"score-label\">BATTLE SCORE</span><br>\n              <span class=\"score-value\">{{item.battleScore}}</span><br>\n              <span *ngIf=\"item.isBattleNewRecord\">NEW RECORD<br></span>\n              <span class=\"score-label\">OVER DAMAGE</span><br>\n              <span class=\"score-value\">{{item.overDamage / 100}}%</span><br>\n              <span *ngIf=\"item.isOverDamageNewRecord\">NEW RECORD<br></span>\n            </div>\n            <div class=\"score-element\">\n              <div class=\"score-rank-icon\">\n                <img [alt]=\"battleRank[item.battleScoreRank]\"\n                     src=\"{{host}}ongeki/gameUi/{{item.battleScoreRank | toBattleSprite}}\">\n              </div>\n            </div>\n          </div>\n          <div class=\"score-area\">\n            <div class=\"score-element\">\n              <span class=\"score-label\">TECHNICAL SCORE</span><br>\n              <span class=\"score-value\">{{item.techScore}}</span><br>\n              <span *ngIf=\"item.isTechNewRecord\">NEW RECORD<br></span>\n            </div>\n            <div class=\"score-element\">\n              <div class=\"score-rank-icon\">\n                <img [alt]=\"technicalRank[item.techScoreRank]\"\n                     src=\"{{host}}ongeki/gameUi/{{item.techScoreRank | toTechSprite}}\">\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"right\">\n          <table class=\"zebra\">\n            <tr>\n              <th>Combo</th>\n              <td>{{item.maxCombo}}</td>\n              <td>TAP</td>\n              <td>{{item.rateTap}}%</td>\n            </tr>\n            <tr>\n              <th>C. BREAK</th>\n              <td>{{item.judgeCriticalBreak}}</td>\n              <td>HOLD</td>\n              <td>{{item.rateHold}}%</td>\n            </tr>\n            <tr>\n              <th>BREAK</th>\n              <td>{{item.judgeBreak}}</td>\n              <td>FLICK</td>\n              <td>{{item.rateFlick}}%</td>\n            </tr>\n            <tr>\n              <th>HIT</th>\n              <td>{{item.judgeHit}}</td>\n              <td>SLIDE TAP</td>\n              <td>{{item.rateSideTap}}%</td>\n            </tr>\n            <tr>\n              <th>MISS</th>\n              <td>{{item.judgeMiss}}</td>\n              <td>SLIDE HOLE</td>\n              <td>{{item.rateSideHold}}%</td>\n            </tr>\n            <tr>\n              <th>BELL</th>\n              <td>{{item.bellCount}} / {{item.totalBellCount}}</td>\n              <td>DAMAGE</td>\n              <td>{{item.damageCount}}</td>\n            </tr>\n          </table>\n        </div>\n        <div class=\"bottom\">\n          <div class=\"bottom-achievement-icon\">\n            <img\n              src=\"{{host}}/ongeki/gameUi/{{item.isFullBell ? 'UI_RES_Score_FB_Badge.png' : 'UI_RES_Score_FB_Base.png'}}\">\n          </div>\n          <div class=\"bottom-achievement-icon\">\n            <img\n              src=\"{{host}}/ongeki/gameUi/{{item.isFullCombo ? 'UI_RES_Score_FC_Badge.png' : 'UI_RES_Score_FC_Base.png'}}\">\n          </div>\n          <div *ngIf=\"item.isAllBreak\" class=\"bottom-achievement-icon\">\n            <img src=\"{{host}}/ongeki/gameUi/UI_RES_Score_AB_Badge.png\">\n          </div>\n        </div>\n      </div>\n      <div class=\"battle-info\">\n        <div class=\"rival-info\">\n          Rival: <span\n          class=\"{{item.bossAttribute | toAttributeClass}}\">{{attributeType[item.bossAttribute]}}\n          █</span> {{item.bossCharaInfo ? item.bossCharaInfo.name : 'ID: ' + item.bossCharaId}}\n          Lv.{{item.bossLevel}}\n        </div>\n        <div class=\"card-deck\">\n          <div class=\"player-card\">\n            <div class=\"player-card-header\">\n              <div class=\"level\">Lv.{{item.cardLevel1}}</div>\n              <div class=\"attack\">ATK {{item.cardAttack1}}</div>\n            </div>\n            <div class=\"player-card-image\">\n              <img src=\"{{host}}ongeki/card/UI_Card_{{item.cardId1|formatNumber:6}}_S.png\">\n            </div>\n          </div>\n          <div class=\"player-card\">\n            <div class=\"player-card-header\">\n              <div class=\"level\">Lv.{{item.cardLevel2}}</div>\n              <div class=\"attack\">ATK {{item.cardAttack2}}</div>\n            </div>\n            <div class=\"player-card-image\">\n              <img src=\"{{host}}ongeki/card/UI_Card_{{item.cardId2|formatNumber:6}}_S.png\">\n            </div>\n          </div>\n          <div class=\"player-card\">\n            <div class=\"player-card-header\">\n              <div class=\"level\">Lv.{{item.cardLevel3}}</div>\n              <div class=\"attack\">ATK {{item.cardAttack3}}</div>\n            </div>\n            <div class=\"player-card-image\">\n              <img src=\"{{host}}ongeki/card/UI_Card_{{item.cardId3|formatNumber:6}}_S.png\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <div class=\"pagination\">\n    <pagination-controls (pageChange)=\"load($event)\" id=\"server\"></pagination-controls>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../../api.service';\nimport {AuthenticationService} from '../../../auth/authentication.service';\nimport {MessageService} from '../../../message.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {HttpParams} from '@angular/common/http';\nimport {DisplayOngekiProfile} from '../model/OngekiProfile';\n\n@Component({\n  selector: 'app-ongeki-setting',\n  templateUrl: './ongeki-setting.component.html',\n  styleUrls: ['./ongeki-setting.component.css']\n})\nexport class OngekiSettingComponent implements OnInit {\n\n  profile: DisplayOngekiProfile;\n\n  aimeId: string;\n  apiServer: string;\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    public dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.aimeId = String(this.auth.currentUserValue.extId);\n    this.apiServer = this.auth.currentUserValue.apiServer;\n    const param = new HttpParams().set('aimeId', this.aimeId);\n    this.api.get('api/game/ongeki/profile', param).subscribe(\n      data => {\n        this.profile = data;\n      },\n      error => this.messageService.notice(error)\n    );\n  }\n\n}\n","<mat-card>\n  <mat-card-title>ONGEKI Settings</mat-card-title>\n</mat-card>\n\n<mat-card>\n  <mat-card-title>Export data</mat-card-title>\n  <mat-card-content>\n    <div class=\"action\">\n      <a href=\"{{apiServer + '/api/game/ongeki/export?aimeId=' + aimeId}}\" mat-button target=\"_blank\">Download</a>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgxIndexedDBService} from 'ngx-indexed-db';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {OngekiMusic} from '../model/OngekiMusic';\n\n@Component({\n  selector: 'app-ongeki-song-list',\n  templateUrl: './ongeki-song-list.component.html',\n  styleUrls: ['./ongeki-song-list.component.css']\n})\nexport class OngekiSongListComponent implements OnInit {\n\n  dataSource = new MatTableDataSource();\n  songList: OngekiMusic[] = [];\n  displayedColumns: string[] = ['id', 'name', 'artistName'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private dbService: NgxIndexedDBService) {\n  }\n\n  ngOnInit() {\n    this.dbService.getAll<OngekiMusic>('ongekiMusic').then(\n      x => {\n        this.songList = x;\n        this.dataSource.data = this.songList;\n      }\n    );\n    this.dataSource.paginator = this.paginator;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-form-field>\n  <input (keyup)=\"applyFilter($event.target.value)\" matInput placeholder=\"Filter\">\n</mat-form-field>\n<table [dataSource]=\"dataSource\" mat-table matSort>\n  <ng-container matColumnDef=\"id\">\n    <th *matHeaderCellDef mat-header-cell> Id.</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.id}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"name\">\n    <th *matHeaderCellDef mat-header-cell> Name</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.name}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"artistName\">\n    <th *matHeaderCellDef mat-header-cell> Artist</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.artistName}} </td>\n  </ng-container>\n  <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n  <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row routerLink=\"/ongeki/song/{{row.musicId}}\"></tr>\n\n</table>\n<mat-paginator [pageSizeOptions]=\"[15, 50, 100]\"></mat-paginator>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {OngekiRoutes} from './ongeki.routing';\nimport {OngekiProfileComponent} from './ongeki-profile/ongeki-profile.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTableModule} from '@angular/material/table';\nimport {OngekiCardComponent} from './ongeki-card/ongeki-card.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {OngekiCardListComponent} from './ongeki-card-list/ongeki-card-list.component';\nimport {OngekiRecentComponent} from './ongeki-recent/ongeki-recent.component';\nimport {ToolsModule} from '../../util/tools.module';\nimport {ToAttributeClassPipe} from './util/to-attribute-class.pipe';\nimport {OngekiSongListComponent} from './ongeki-song-list/ongeki-song-list.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {OngekiBattlePointComponent} from './ongeki-battle-point/ongeki-battle-point.component';\nimport {OngekiRatingComponent} from './ongeki-rating/ongeki-rating.component';\nimport {ToLevelDecimalPipe} from './util/to-level-decimal.pipe';\nimport {ToBattleSpritePipe} from './util/to-battle-sprite.pipe';\nimport {ToTechSpritePipe} from './util/to-tech-sprite.pipe';\nimport {OngekiCardGachaComponent} from './ongeki-card-gacha/ongeki-card-gacha.component';\nimport {OngekiSettingComponent} from './ongeki-setting/ongeki-setting.component';\n\n\n@NgModule({\n  declarations: [\n    OngekiProfileComponent,\n    OngekiCardComponent,\n    OngekiCardListComponent,\n    OngekiRecentComponent,\n    ToAttributeClassPipe,\n    OngekiSongListComponent,\n    OngekiBattlePointComponent,\n    OngekiRatingComponent,\n    ToLevelDecimalPipe,\n    ToBattleSpritePipe,\n    ToTechSpritePipe,\n    OngekiCardGachaComponent,\n    OngekiSettingComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    OngekiRoutes,\n\n    MatCardModule,\n    NgxPaginationModule,\n    MatButtonModule,\n    ToolsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatPaginatorModule,\n    FlexLayoutModule\n  ]\n})\nexport class OngekiModule {\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {OngekiProfileComponent} from './ongeki-profile/ongeki-profile.component';\nimport {OngekiCardComponent} from './ongeki-card/ongeki-card.component';\nimport {OngekiCardListComponent} from './ongeki-card-list/ongeki-card-list.component';\nimport {OngekiRecentComponent} from './ongeki-recent/ongeki-recent.component';\nimport {OngekiSongListComponent} from './ongeki-song-list/ongeki-song-list.component';\nimport {OngekiBattlePointComponent} from './ongeki-battle-point/ongeki-battle-point.component';\nimport {OngekiRatingComponent} from './ongeki-rating/ongeki-rating.component';\nimport {OngekiCardGachaComponent} from './ongeki-card-gacha/ongeki-card-gacha.component';\nimport {OngekiSettingComponent} from './ongeki-setting/ongeki-setting.component';\n\n\nconst routes: Routes = [\n  {path: 'profile', component: OngekiProfileComponent},\n  {path: 'recent', component: OngekiRecentComponent},\n  {path: 'song', component: OngekiSongListComponent},\n  {path: 'battle', component: OngekiBattlePointComponent},\n  {path: 'rating', component: OngekiRatingComponent},\n  {path: 'card', component: OngekiCardComponent},\n  {path: 'card/all', component: OngekiCardListComponent},\n  {path: 'card/gacha', component: OngekiCardGachaComponent},\n  {path: 'setting', component: OngekiSettingComponent},\n];\n\nexport const OngekiRoutes = RouterModule.forChild(routes);\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'toAttributeClass'\n})\nexport class ToAttributeClassPipe implements PipeTransform {\n\n  transform(value: any): string {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'Fire':\n          return 'lv12';\n        case 'Aqua':\n          return 'lv8';\n        case 'Leaf':\n          return 'lv6';\n        case 'Max':\n          return '';\n      }\n    }\n    if (typeof value === 'number') {\n      switch (value) {\n        // Start from 1\n        case 1:\n          return 'lv12';\n        case 2:\n          return 'lv8';\n        case 3:\n          return 'lv6';\n        case 4:\n          return '';\n      }\n    }\n    return '';\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {BattleRank} from '../model/OngekiEnums';\n\n@Pipe({\n  name: 'toBattleSprite'\n})\nexport class ToBattleSpritePipe implements PipeTransform {\n\n\n  transform(value: number): string {\n    switch (BattleRank[value]) {\n      case 'Yu':\n        return 'SB_RES_ScoreStamp_Great.png';\n      case 'Ryo':\n        return 'SB_RES_ScoreStamp_Good.png';\n      case 'Fuka':\n        return 'SB_RES_ScoreStamp_NoGood.png';\n      case 'Shu':\n        return 'SB_RES_ScoreStamp_Excellent.png';\n      case 'Ka':\n        return 'SB_RES_ScoreStamp_Usually.png';\n      case 'Goku':\n        return 'SB_RES_ScoreStamp_Unbelievable.png';\n      case 'Goku1':\n        return 'SB_RES_ScoreStamp_Unbelievable.png';\n      case 'Goku2':\n        return 'SB_RES_ScoreStamp_Unbelievable.png';\n      case 'Goku3':\n        return 'SB_RES_ScoreStamp_Unbelievable.png';\n      case 'Goku4':\n        return 'SB_RES_ScoreStamp_Unbelievable.png';\n      case 'Goku5':\n        return 'SB_RES_ScoreStamp_Unbelievable.png';\n    }\n    return null;\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'toLevelDecimal'\n})\nexport class ToLevelDecimalPipe implements PipeTransform {\n\n  transform(value: string): string {\n    value = value.replace(',', '.');\n    if (value.charAt(value.length - 1) === '0' && value.charAt(value.length - 2) !== '.') {\n      value = value.slice(0, value.length - 1);\n    }\n    return value;\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TechnicalRank} from '../model/OngekiEnums';\n\n@Pipe({\n  name: 'toTechSprite'\n})\nexport class ToTechSpritePipe implements PipeTransform {\n\n  transform(value: number): string {\n    switch (TechnicalRank[value]) {\n      case 'D':\n        return 'SB_RES_ScoreRank_D.png';\n      case 'C':\n        return 'SB_RES_ScoreRank_C.png';\n      case 'B':\n        return 'SB_RES_ScoreRank_B.png';\n      case 'BB':\n        return 'SB_RES_ScoreRank_BB.png';\n      case 'BBB':\n        return 'SB_RES_ScoreRank_BBB.png';\n      case 'A':\n        return 'SB_RES_ScoreRank_A.png';\n      case 'AA':\n        return 'SB_RES_ScoreRank_AA.png';\n      case 'AAA':\n        return 'SB_RES_ScoreRank_AAA.png';\n      case 'S':\n        return 'SB_RES_ScoreRank_S.png';\n      case 'SS':\n        return 'SB_RES_ScoreRank_SS.png';\n      case 'SSS':\n        return 'SB_RES_ScoreRank_SSS.png';\n      case 'SSS1':\n        return 'SB_RES_ScoreRank_SSS+.png';\n    }\n    return null;\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'formatNumber'\n})\nexport class FormatnumberPipe implements PipeTransform {\n\n  public transform(value: number, length?: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n      str = '0' + str;\n    }\n    return str;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormatnumberPipe} from './formatnumber.pipe';\n\n\n@NgModule({\n  declarations: [\n    FormatnumberPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FormatnumberPipe\n  ]\n})\nexport class ToolsModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  assetsHost: '//static.samnyan.icu/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}